pipeline {
//None parameter in the agent section means that no global agent will be allocated for the entire Pipeline’s
//execution and that each stage directive must specify its own agent section.
  agent {
    dockerfile {
      label 'master'
      customWorkspace "/home/jenkins/${env.JOB_NAME}"
      filename 'Dockerfile'
      args "-u root --privileged -v /tmp/_${env.JOB_NAME}/test-reports:/root/test-reports"
    }
  }

  stages {

    stage('Build') {
      steps {
        sh 'pip install --no-cache-dir flit'
        sh 'flit install'
        sh 'pwd'
        sh "find /home/jenkins/ -print"
        sh "ls -al /home/jenkins/${env.JOB_NAME}"
      }
    }

    stage('Test') {
      steps {
        sh "py.test --verbose -o cache_dir=/tmp/.pytest_cache --junit-xml /root/test-reports/results.xml --rootdir=/home/jenkins/${env.JOB_NAME}/tests"
        sh 'rm -rf /tmp/.pytest_cache'
      }
    }

  }

  post {
    // only triggered when blue or green sign
    //success {
    //}
    // triggered when red sign
    //failure {
    //}
    // trigger every-works
    always {
      println "reading report file [/tmp/_${env.JOB_NAME}/test-reports/results.xml]"
      //This junit step archives the JUnit XML report (generated by the py.test command above) and
      //exposes the results through the Jenkins interface.
      //The post section’s always condition that contains this junit step ensures that the step is
      //always executed at the completion of the Test stage, regardless of the stage’s outcome.
      junit "/tmp/_${env.JOB_NAME}/test-reports/results.xml"
    }
  }

}
