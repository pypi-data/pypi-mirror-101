.\" Automatically generated by Pandoc 2.13
.\"
.TH "RDIFF-BACKUP" "1" "April 2021" "Version 2.1.0a1" "User Manual"
.hy
.SH NAME
.PP
\f[B]rdiff-backup\f[R] \[em] local/remote mirror and incremental backup
.SH SYNOPSIS
.PP
\f[B]rdiff-backup\f[R] [options\&...] \f[I]action\f[R]
[\f[I]sub-options\f[R]\&...] [\f[I]locations\f[R]\&...]
.PD 0
.P
.PD
\f[B]rdiff-backup\f[R] [\f[B]--new\f[R]]
[\f[B]-h\f[R]|\f[B]--help\f[R]|\f[B]-V\f[R]|\f[B]--version\f[R]]
.SH DESCRIPTION
.PP
rdiff-backup is a script, written in \f[B]python\f[R](1) that backs up
one directory to another.
The target directory ends up a copy (mirror) of the source directory,
but extra reverse diffs are stored in a special sub-directory of that
target directory, so you can still recover files lost some time ago.
The idea is to combine the best features of a mirror and an incremental
backup.
rdiff-backup also preserves symlinks, special files, hardlinks,
permissions, uid/gid ownership, and modification times.
.PP
rdiff-backup can also operate in a bandwidth efficient manner over a
pipe, like \f[B]rsync\f[R](1).
Thus you can use ssh and rdiff-backup to securely back a hard drive up
to a remote location, and only the differences will be transmitted.
Using the default settings, rdiff-backup requires that the remote system
accept ssh connections, and that rdiff-backup is installed in the
user\[cq]s PATH on the remote system.
See the REMOTE OPERATION section for details.
.PP
Note that you should not write to the mirror directory except with
rdiff-backup.
Many of the increments are stored as reverse diffs, so if you delete or
modify a file, you may lose the ability to restore previous versions of
that file.
.PP
Finally, this man page is intended more as a precise description of the
behavior and syntax of rdiff-backup.
New users may want to check out the examples file included in the
rdiff-backup distribution.
.PP
The rdiff-backup commands knows four types of parameters
.IP "1." 3
generic options valid for all actions,
.IP "2." 3
one action out of \f[B]backup\f[R], \f[B]calculate\f[R],
\f[B]compare\f[R], \f[B]info\f[R], \f[B]list\f[R], \f[B]regress\f[R],
\f[B]remove\f[R], \f[B]restore\f[R], \f[B]server\f[R], \f[B]test\f[R],
\f[B]verify\f[R],
.IP "3." 3
sub-options applicable to each action specifically, even though some are
common to multiple actions,
.IP "4." 3
zero, one, two or more location paths, either local or remote.
.PP
Note that this documents the \f[I]new\f[R] command line interface of
rdiff-backup since 2.1+; for the traditional one, check
\f[B]rdiff-backup-old(1)\f[R] but consider that it is deprecated and
will disappear.
.SS Options
.TP
-h, --help
Prints brief usage information and exits.
Add \f[B]--new\f[R] to be sure to get this CLI description, and not the
old one.
Placed \f[I]after\f[R] the action, outputs the action\[cq]s specific
help message.
.TP
-V, --version
Prints the current version number and exits.
.TP
--api-version \f[I]apiversion\f[R]
Sets the API version to the given integer between minimum and maximum
versions as given by the \f[B]info\f[R] action.
It is the responsibility of the user to make sure that this version is
also supported by any server started by this client.
.TP
--chars-to-quote, --override-chars-to-quote \f[I]chars\f[R]
If the filesystem to which we are backing up is not case-sensitive,
automatic \[lq]quoting\[rq] of characters occurs.
For example, a file `\f[C]Developer.doc\f[R]' will be converted into
`\f[C];068eveloper.doc\f[R]'.
To quote other characters or force quoting, e.g.\ in case rdiff-backup
doesn\[cq]t recognize a case-insensitive file system, you need to
specify this option.
\f[I]chars\f[R] is a string of characters fit to be used in regexp
square brackets (e.g.\ `\f[C]A-Z\f[R]' as in `\f[C][A-Z]\f[R]').
.RS
.PP
\f[B]CAUTION:\f[R] do NOT change the chars to quote within the same
repository! Actually, you only need to set this parameter when creating
a new backup repository.
Do also NOT quote any character used by rdiff-backup in
rdiff-backup-data (any of `a-z0-9._-')!
.RE
.TP
--current-time \f[I]currenttime\f[R]
This option is useful mainly for testing.
If set, rdiff-backup will use it for the current time instead of
consulting the clock.
The argument is the number of seconds since the epoch.
.TP
--force
Authorize a more drastic modification of a directory than usual (for
instance, when overwriting of a destination path, or when removing
multiple sessions with \f[B]remove\f[R]).
rdiff-backup will generally tell you if it needs this.
.RS
.PP
\f[B]CAUTION:\f[R] You can cause data loss if you mis-use this option.
Furthermore, do NOT use this option when doing a restore, as it will
DELETE files, unless you absolutely know what you are doing.
.RE
.TP
--fsync, --no-fsync
This will enable/disable issuing fsync from rdiff-backup altogether.
This option is designed to optimize performance on busy backup systems.
.RS
.PP
\f[B]CAUTION:\f[R] This may render your backup unusable in case of
filesystem failure.
Default is hence for fsync to be enabled.
.RE
.TP
--new, --no-new
enforce (or not) the usage of the new parameters.
The default currently is to show the old usage, but this will change in
the near future.
.TP
--null-separator
Use nulls (\f[C]\[rs]0\f[R]) instead of newlines (\f[C]\[rs]n\f[R]) as
line separators, which may help when dealing with filenames containing
newlines.
This affects the expected format of the files specified by the
\f[B]--{include|exclude}-filelist[-stdin]\f[R] switches as well as the
format of the files statistics.
.TP
--parsable-output
If set, rdiff-backup\[cq]s output will be tailored for easy parsing by
computers, instead of convenience for humans.
Currently this only applies when listing increments using the \f[B]list
increments\f[R] action, where the time will be given in seconds since
the epoch.
.TP
--remote-schema \f[I]remoteschema\f[R]
Specify an alternate method of connecting to a remote computer.
This is necessary to get rdiff-backup not to use ssh for remote backups,
or if, for instance, rdiff-backup is not in the PATH on the remote side.
See the REMOTE OPERATION section for details.
.TP
--remote-tempdir \f[I]dirpath\f[R]
use path as temporary directory on the remote side of the connection.
.TP
--restrict-path \f[I]dirpath\f[R]
Require that all file access be inside the given path.
This switch, and \f[B]--restrict-mode\f[R], are intended to be used with
the \f[B]--server\f[R] switch to provide a bit more protection when
doing automated remote backups.
.RS
.PP
\f[B]CAUTION:\f[R] Those options are \f[I]not\f[R] intended as your only
line of defense so please don\[cq]t do something silly like allow public
access to an rdiff-backup server run with \f[B]--restrict-mode
read-only\f[R].
.RE
.TP
--restrict-mode {\f[B]read-write\f[R],\f[B]read-only\f[R],\f[B]update-only\f[R]}
restriction mode for the directory given by \f[B]--restrict-path\f[R],
either full access (aka read-write), read-only, or only to update
incrementally an already existing back-up (default is
\f[B]read-write\f[R]).
.TP
--ssh-compression, --no-ssh-compression
use SSH with or without compression with default remote-schema.
This option is ignored when using \f[B]--remote-schema\f[R].
Compression is on by default.
.TP
--tempdir \f[I]dirpath\f[R]
Sets the directory that rdiff-backup uses for temporary files to the
given path.
The environment variables TMPDIR, TEMP, and TMP can also be used to set
the temporary files directory.
See the documentation of the Python tempfile module for more
information.
.TP
--terminal-verbosity {\f[B]0\f[R],\f[B]1\f[R],\f[B]2\f[R],\f[B]3\f[R],\f[B]4\f[R],\f[B]5\f[R],\f[B]6\f[R],\f[B]7\f[R],\f[B]8\f[R],\f[B]9\f[R]}
select which verbosity to use for messages on the terminal, the default
is given by \f[B]--verbosity\f[R].
.TP
--use-compatible-timestamps
Create timestamps in which the hour/minute/second separator is a -
(hyphen) instead of a : (colon).
It is safe to use this option on one backup, and then not use it on
another; rdiff-backup supports the intermingling of different timestamp
formats.
This option is enabled by default on platforms which require that the
colon be escaped.
.TP
-v, --verbosity {\f[B]0\f[R],\f[B]1\f[R],\f[B]2\f[R],\f[B]3\f[R],\f[B]4\f[R],\f[B]5\f[R],\f[B]6\f[R],\f[B]7\f[R],\f[B]8\f[R],\f[B]9\f[R]}
Specify verbosity level (0 is totally silent, 3 is the default, and 9 is
noisiest).
This determines how much is written to the log file, and without using
\f[B]--terminal-verbosity\f[R] to the terminal..
.SS Actions
.TP
backup [CREATION OPTIONS] [COMPRESSION OPTIONS] [SELECTION OPTIONS] [FILESYSTEM OPTIONS] [USER GROUP OPTIONS] [STATISTICS OPTIONS] \f[I]sourcedir\f[R] \f[I]targetdir\f[R]
back-up a source directory to a target backup repository.
.TP
calculate [--method \f[B]average\f[R]] \f[I]statfile1\f[R] \f[I]statfile2\f[R] [\&...]
calculate average across multiple statistics files
.RS
.TP
--method \f[B]average\f[R]
there is currently only one method and it is the default, but it might
change in the future.
.RE
.TP
compare [SELECTION OPTIONS] [--method \f[I]method\f[R]] [--at \f[I]time\f[R]] \f[I]sourcedir\f[R] \f[I]targetdir\f[R]
Compare a directory with the backup set at the given time.
This can be useful to see how archived data differs from current data,
or to check that a backup is current.
.RS
.TP
--method \f[I]method\f[R]
method used to compare can be either \f[B]meta\f[R], \f[B]full\f[R] or
\f[B]hash\f[R], where the default is \f[B]meta\f[R], which is also how
rdiff-backup decides which file needs to be backed-up.
Note that with \f[B]full\f[R], the repository data will be copied in its
entirety to the source side and compared byte by byte.
This is the slowest but most complete compare method.
With \f[B]hash\f[R] only the SHA1 checksum of regular files will be
compared.
With \f[B]meta\f[R] only the metadata of files will be compared (name,
size, date, type, etc).
.TP
--at \f[I]time\f[R]
at which \f[I]time\f[R] of the back-up directory should the comparaison
take place.
The default is \f[B]now\f[R], meaning the latest version.
See TIME FORMATS for details.
.RE
.TP
info
outputs information about the current system in YAML format, so that it
can be used in a bug report, and exits.
.TP
list \f[B]files\f[R] [\f[B]--changed-since\f[R] \f[I]time\f[R]|\f[B]--at\f[R] \f[I]time\f[R]] \f[I]repository\f[R]
list modified or existing files in a given back-up repository.
.RS
.TP
--changed-since \f[I]time\f[R]
List the files that have changed in the destination directory since the
given time.
See TIME FORMATS for the format of time.
If a directory in the archive is specified, list only the files under
that directory.
This option does not read the source directory; it is used to compare
the contents of two different rdiff-backup sessions.
See TIME FORMATS for details.
.TP
--at \f[I]time\f[R]
List the files in the archive that were present at the given time.
If a directory in the archive is specified, list only the files under
that directory.
See TIME FORMATS for details.
.RE
.TP
list \f[B]increments\f[R] [\f[B]--no-size\f[R]|\f[B]--size\f[R]] \f[I]repository\f[R]
list increments with date in a given back-up repository.
.RS
.TP
--no-size,--size
Show or not the size of each increment in the repository.
The default is to \f[I]not\f[R] show sizes.
When showing sizes, it becomes allowable to specify a directory within a
repository, then only the cumulated sizes of that directory will be
shown.
.RE
.TP
regress [COMPRESSION OPTIONS] [USER GROUP OPTIONS] [TIMESTAMP OPTIONS] \f[I]repository\f[R]
If an rdiff-backup session fails, this action will undo the failed
directory.
This happens automatically if you attempt to back-up to a directory and
the last backup failed.
.TP
remove \f[B]increments\f[R] \f[B]--older-than\f[R] \f[I]time\f[R]
Remove the incremental backup information in the destination directory
that has been around longer than the given time, or the oldest one if no
time is provided.
.RS
.PP
By default, rdiff-backup will only delete information from one session
at a time.
To remove two or more sessions at the same time, supply the
\f[B]--force\f[R] option (rdiff-backup will tell you if it is required).
.PP
Note that snapshots of deleted files are covered by this operation.
Thus if you deleted a file two weeks ago, backed up immediately
afterwards, and then ran rdiff-backup with
`\f[C]remove increments --older-than 10D\f[R]' today, no trace of that
file would remain.
.TP
--older-than \f[I]time\f[R]
all the increments older than the given time will be deleted.
See TIME FORMATS for details.
.RE
.TP
restore [CREATION OPTIONS] [COMPRESSION OPTIONS] [SELECTION OPTIONS] [FILESYSTEM OPTIONS] [USER GROUP OPTIONS] [\f[B]--at\f[R] \f[I]time\f[R]|\f[B]--increment\f[R]] \f[I]source\f[R] \f[I]targetdir\f[R]
restore a source backup repository at a specific time or a specific
source increment to a target directory.
See RESTORING for details.
.RS
.TP
--at \f[I]time\f[R]
the \f[I]source\f[R] parameter is interpreted as a back-up directory,
and the content is restored from the given time.
See TIME FORMATS for details.
.TP
--increment
the \f[I]source\f[R] parameter is expected to be an increment within a
back-up repository, to be restored into the given target directory.
.RE
.TP
server
Enter server mode (not to be invoked directly, but instead used by
another rdiff-backup process on a remote computer).
.TP
test \f[I]remote_location_1\f[R] [\f[I]remote_location_2\f[R] \&...]
Test for the presence of a compatible rdiff-backup server as specified
in the following remote location argument(s) (of which the filename
section will be ignored).
See the REMOTE OPERATION section for details.
.TP
verify \f[B]--at\f[R] \f[I]time\f[R] \f[I]location\f[R]
Check all the data in the repository at the given time by computing the
SHA1 hash of all the regular files and comparing them with the hashes
stored in the metadata file.
.RS
.TP
--at \f[I]time\f[R]
the time of the data which needs to be verified.
See TIME FORMATS for details.
.RE
.SH COMPRESSION OPTIONS
.TP
--compression, --no-compression
Disable the default gzip compression of most of the \f[C].snapshot\f[R]
and \f[C].diff\f[R] increment files stored in the rdiff-backup-data
directory.
A backup volume can contain compressed and uncompressed increments, so
using this option inconsistently is fine.
.TP
--not-compressed-regexp \f[I]regexp\f[R]
Do not compress increments based on files whose filenames match regexp.
The default includes many common audiovisual and archive files, and may
be found from the help.
.SH CREATION OPTIONS
.TP
--create-full-path
Normally only the final directory of the destination path will be
created if it does not exist.
With this option, all missing directories on the destination path will
be created.
Use this option with care: if there is a typo in the remote path, the
remote filesystem could fill up very quickly (by creating a duplicate
backup tree).
For this reason this option is primarily aimed at scripts which automate
backups.
.SH FILESYSTEM OPTIONS
.TP
--acls, --no-acls
enable/disable back-up of Access Control Lists.
.TP
--carbonfile, --no-carbonfile
enable/disable back-up of carbon files (MacOS X).
.TP
--eas, --no-eas
enable/disable back-up of Extended Attributes.
.TP
--resource-forks, --no-resource-forks
enable/disable back-up of resource forks (MacOS X).
.TP
--hard-links, --no-hard-links
do (or not) keep hard-link relationships between files.
Disabling hard-links generally increases the disk space usage but
decreases memory usage.
Hard-links are disabled by default if the backup source or restore
destination is running on native Windows.
.TP
--compare-inode, --no-compare-inode
This option prevents rdiff-backup from flagging a hardlinked file as
changed when its device number and/or inode changes.
This option is useful in situations where the source filesystem lacks
persistent device and/or inode numbering.
For example, network filesystems may have mount-to-mount differences in
their device number (but possibly stable inode numbers); USB/1394
devices may come up at different device numbers each remount (but would
generally have same inode number); and there are filesystems which
don\[cq]t even have the same inode numbers from use to use.
Without the option rdiff-backup may generate unnecessary numbers of tiny
diff files.
.TP
--never-drop-acls
Exit with error instead of dropping ACLs or ACL entries.
Normally this may happen (with a warning) because the destination does
not support them or because the relevant user/group names do not exist
on the destination side.
.SH SELECTION OPTIONS
.PP
This section only quickly lists the existing options, the section FILE
SELECTION explains those more in details.
.SS Globs, Regex, File lists selection
.TP
--include,--exclude \f[I]glob\f[R]
Include/exclude the file or files matched by \f[I]glob\f[R] (also known
as shell pattern).
If a directory is excluded, then files under that directory will also be
excluded.
.TP
--include-globbing-filelist,--exclude-globbing-filelist \f[I]globsfile\f[R]
Include/exclude according to the listed globs, similar to
\f[B]--include\f[R] or \f[B]--exclude\f[R].
.TP
--include-globbing-filelist-stdin,--exclude-globbing-filelist-stdin
Like the previous option but the list of globs is coming from standard
input.
.TP
--include-regexp,--exclude-regexp \f[I]regexp\f[R]
Include/exclude files matching the given regexp (according to Python
rules).
.TP
--include-filelist,--exclude-filelist \f[I]listfile\f[R]
Include/exclude the files listed in \f[I]filelist\f[R].
This is a best fit for an automatically generated list of files, else
use globbing.
.TP
--include-filelist-stdin,--exclude-filelist-stdin
Like the previous but the filelist is coming from standard input.
.SS Special files selection
.PP
\f[B]NOTE:\f[R] All special files are included by default, so that
including them explicitly isn\[cq]t generally required.
Exceptions are described.
.TP
--include-device-files,--exclude-device-files
Include/exclude all device files.
This can be useful for security/permissions reasons or if rdiff-backup
is not handling device files correctly.
.TP
--include-fifos,--exclude-fifos
Include/exclude all fifo files.
.TP
--include-sockets,--exclude-sockets
Include/exclude all socket files.
.TP
--include-symbolic-links,--exclude-symbolic-links
Include/exclude all symbolic links.
Contrary to the general rule, symlinks are excluded by default under
Windows so that NTFS reparse points aren\[cq]t backed-up.
.TP
--include-special-files,--exclude-special-files
Include/exclude all the special files listed above.
.SS Other selections
.TP
--include-other-filesystems,--exclude-other-filesystems
Include/exclude files on file systems (identified by device number)
other than the file system the root of the source directory is on.
The default is to include other filesystems.
.TP
--include-if-present,--exclude-if-present \f[I]filename\f[R]
Include/exclude directories if they contain the given
\f[I]filename\f[R].
.TP
--max-file-size \f[I]sizeinbytes\f[R]
Exclude files that are larger than the given size in bytes.
.TP
--min-file-size \f[I]sizeinbytes\f[R]
Exclude files that are smaller than the given size in bytes.
.SH STATISTICS OPTIONS
.TP
--file-statistics, --no-file-statistics
Enable/disable writing to the `\f[C]file_statistics\f[R]' file in the
rdiff-backup-data directory.
rdiff-backup will run slightly quicker and take up a bit less space.
Default is to write the statistics file(s).
.RS
.PP
See the FILES section for more information about statistics files.
.RE
.TP
--no-print-statistics, --print-statistics
Summary statistics will be printed (or not) after a successful backup.
Even if disabled (the default), this information will still be available
from the session statistics file.
.SH TIMESTAMP OPTIONS
.TP
--allow-duplicate-timestamps
This option is only to be used if you encounter the issue of metadata
mirrors with the same timestamp.
In such cases, you may use this flag to first recover from the failed
backup with something like
.RS
.IP
.nf
\f[C]
 rdiff-backup --allow-duplicate-timestamps \[rs]
              --check-destination-dir {targetdir}
\f[R]
.fi
.PP
after which you will need to remove those old duplicate entries using
the \f[B]remove increments\f[R] action.
.RE
.SH USER GROUP OPTIONS
.PP
See the USERS AND GROUPS section for more information.
.TP
--group-mapping-file \f[I]mapfile\f[R]
Map group names and IDs according to the group mapping file
\f[I]mapfile\f[R].
.TP
--user-mapping-file \f[I]mapfile\f[R]
Map user names and IDs according to the user mapping file
\f[I]mapfile\f[R].
.TP
--preserve-numerical-ids
If set, rdiff-backup will preserve uids/gids instead of trying to
preserve unames and gnames.
.SH RESTORING
.PP
There are two ways to tell rdiff-backup to restore a file or directory:
.IP "1." 3
you can run rdiff-backup \f[B]restore\f[R] on a mirror file and define a
time from which to restore (by default the latest one).
.IP "2." 3
you can run the \f[B]restore\f[R] action on an increment file with the
sub-option \f[B]--increment\f[R].
.PP
For example, suppose in the past you have run:
.IP
.nf
\f[C]
rdiff-backup backup /usr /usr.backup
\f[R]
.fi
.PP
to back up the `\f[C]/usr\f[R]' directory into the
`\f[C]/usr.backup\f[R]' directory, and now want a copy of the
`\f[C]/usr/local\f[R]' directory the way it was 3 days ago placed at
`\f[C]/usr/local.old\f[R]'.
.PP
One way to do this is to run:
.IP
.nf
\f[C]
rdiff-backup restore --at 3D /usr.backup/local /usr/local.old
\f[R]
.fi
.PP
where above the \[lq]3D\[rq] means 3 days (for other ways to specify the
time, see the TIME FORMATS section).
The `\f[C]/usr.backup/local\f[R]' directory was selected, because that
is the directory containing the current version of
`\f[C]usr/local\f[R]'.
.PP
Note that the parameter of \f[B]--at\f[R] always specifies an exact
time.
(So \[lq]3D\[rq] refers to the moment 72 hours before the present).
If there was no backup made at that time, rdiff-backup restores the
state recorded for the previous backup.
For instance, in the above case, if \[lq]3D\[rq] is used, and there are
only backups from 2 days and 4 days ago, `\f[C]/usr/local\f[R]' as it
was 4 days ago will be restored.
.PP
The second way to restore files involves finding the corresponding
increment file.
It would be in the `\f[C]/backup/rdiff-backup-data/increments/usr\f[R]'
directory, and its name would be something like
`\f[C]local.2002-11-09T12:43:53-04:00.dir\f[R]' where the time indicates
it is from 3 days ago.
Note that the increment files all end in `\f[C].diff\f[R]',
`\f[C].snapshot\f[R]', `\f[C].dir\f[R]', or `\f[C].missing\f[R]', where
`\f[C].missing\f[R]' just means that the file didn\[cq]t exist at that
time (finally, some of these may be gzip-compressed, and have an extra
`\f[C].gz\f[R]' to indicate this).
Then running:
.IP
.nf
\f[C]
rdiff-backup restore --increment \[rs]
    /backup/rdiff-backup-data/increments/usr/local.{time}.dir \[rs]
    /usr/local.old
\f[R]
.fi
.PP
would also restore the file as desired.
.PP
If you are not sure exactly which version of a file you need, it is
probably easiest to either restore from the increments files as
described immediately above, or to see which increments are available
with `\f[C]list increments\f[R]', and then specify an exact time with
\f[B]--at\f[R].
.SH TIME FORMATS
.PP
rdiff-backup uses time strings in two places.
.PP
Firstly, all of the increment files rdiff-backup creates will have the
time in their filenames in the w3 datetime format as described in a w3
note at <https://www.w3.org/TR/NOTE-datetime>.
Basically they look like \[lq]2001-07-15T04:09:38-07:00\[rq], which is
basically
\[lq]{Year}-{Month}-{Day}T{Hours}:{Minutes}:{Seconds}{Timezone}\[rq],
the time zone being 7 hours \f[I]behind\f[R] UTC in this example (hence
the minus).
.PP
Secondly, the \f[B]--at\f[R], \f[B]--changed-since\f[R],
\f[B]--older-than\f[R] options take a time string, which can be given in
any of several formats:
.IP "1." 3
the string \[lq]now\[rq] (refers to the current time)
.IP "2." 3
a sequences of digits, like \[lq]123456890\[rq] (indicating the time in
seconds after the epoch)
.IP "3." 3
A string like \[lq]2002-01-25T07:00:00+02:00\[rq] in datetime format
.IP "4." 3
An interval, which is a number followed by one of the characters s, m,
h, D, W, M, or Y (indicating seconds, minutes, hours, days, weeks,
months, or years respectively), or a series of such pairs.
In this case the string refers to the time that preceded the current
time by the length of the interval.
For instance, \[lq]1h78m\[rq] indicates the time that was one hour and
78 minutes ago.
The calendar here is unsophisticated: a month is always 30 days, a year
is always 365 days, and a day is always 86400 seconds.
.IP "5." 3
A date format of the form \[lq]YYYY/MM/DD\[rq], \[lq]YYYY-MM-DD\[rq],
\[lq]MM/DD/YYYY\[rq], or \[lq]MM-DD-YYYY\[rq], which indicates midnight
on the day in question, relative to the current timezone settings.
For instance, \[lq]2002/3/5\[rq], \[lq]03-05-2002\[rq], and
\[lq]2002-3-05\[rq] all mean March 5th, 2002 (needless to say that
starting with the year is less confusing for non-Americans).
.IP "6." 3
A backup session specification which is a non-negative integer followed
by `\f[C]B\f[R]'.
For instance, `\f[C]0B\f[R]' specifies the time of the current mirror,
and `\f[C]3B\f[R]' specifies the time of the 3rd newest increment.
.SH REMOTE OPERATION
.PP
In order to access remote files, rdiff-backup opens up a pipe to a copy
of rdiff-backup running on the remote machine.
Thus rdiff-backup must be installed on both ends.
To open this pipe, rdiff-backup first splits the location into
`\f[C]host_info::pathname\f[R]'.
It then substitutes `\f[C]host_info\f[R]' into the remote schema, and
runs the resulting command, reading its input and output.
.PP
The default remote schema is
`\f[C]ssh -C {h} rdiff-backup --server\f[R]' where `\f[C]host_info\f[R]'
is substituted for `\f[C]{h}\f[R]'.
So if the `\f[C]host_info\f[R]' is `\f[C]user\[at]host.net\f[R]', then
rdiff-backup runs
`\f[C]ssh user\[at]host.net rdiff-backup --server\f[R]'.
Using \f[B]--remote-schema\f[R], rdiff-backup can invoke an arbitrary
command in order to open up a remote pipe.
For instance,
.IP
.nf
\f[C]
rdiff-backup backup --remote-schema \[aq]cd /usr; {h}\[aq] \[rs]
                    foo \[aq]rdiff-backup --server\[aq]::bar
\f[R]
.fi
.PP
is basically equivalent to (but slower than)
.IP
.nf
\f[C]
rdiff-backup backup foo /usr/bar
\f[R]
.fi
.PP
Concerning quoting, if for some reason you need to put two consecutive
colons in the `\f[C]host_info\f[R]' section of a
`\f[C]host_info::pathname\f[R]' argument, or in the pathname of a local
file, you can quote one of them by prepending a backslash.
So in `\f[C]a\[rs]::b::c\f[R]', `\f[C]host_info\f[R]' is
`\f[C]a::b\f[R]' and the pathname is `\f[C]c\f[R]'.
Similarly, if you want to refer to a local file whose filename contains
two consecutive colons, like `\f[C]strange::file\f[R]', you\[cq]ll have
to quote one of the colons as in `\f[C]strange\[rs]::file\f[R]'.
Because the backslash is a quote character in these circumstances, it
too must be quoted to get a literal backslash, so
`\f[C]foo\[rs]::\[rs]\[rs]bar\f[R]' evaluates to
`\f[C]foo::\[rs]bar\f[R]'.
To make things more complicated, because the backslash is also a common
shell quoting character, you may need to type in
`\f[C]\[rs]\[rs]\[rs]\[rs]\f[R]' at the shell prompt to get a literal
backslash.
.PP
You may also use the placehoders `\f[C]{vx}\f[R]', `\f[C]{vy}\f[R]' and
`\f[C]{vz}\f[R]' for the `\f[C]x.y.z\f[R]' version of rdiff-backup, so
that you can have multiple versions of rdiff-backup installed on the
server, and automatically targeted from the client.
.PP
For example, if you have rdiff-backup 2.1.5 and 2.2.1 installed in
virtual environments on the server, respectively under
`\f[C]/usr/local/lib/rdiff-backup-2.0\f[R]' and
`\f[C]/usr/local/lib/rdiff-backup-2.1\f[R]' (we assume that the
z-Version isn\[cq]t relevant to any kind of compatibility), then the
client may be called with the following remote schema:
.IP
.nf
\f[C]
ssh -C {h} /usr/local/lib/rdiff-backup-{vx}.{vy} --server
\f[R]
.fi
.PP
The client will then use the correct version of rdiff-backup based on
its own version `\f[C]x.y.z\f[R]'.
You\[cq]ll find more explanations in the \f[B]migration.md\f[R] file in
the documentation.
.PP
And finally, to include a literal `\f[C]%\f[R]' in the string specified
by \f[B]--remote-schema\f[R], quote it with another `\f[C]%\f[R]', as in
`\f[C]%%\f[R]' (this is due to the compatibility with the deprecated
host placeholder `\f[C]%s\f[R]', which you shouldn\[cq]t use anymore).
.PP
Although ssh itself may be secure, using rdiff-backup in the default way
presents some security risks.
For instance if the server is run as root, then an attacker who
compromised the client could then use rdiff-backup to overwrite
arbitrary server files by \[lq]backing up\[rq] over them.
Such a setup can be made more secure by using the sshd configuration
option `\f[C]command=\[dq]rdiff-backup --server\[dq]\f[R]' possibly
along with the \f[B]--restrict-path\f[R] and \f[B]--restrict-mode\f[R]
options to rdiff-backup.
For more information, see the web page, the wiki, and the entries for
those options on this man page.
.SH FILE SELECTION
.PP
rdiff-backup has a number of file selection options.
When rdiff-backup is run, it searches through the given source directory
and backs up all the files matching the specified options.
This selection system may appear complicated, but it is supposed to be
flexible and easy-to-use.
If you just want to learn the basics, first look at the selection
examples in the examples.html file included in the package, or on the
web at <https://rdiff-backup.net/docs/examples.html>.
.PP
rdiff-backup\[cq]s selection system was originally inspired by
\f[B]rsync\f[R](1), but there are many differences.
For instance, trailing backslashes have no special significance.
.PP
\f[B]IMPORTANT:\f[R] include and exclude patterns under Windows solely
support slashes `\f[C]/\f[R]' as file separators, given that backslashes
`\f[C]\[rs]\f[R]' have a special meaning in regex/glob patterns.
.PP
All the available file selection conditions are listed under SELECTION
OPTIONS.
.PP
Two principles need to be understood before really starting:
.IP "1." 3
pattern matching is stupid about paths, it just does pattern matching
and can\[cq]t interpret patterns like path, especially it can\[cq]t
resolve absolute into relative paths and vice-versa (compare with the
`\f[C]-path\f[R]' option of find).
.IP "2." 3
pattern matching is done on the complete path of each found file (no
partial matching and no file name matching).
Beware that complete path does \f[I]not\f[R] mean full path, it can be a
complete relative path.
.PP
For example, the pattern `\f[C]bar\f[R]' matches the path
`\f[C]bar\f[R]', but doesn\[cq]t match the path `\f[C]foo/bar\f[R]' and
neither the path `\f[C]./bar\f[R]'.
Both are matched by the pattern `\f[C]*/bar\f[R]', as well as by
`\f[C]**/bar\f[R]'.
This last pattern would match any path containing the file
`\f[C]bar\f[R]', e.g.\ `\f[C]foo/boz/bar\f[R]'.
.PP
Each file selection condition either matches or doesn\[cq]t match a
given file.
A given file is excluded by the file selection system exactly when the
first matching file selection condition specifies that the file be
excluded; otherwise the file is included.
When backing up, if a file is excluded, rdiff-backup acts as if that
file does not exist in the source directory.
When restoring, an excluded file is considered not to exist in either
the source or target directories.
.PP
For instance,
.IP
.nf
\f[C]
rdiff-backup backup --include /usr \[rs]
                    --exclude /usr /usr /backup
\f[R]
.fi
.PP
is exactly the same as
.IP
.nf
\f[C]
rdiff-backup backup /usr /backup
\f[R]
.fi
.PP
because the include and exclude directives match exactly the same files,
and the \f[B]--include\f[R] comes first, giving it precedence.
Similarly,
.IP
.nf
\f[C]
rdiff-backup backup --include /usr/local/bin \[rs]
                    --exclude /usr/local /usr /backup
\f[R]
.fi
.PP
would backup the `\f[C]/usr/local/bin\f[R]' directory (and its
contents), but not `\f[C]/usr/local/doc\f[R]'.
.PP
The include, exclude, include-globbing-filelist, and
exclude-globbing-filelist options accept extended shell globbing
patterns.
These patterns can contain the special patterns `\f[C]*\f[R]',
`\f[C]**\f[R]', `\f[C]?\f[R]', and `\f[C][...]\f[R]'.
As in a normal shell, `\f[C]*\f[R]' can be expanded to any string of
characters not containing `\f[C]/\f[R]', `\f[C]?\f[R]' expands to any
character except `\f[C]/\f[R]', and `\f[C][...]\f[R]' expands to a
single character of those characters specified (ranges are acceptable).
The new special pattern, `\f[C]**\f[R]', expands to any string of
characters whether or not it contains `\f[C]/\f[R]'.
Furthermore, if the pattern starts with `\f[C]ignorecase:\f[R]' (case
insensitive), then this prefix will be removed and any character in the
string can be replaced with an upper- or lowercase version of itself.
.PP
If you need to match filenames which contain the above globbing
characters, they may be escaped using a backslash `\f[C]\[rs]\f[R]'.
The backslash will only escape the character following it so for
`\f[C]**\f[R]' you will need to use `\f[C]\[rs]*\[rs]*\f[R]' to avoid
escaping it to the `\f[C]*\f[R]' globbing character.
.PP
Remember that you may need to quote these characters when typing them
into a shell, so the shell does not interpret the globbing patterns
before rdiff-backup sees them.
.PP
The \f[B]--exclude\f[R] \f[I]pattern\f[R] option matches a file if and
only if:
.IP "1." 3
pattern can be expanded into the file\[cq]s filename, or
.IP "2." 3
the file is inside a directory matched by the option.
.PP
Conversely, \f[B]--include\f[R] \f[I]pattern\f[R] matches a file if and
only if:
.IP "1." 3
pattern can be expanded into the file\[cq]s filename,
.IP "2." 3
the file is inside a directory matched by the option, or
.IP "3." 3
the file is a directory which contains a file matched by the option.
.PP
For example,
.IP
.nf
\f[C]
--exclude /usr/local
\f[R]
.fi
.PP
matches `\f[C]/usr/local\f[R]', `\f[C]/usr/local/lib\f[R]', and
`\f[C]/usr/local/lib/netscape\f[R]'.
It is the same as
.IP
.nf
\f[C]
--exclude /usr/local --exclude \[aq]/usr/local/**\[aq]
\f[R]
.fi
.PP
And similarly:
.IP
.nf
\f[C]
--include /usr/local
\f[R]
.fi
.PP
specifies that `\f[C]/usr\f[R]', `\f[C]/usr/local\f[R]',
`\f[C]/usr/local/lib\f[R]', and `\f[C]/usr/local/lib/netscape\f[R]' (but
not `\f[C]/usr/doc\f[R]') all be backed up.
Thus you don\[cq]t have to worry about including parent directories to
make sure that included subdirectories have somewhere to go.
Finally,
.IP
.nf
\f[C]
--include ignorecase:\[aq]/usr/[a-z0-9]foo/*/**.py\[aq]
\f[R]
.fi
.PP
would match a file like `\f[C]/usr/5fOO/hello/there/world.py\f[R]'.
If it did match anything, it would also match `\f[C]/usr\f[R]'.
If there is no existing file that the given pattern can be expanded
into, the option will not match `\f[C]/usr\f[R]'.
.PP
The \f[B]--include-filelist\f[R], \f[B]--exclude-filelist\f[R],
\f[B]--include-filelist-stdin\f[R], and
\f[B]--exclude-filelist-stdin\f[R] options also introduce file selection
conditions.
They direct rdiff-backup to read in a file, each line of which is a file
specification, and to include or exclude the matching files.
Lines are separated by newlines or nulls, depending on whether the
\f[B]--null-separator\f[R] switch was given.
Each line in a filelist is interpreted similarly to the way extended
shell patterns are, with a few exceptions:
.IP "1." 3
Globbing patterns like `\f[C]*\f[R]', `\f[C]**\f[R]', `\f[C]?\f[R]', and
`\f[C][...]\f[R]' are not expanded.
\[cq]
.IP "2." 3
Include patterns do not match files in a directory that is included.
So `\f[C]/usr/local\f[R]' in an include file will not match
`\f[C]/usr/local/doc\f[R]'.
.IP "3." 3
Lines starting with `+ [\&...]' (plus followed by a space) are
interpreted as include directives, even if found in a filelist
referenced by \f[B]--exclude-filelist\f[R].
Similarly, lines starting with `- [\&...]' (minus followed by a space)
exclude files even if they are found within an include filelist.
.PP
For example, if the file `\f[C]list.txt\f[R]' contains the lines:
.IP
.nf
\f[C]
/usr/local
- /usr/local/doc
/usr/local/bin
+ /var
- /var
\f[R]
.fi
.PP
then `\f[C]--include-filelist list.txt\f[R]' would include
`\f[C]/usr\f[R]', `\f[C]/usr/local\f[R]', and
`\f[C]/usr/local/bin\f[R]'.
It would exclude `\f[C]/usr/local/doc\f[R]',
`\f[C]/usr/local/doc/python\f[R]', etc.
It neither excludes nor includes `\f[C]/usr/local/man\f[R]', leaving the
fate of this directory to the next specification condition.
Finally, it is undefined what happens with \f[C]\[aq]/var\f[R]\[cq].
A single file list should not contain conflicting file specifications.
.PP
The \f[B]--include-globbing-filelist\f[R] and
\f[B]--exclude-globbing-filelist\f[R] options also specify filelists,
but each line in the filelist will be interpreted as a globbing pattern
the way \f[B]--include\f[R] and \f[B]--exclude\f[R] options are
interpreted (although `\f[C]+\f[R]' and `\f[C]-\f[R]' prefixing is still
allowed).
For instance, if the file `\f[C]globbing-list.txt\f[R]' contains the
lines:
.IP
.nf
\f[C]
dir/foo
\f[R]
.fi
.PP
Then `\f[C]--include-globbing-filelist globbing-list.txt\f[R]' would be
exactly the same as specifying on the command line:
.IP
.nf
\f[C]
--include dir/foo --include dir/bar --exclude **
\f[R]
.fi
.PP
Finally, the \f[B]--include-regexp\f[R] and \f[B]--exclude-regexp\f[R]
allow files to be included and excluded if their filenames match a
python regular expression.
Regular expression syntax is too complicated to explain here, but is
covered in Python\[cq]s library reference.
Unlike the \f[B]--include\f[R] and \f[B]--exclude\f[R] options, the
regular expression options don\[cq]t match files containing or contained
in matched files.
So for instance
.IP
.nf
\f[C]
--include \[aq][0-9]{7}(?!foo)\[aq]
\f[R]
.fi
.PP
matches any files whose full pathnames contain 7 consecutive digits
which aren\[cq]t followed by `foo'.
However, it wouldn\[cq]t match `\f[C]/home\f[R]' even if
`\f[C]/home/ben/1234567\f[R]' existed.
.SH USERS AND GROUPS
.PP
There can be complications preserving ownership across systems.
For instance the username that owns a file on the source system may not
exist on the destination.
Here is how rdiff-backup maps ownership on the source to the destination
(or vice-versa, in the case of restoring):
.IP "1." 3
If the \f[B]--preserve-numerical-ids\f[R] option is given, the remote
files will always have the same uid and gid, both for ownership and ACL
entries.
This may cause unames and gnames to change.
.IP "2." 3
Otherwise, attempt to preserve the user and group names for ownership
and in ACLs.
This may result in files having different uids and gids across systems.
.IP "3." 3
If a name cannot be preserved (e.g.\ because the username does not
exist), preserve the original id, but only in cases of user and group
ownership.
For ACLs, omit any entry that has a bad user or group name.
.IP "4." 3
The \f[B]--user-mapping-file\f[R] and \f[B]--group-mapping-file\f[R]
options override this behavior.
If either of these options is given, the policy described in 2 and 3
above will be followed, but with the mapped user and group instead of
the original.
If you specify both \f[B]--preserve-numerical-ids\f[R] and one of the
mapping options, the behavior is undefined.
.PP
The user and group mapping files both have the same format:
.IP
.nf
\f[C]
old_name_or_id1:new_name_or_id1
old_name_or_id2:new_name_or_id2
[...etc...]
\f[R]
.fi
.PP
Each line should contain a name or id, followed by a colon
`\f[C]:\f[R]', followed by another name or id.
If a name or id is not listed, they are treated in the default way
described above.
.PP
When restoring, the above behavior is also followed, but note that the
original source user/group information will be the input, not the
already mapped user/group information present in the backup repository.
For instance, suppose you have mapped all the files owned by alice in
the source so that they are owned by ben in the repository, and now you
want to restore, making sure the files owned originally by alice are
still owned by alice.
In this case there is no need to use any of the mapping options.
However, if you wanted to restore the files so that the files originally
owned by alice on the source are now owned by ben, you would have to use
the mapping options, even though you just want the unames of the
repository\[cq]s files preserved in the restored files.
.PP
See USER GROUP OPTIONS for a list and description of related options.
.SH FILES
.TP
\f[I]any-config-file\f[R]
you can create a file with one option/action/sub-option per line and use
it on the command line with an ampersand prefix like
\f[I]\[at]any-config-file\f[R] and its content will be interpreted as if
given on the command line.
.RS
.PP
For example, creating a file `\f[C]mybackup\f[R]' with following
content:
.IP
.nf
\f[C]
--verbosity
5
backup
source_dir
target_dir
\f[R]
.fi
.PP
and calling `\f[C]rdiff-backup \[at]mybackup\f[R]' will be the same as
calling
`\f[C]rdiff-backup --verbosity 5 backup source_dir target_dir\f[R]'.
.RE
.TP
\f[B]session_statistics\f[R], \f[B]file_statistics\f[R]
Every session rdiff-backup saves various statistics into two files, the
session statistics file at
`\f[C]rdiff-backup-data/session_statistics.{datetime}.data\f[R]' and the
files statistics at
`\f[C]rdiff-backup-data/directory_statistics.{datetime}.data\f[R]'.
They are both text files and contain similar information: how many files
changed, how many were deleted, the total size of increment files
created, etc.
However, the session statistics file is intended to be very readable and
only describes the session as a whole.
The files statistics file is more compact (and slightly less readable)
but describes every directory backed up.
It also may be compressed to save space.
.RS
.PP
See also STATISTICS OPTIONS and the \f[B]--null-separator\f[R] option.
.RE
.TP
\f[B]backup.log\f[R], \f[B]restore.log\f[R], \f[B]error_log\f[R]
rdiff-backup will save various messages to the log file, which is
`\f[C]rdiff-backup-data/backup.log\f[R]' for backup sessions and
`\f[C]rdiff-backup-data/restore.log\f[R]' for restore sessions.
Generally what is written to this file will coincide with the messages
displayed to stdout or stderr, although this can be changed with the
\f[B]--terminal-verbosity\f[R] option.
.RS
.PP
Errors during backup are also written to a file
`\f[C]rdiff-backup-data/error_log.{datetime}.data\f[R]'.
.PP
The log files are not compressed and can become quite large if
rdiff-backup is run with high verbosity.
.RE
.SH ENVIRONMENT
.TP
\f[B]RDIFF_BACKUP_VERBOSITY\f[R]=\f[I][0-9]\f[R]
the default verbosity for log file and terminal, can be overwritten by
the corresponding options \f[B]-v/--verbosity\f[R] and
\f[B]--terminal-verbosity\f[R].
.SH BUGS
.TP
See GitHub issues:
<https://github.com/rdiff-backup/rdiff-backup/issues>
.TP
In doubt subscribe to and ask the mailing list:
<https://lists.nongnu.org/mailman/listinfo/rdiff-backup-users>
.SH SEE ALSO
.PP
\f[B]python\f[R](1), \f[B]rdiff\f[R](1), \f[B]rsync\f[R](1),
\f[B]ssh\f[R](1).
.PP
The main rdiff-backup web page is at <https://rdiff-backup.net/>.
It has more documentation, links to the mailing list and source code.
.SH AUTHORS
Ben Escoto <ben@emerose.org>; Eric Lavarde <ewl+rdiffbackup@lavar.de>.
