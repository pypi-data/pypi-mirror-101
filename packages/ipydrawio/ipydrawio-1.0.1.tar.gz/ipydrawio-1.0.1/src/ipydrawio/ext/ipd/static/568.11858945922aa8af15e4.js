(self.webpackChunk_deathbeds_ipydrawio=self.webpackChunk_deathbeds_ipydrawio||[]).push([[568,387],{317:(e,a,i)=>{"use strict";i.d(a,{Z:()=>s});var t=i(609),o=i.n(t)()((function(e){return e[1]}));o.push([e.id,'/**\n  Copyright 2021 ipydrawio contributors\n\n  Licensed under the Apache License, Version 2.0 (the "License");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an "AS IS" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n**/\n\n.jp-IPyDiagram .jp-Diagram {\n  position: absolute;\n}\n',""]);const s=o},568:(e,a,i)=>{"use strict";i.r(a),i.d(a,{BINARY_FACTORY:()=>t.mD,CMD_NS:()=>t.sr,CommandIds:()=>t.OF,DEBUG:()=>t.eM,DEBUG_LEVEL:()=>t.e4,DIAGRAM_MENU_RANK:()=>t.pj,DRAWIO_ICON_CLASS_RE:()=>t.zw,DRAWIO_ICON_SVG:()=>t.zY,IDiagramManager:()=>t.rY,IPYDRAWIO_METADATA:()=>t.tm,JSON_FACTORY:()=>t.Yg,MX_APP_MODEL_EVENTS:()=>t.GE,MX_EDITOR_EVENTS:()=>t.lq,MX_GRAPH_EVENTS:()=>t.wO,MX_GRAPH_MODEL_EVENTS:()=>t.qp,MX_GRAPH_PAN_EVENTS:()=>t.Fy,MX_GRAPH_SELECT_EVENTS:()=>t.up,MX_GRAPH_SELECT_MODEL_EVENTS:()=>t.gZ,MX_GRAPH_VIEW_EVENTS:()=>t.Bx,NS:()=>t.NS,PLUGIN_ID:()=>t.Uu,TEXT_FACTORY:()=>t.fO,UI_THEMES:()=>t.oP,VERSION:()=>t.q4,ALL_BINARY_FORMATS:()=>o.W6,ALL_FORMATS:()=>o.t6,ALL_MIME_FORMATS:()=>o.WY,ALL_TEXT_FORMATS:()=>o.WB,PNG_EDITABLE:()=>o.GS,PNG_PLAIN:()=>o.QL,SVG_EDITABLE:()=>o.R3,SVG_PLAIN:()=>o.nm,XML_LEGACY:()=>o.Fn,XML_NATIVE:()=>o.Fl,drawioIcon:()=>o.EH,drawioPlainIcon:()=>o.Wy,drawioPngIcon:()=>o.TI,drawioSvgIcon:()=>o.Hx,DiagramModel:()=>s.DiagramModel,DiagramView:()=>s.DiagramView,XMLModel:()=>s.XMLModel,XMLView:()=>s.XMLView});var t=i(36),o=i(557),s=i(387)},387:(e,a,i)=>{"use strict";i.r(a),i.d(a,{DiagramModel:()=>M,DiagramView:()=>S,XMLModel:()=>_,XMLView:()=>u});var t=i(361),o=i(797),s=i(81),r=i(706),n=i(134),l=i(649),d=i(36),g=i(402),c=i.n(g),h=i(317);c()(h.Z,{insert:"head",singleton:!1}),h.Z.locals;const p={gapi:0,gl:0,noExitBtn:1,noSaveBtn:1,od:0,stealth:1,tr:0,ui:"min",format:0,p:"ex;tips;svgdata;sql;anim;trees;replay;anon;flow;webcola;tags"},m={compressXml:!1,showStartScreen:!1,override:!0};class _ extends s.WidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:_.model_name,_model_module:d.NS,_model_module_version:d.q4,_view_name:_.view_name,_view_module:d.NS,_view_module_version:d.q4,value:'<mxfile version="13.3.6">\n<diagram id="x" name="Page-1">\n    <mxGraphModel dx="1450" dy="467" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">\n    <root>\n        <mxCell id="0"/>\n        <mxCell id="1" parent="0"/>\n    </root>\n    </mxGraphModel>\n</diagram>\n</mxfile>\n'})}}_.model_name="XMLModel",_.model_module=d.NS,_.model_module_version=d.q4,_.view_name="XMLView",_.view_module=d.NS,_.view_module_version=d.q4;class u extends s.WidgetView{}class M extends r.$Q{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:M.model_name,_model_module:d.NS,_model_module_version:d.q4,_view_name:M.view_name,_view_module:d.NS,_view_module_version:d.q4,scroll_x:0,scroll_y:0,zoom:1,page_ids:[],selected_page:0,selected_cells:[],grid_enabled:!0,grid_color:"#66666666",grid_size:10,url_params:p,config:m,page_format:{x:0,y:0,width:850,height:1100}})}initialize(e,a){super.initialize(e,a)}}M.model_name="DiagramModel",M.model_module=d.NS,M.model_module_version=d.q4,M.view_name="DiagramView",M.view_module=d.NS,M.view_module_version=d.q4,M.serializers=Object.assign(Object.assign({},r.$Q.serializers),{source:{deserialize:s.unpack_models}});class S extends r.k8{constructor(){super(...arguments),this.onModelZoom=()=>{const{view:e}=this.app.editor.graph,a=this.model.get("zoom");e.getScale()!==a&&e.setScale(a)},this.onModelScroll=()=>{const{view:e}=this.app.editor.graph,a=this.model.get("scroll_x"),i=this.model.get("scroll_y"),t=e.getTranslate();t.x===a&&t.y===i||e.setTranslate(a,i)},this.onModelPageFormat=()=>{const e=this.model.get("page_format"),a=this.app.editor.graph.pageFormat;o.JSONExt.deepEqual(e,a)||(d.eM&&console.warn("pageFormat",e),this.app.setPageFormat(Object.assign({},e)))},this.onModelPageSelected=()=>{this.app.selectPage(this.app.pages[this.model.get("current_page")])},this.onModelGridEnabled=()=>{this.app.editor.graph.setGridEnabled(this.model.get("grid_enabled")),this.app.editor.graph.refresh()},this.onModelGridSize=()=>{this.app.editor.graph.setGridSize(this.model.get("grid_size")),this.app.editor.graph.refresh()},this.onModelGridColor=()=>{this.app.setGridColor(this.model.get("grid_color"))},this.onModelSelectedCells=()=>{const e=this.model.get("selected_cells").reduce(((e,a)=>[...e,...this.app.editor.graph.getCellsById(a)]),[]);this.app.editor.graph.selectionModel.setCells(e)},this.onDrawioEvent=(e,a)=>{let i={};switch(a.name){case"change":i={selected_cells:this.app.editor.graph.selectionModel.cells.map((e=>e.getId()))};break;case"scale":case"scaleAndTranslate":i={zoom:this.app.editor.graph.view.getScale()};break;case"pan":case"translate":case"size":i=this.translateToScroll();break;case"pageSelected":i={current_page:this.app.pages.indexOf(this.app.currentPage),page_ids:this.app.pages.map((e=>e.getId()))};break;case"pageFormatChanged":i={page_format:this.app.editor.graph.pageFormat};break;case"gridEnabledChanged":i={grid_enabled:this.app.editor.graph.gridEnabled};break;case"gridSizeChanged":i={grid_size:this.app.editor.graph.gridSize};break;case"gridColorChanged":i={grid_color:this.app.editor.graph.view.gridColor};break;case"fireMouseEvent":break;default:d.eM&&console.warn("unhandled",a.name,a,"from",e)}const t={};for(const e of Object.keys(i))t[e]=this.model.attributes[e];o.JSONExt.deepEqual(t,i)||(this.model.set(i),this.touch())}}initialize(e){super.initialize(e)}render(){super.render(),this.pWidget.addClass("jp-IPyDiagram");const e=setInterval((()=>{this.pWidget.isVisible&&(clearInterval(e),this.initDiagram(),this.pWidget.addWidget(this.diagram),this.diagram.onContentChanged(),this.diagram.onAfterShow(),this.model.on("change:source",this.onModelSourceChange,this),this.onModelSourceChange())}),100)}onModelSourceChange(){const e=this.model.changed.source;null!=e&&e.off("change:value",this.onSourceValue,this);const a=this.model.get("source");null!=a&&a.on("change:value",this.onSourceValue,this)}onSourceValue(){d.eM&&console.warn("change:value"),this.diagram.onContentChanged()}initDiagram(){d.eM&&console.warn("creating diagram widget");const e=S.diagrmManager.formatForModel({path:"widget.dio"});this.diagram=new l.S({adapter:{saveNeedsExport:()=>!1,drawioUrl:()=>n.DRAWIO_URL,drawioConfig:()=>this.model.get("config"),urlParams:()=>this.model.get("url_params"),format:()=>e,toXML:()=>this.xml(),fromXML:e=>{(this.xml()||"").trim()!==(e||"").trim()&&this.xml(e)}}}),this.diagram.appChanged.connect(this.onAppChanged,this)}xml(e){const a=this.model.get("source");if(null==e)return null==a?void 0:a.get("value");null!=a&&(a.set({value:e}),a.save_changes(this.callbacks()))}onAppChanged(){const{app:e}=this.diagram;if(!e)return;d.eM&&console.warn("installing handlers on",e);const{editor:a}=e,{graph:i}=a,{view:o,model:s,panningHandler:r,selectionModel:n}=i,l=[{src:e,evts:d.GE},{src:a,evts:d.lq},{src:i,evts:d.wO},{src:o,evts:d.Bx},{src:s,evts:d.qp},{src:r,evts:d.Fy},{src:n,evts:d.up}];for(const{src:e,evts:a}of l)for(const i of a)e.addListener(i,this.onDrawioEvent);const g={limit:10};[{evt:"change:zoom",fn:this.onModelZoom},{evt:"change:scroll_x change:scroll_y",fn:this.onModelScroll},{evt:"change:page_format",fn:this.onModelPageFormat},{evt:"change:current_page",fn:this.onModelPageSelected},{evt:"change:grid_enabled",fn:this.onModelGridEnabled},{evt:"change:grid_size",fn:this.onModelGridSize},{evt:"change:grid_color",fn:this.onModelGridColor},{evt:"change:selected_cells",fn:this.onModelSelectedCells}].forEach((({evt:e,fn:a})=>{const i=new t.eD(a,g);this.model.on(e,(()=>i.invoke()),this)}))}get app(){return this.diagram.app}translateToScroll(){const{x:e,y:a}=this.app.editor.graph.view.getTranslate();return{scroll_x:e,scroll_y:a}}}}}]);