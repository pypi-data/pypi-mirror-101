{"version":3,"sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/components/teamSelect.tsx","webpack:///./app/views/settings/project/projectTeams.tsx"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","TeamSelect","state","loading","teams","fetchTeams","debounce","query","api","organization","requestPromise","slug","per_page","TEAMS_PER_PAGE","setState","DEFAULT_DEBOUNCE_DURATION","handleQueryUpdate","event","target","value","handleAddTeam","option","team","find","tm","onAddTeam","handleRemove","teamSlug","onRemoveTeam","options","disabled","selectedTeams","menuHeader","isDisabled","length","filter","includes","map","index","searchKey","label","TeamDropdownElement","items","busyItemsStillVisible","onChange","onSelect","emptyMessage","t","alignMenu","isOpen","aria-label","size","confirmLastTeamRemoveMessage","confirmMessage","TeamRow","key","orgId","onRemove","hasButtons","renderTeamAddDropDown","renderBody","TeamPanelItem","StyledLink","to","message","bypass","onConfirm","isCircled","PanelItem","Link","withApi","ProjectTeams","canCreateTeam","access","Set","has","params","projectId","removeTeamFromProject","then","handleRemovedTeam","addErrorMessage","prevState","projectTeams","handleAddedTeam","handleAdd","addTeamToProject","error","handleCreateTeam","e","project","stopPropagation","preventDefault","openCreateTeamModal","onClose","data","remountComponent","routeTitleGen","hasAccess","confirmRemove","StyledTeamsLabel","position","StyledCreateTeamLink","onClick","css","gray300"],"mappings":"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","file":"ProjectTeams.js","sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport DropdownAutoComplete from 'app/components/dropdownAutoComplete';\nimport {Item} from 'app/components/dropdownAutoComplete/types';\nimport DropdownButton from 'app/components/dropdownButton';\nimport Link from 'app/components/links/link';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {DEFAULT_DEBOUNCE_DURATION, TEAMS_PER_PAGE} from 'app/constants';\nimport {IconSubtract} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization, Team} from 'app/types';\nimport withApi from 'app/utils/withApi';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  /**\n   * Should button be disabled\n   */\n  disabled: boolean;\n  /**\n   * Teams that are already selected.\n   */\n  selectedTeams: string[];\n  /**\n   * callback when teams are added\n   */\n  onAddTeam: (team: Team) => void;\n  /**\n   * Callback when teams are removed\n   */\n  onRemoveTeam: (teamSlug: string) => void;\n\n  /**\n   * Optional menu header.\n   */\n  menuHeader?: React.ReactElement;\n\n  /**\n   * Message to display when the last team is removed\n   * if empty no confirm will be displayed.\n   */\n  confirmLastTeamRemoveMessage?: string;\n};\n\ntype State = {\n  loading: boolean;\n  teams: null | Team[];\n};\n\nclass TeamSelect extends React.Component<Props, State> {\n  state: State = {\n    loading: true,\n    teams: null,\n  };\n\n  componentDidMount() {\n    this.fetchTeams();\n  }\n\n  fetchTeams = debounce(async (query?: string) => {\n    const {api, organization} = this.props;\n    const teams = await api.requestPromise(`/organizations/${organization.slug}/teams/`, {\n      query: {query, per_page: TEAMS_PER_PAGE},\n    });\n    this.setState({teams, loading: false});\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  handleQueryUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({loading: true});\n    this.fetchTeams(event.target.value);\n  };\n\n  handleAddTeam = (option: Item) => {\n    const team = this.state.teams?.find(tm => tm.slug === option.value);\n    if (team) {\n      this.props.onAddTeam(team);\n    }\n  };\n\n  handleRemove = (teamSlug: string) => {\n    this.props.onRemoveTeam(teamSlug);\n  };\n\n  renderTeamAddDropDown() {\n    const {disabled, selectedTeams, menuHeader} = this.props;\n    const {teams} = this.state;\n    const isDisabled = disabled;\n\n    let options: Item[] = [];\n    if (teams === null || teams.length === 0) {\n      options = [];\n    } else {\n      options = teams\n        .filter(team => !selectedTeams.includes(team.slug))\n        .map((team, index) => ({\n          index,\n          value: team.slug,\n          searchKey: team.slug,\n          label: <TeamDropdownElement>#{team.slug}</TeamDropdownElement>,\n        }));\n    }\n\n    return (\n      <DropdownAutoComplete\n        items={options}\n        busyItemsStillVisible={this.state.loading}\n        onChange={this.handleQueryUpdate}\n        onSelect={this.handleAddTeam}\n        emptyMessage={t('No teams')}\n        menuHeader={menuHeader}\n        disabled={isDisabled}\n        alignMenu=\"right\"\n      >\n        {({isOpen}) => (\n          <DropdownButton\n            aria-label={t('Add Team')}\n            isOpen={isOpen}\n            size=\"xsmall\"\n            disabled={isDisabled}\n          >\n            {t('Add Team')}\n          </DropdownButton>\n        )}\n      </DropdownAutoComplete>\n    );\n  }\n\n  renderBody() {\n    const {\n      organization,\n      selectedTeams,\n      disabled,\n      confirmLastTeamRemoveMessage,\n    } = this.props;\n\n    if (selectedTeams.length === 0) {\n      return <EmptyMessage>{t('No Teams assigned')}</EmptyMessage>;\n    }\n    const confirmMessage =\n      selectedTeams.length === 1 && confirmLastTeamRemoveMessage\n        ? confirmLastTeamRemoveMessage\n        : null;\n\n    return selectedTeams.map(team => (\n      <TeamRow\n        key={team}\n        orgId={organization.slug}\n        team={team}\n        onRemove={this.handleRemove}\n        disabled={disabled}\n        confirmMessage={confirmMessage}\n      />\n    ));\n  }\n\n  render() {\n    return (\n      <Panel>\n        <PanelHeader hasButtons>\n          {t('Team')}\n          {this.renderTeamAddDropDown()}\n        </PanelHeader>\n\n        <PanelBody>{this.renderBody()}</PanelBody>\n      </Panel>\n    );\n  }\n}\n\nconst TeamRow = props => {\n  const {orgId, team, onRemove, disabled, confirmMessage} = props;\n  return (\n    <TeamPanelItem>\n      <StyledLink to={`/settings/${orgId}/teams/${team}/`}>{`#${team}`}</StyledLink>\n      <Confirm\n        message={confirmMessage}\n        bypass={!confirmMessage}\n        onConfirm={() => onRemove(team)}\n        disabled={disabled}\n      >\n        <Button\n          size=\"xsmall\"\n          icon={<IconSubtract isCircled size=\"xs\" />}\n          disabled={disabled}\n        >\n          {t('Remove')}\n        </Button>\n      </Confirm>\n    </TeamPanelItem>\n  );\n};\n\nconst TeamDropdownElement = styled('div')`\n  padding: ${space(0.5)} 0px;\n  text-transform: none;\n`;\n\nconst TeamPanelItem = styled(PanelItem)`\n  padding: ${space(2)};\n  align-items: center;\n`;\n\nconst StyledLink = styled(Link)`\n  flex: 1;\n  margin-right: ${space(1)};\n`;\n\nexport default withApi(TeamSelect);\n","import React from 'react';\nimport {WithRouterProps} from 'react-router';\nimport {css} from '@emotion/core';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {openCreateTeamModal} from 'app/actionCreators/modal';\nimport {addTeamToProject, removeTeamFromProject} from 'app/actionCreators/projects';\nimport Link from 'app/components/links/link';\nimport Tooltip from 'app/components/tooltip';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization, Project, Team} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TeamSelect from 'app/views/settings/components/teamSelect';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & WithRouterProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  projectTeams: null | Team[];\n} & AsyncView['state'];\n\nclass ProjectTeams extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [['projectTeams', `/projects/${orgId}/${projectId}/teams/`]];\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Project Teams'), projectId, false);\n  }\n\n  canCreateTeam = () => {\n    const {organization} = this.props;\n    const access = new Set(organization.access);\n    return (\n      access.has('org:write') && access.has('team:write') && access.has('project:write')\n    );\n  };\n\n  handleRemove = (teamSlug: Team['slug']) => {\n    if (this.state.loading) {\n      return;\n    }\n\n    const {orgId, projectId} = this.props.params;\n\n    removeTeamFromProject(this.api, orgId, projectId, teamSlug)\n      .then(() => this.handleRemovedTeam(teamSlug))\n      .catch(() => {\n        addErrorMessage(t('Could not remove the %s team', teamSlug));\n        this.setState({loading: false});\n      });\n  };\n\n  handleRemovedTeam = (teamSlug: Team['slug']) => {\n    this.setState(prevState => ({\n      projectTeams: [\n        ...(prevState.projectTeams || []).filter(team => team.slug !== teamSlug),\n      ],\n    }));\n  };\n\n  handleAddedTeam = (team: Team) => {\n    this.setState(prevState => ({\n      projectTeams: [...(prevState.projectTeams || []), team],\n    }));\n  };\n\n  handleAdd = (team: Team) => {\n    if (this.state.loading) {\n      return;\n    }\n    const {orgId, projectId} = this.props.params;\n\n    addTeamToProject(this.api, orgId, projectId, team).then(\n      () => {\n        this.handleAddedTeam(team);\n      },\n      () => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      }\n    );\n  };\n\n  handleCreateTeam = (e: React.MouseEvent) => {\n    const {project, organization} = this.props;\n\n    if (!this.canCreateTeam()) {\n      return;\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openCreateTeamModal({\n      project,\n      organization,\n      onClose: data => {\n        addTeamToProject(this.api, organization.slug, project.slug, data).then(\n          this.remountComponent,\n          this.remountComponent\n        );\n      },\n    });\n  };\n\n  renderBody() {\n    const {params, organization} = this.props;\n\n    const canCreateTeam = this.canCreateTeam();\n    const hasAccess = organization.access.includes('project:write');\n    const confirmRemove = t(\n      'This is the last team with access to this project. Removing it will mean ' +\n        'only organization owners and managers will be able to access the project pages. Are ' +\n        'you sure you want to remove this team from the project %s?',\n      params.projectId\n    );\n    const {projectTeams} = this.state;\n    const selectedTeams = projectTeams?.map(({slug}) => slug) ?? [];\n\n    const menuHeader = (\n      <StyledTeamsLabel>\n        {t('Teams')}\n        <Tooltip\n          disabled={canCreateTeam}\n          title={t('You must be a project admin to create teams')}\n          position=\"top\"\n        >\n          <StyledCreateTeamLink\n            to=\"\"\n            disabled={!canCreateTeam}\n            onClick={this.handleCreateTeam}\n          >\n            {t('Create Team')}\n          </StyledCreateTeamLink>\n        </Tooltip>\n      </StyledTeamsLabel>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('%s Teams', params.projectId)} />\n        <TeamSelect\n          organization={organization}\n          selectedTeams={selectedTeams}\n          onAddTeam={this.handleAdd}\n          onRemoveTeam={this.handleRemove}\n          menuHeader={menuHeader}\n          confirmLastTeamRemoveMessage={confirmRemove}\n          disabled={!hasAccess}\n        />\n      </div>\n    );\n  }\n}\n\nconst StyledTeamsLabel = styled('div')`\n  font-size: 0.875em;\n  padding: ${space(0.5)} 0px;\n  text-transform: uppercase;\n`;\n\nconst StyledCreateTeamLink = styled(Link)`\n  float: right;\n  text-transform: none;\n  ${p =>\n    p.disabled &&\n    css`\n      cursor: not-allowed;\n      color: ${p.theme.gray300};\n      opacity: 0.6;\n    `};\n`;\n\nexport default ProjectTeams;\n"],"sourceRoot":""}