{"version":3,"sources":["webpack:///./app/components/alertLink.tsx","webpack:///./app/components/inactivePlugins.tsx","webpack:///./app/components/pluginList.tsx","webpack:///./app/data/forms/projectAlerts.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/projectAlerts/settings.tsx"],"names":["AlertLink","this","props","size","priority","icon","children","onClick","withoutMarginBottom","openInNewTab","to","href","dataTestId","StyledLink","data-test-id","IconWrapper","AlertLinkText","IconLink","direction","React","defaultProps","linkProps","omit","p","theme","alert","backgroundLight","textColor","border","space","InactivePlugins","plugins","onEnablePlugin","length","t","Plugins","map","plugin","IntegrationButton","key","id","className","Label","StyledPluginIcon","pluginId","shortName","name","fontSizeSmall","borderRadius","PluginIcon","PluginList","organization","project","pluginList","onDisablePlugin","handleDisablePlugin","disablePlugin","projectId","slug","orgId","filter","enabled","data","isHidden","enablePlugin","route","formatMinutes","value","Number","tn","fields","subjectTemplate","type","label","placeholder","help","digestsMinDelay","min","max","step","defaultValue","formatLabel","digestsMaxDelay","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","title","getTitle","renderComponent","AsyncComponent","PermissionAlert","access","hasAccess","handleEnablePlugin","setState","prevState","params","getProjectEndpoint","routeTitleGen","canEditRule","state","projectEndpoint","action","pathname","query","saveOnBlur","allowUndo","initialData","apiMethod","apiEndpoint","disabled","renderHeader","hasConfiguration"],"mappings":"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","file":"ProjectAlertsSettings.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport omit from 'lodash/omit';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport Link from 'app/components/links/link';\nimport {IconChevron} from 'app/icons';\nimport space from 'app/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  ['data-test-id']?: string;\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  size: Size;\n  priority: Priority;\n  withoutMarginBottom: boolean;\n  openInNewTab: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & DefaultProps & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nclass AlertLink extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    priority: 'warning',\n    size: 'normal',\n    withoutMarginBottom: false,\n    openInNewTab: false,\n  };\n\n  render() {\n    const {\n      size,\n      priority,\n      icon,\n      children,\n      onClick,\n      withoutMarginBottom,\n      openInNewTab,\n      to,\n      href,\n      ['data-test-id']: dataTestId,\n    } = this.props;\n\n    return (\n      <StyledLink\n        data-test-id={dataTestId}\n        to={to}\n        href={href}\n        onClick={onClick}\n        size={size}\n        priority={priority}\n        withoutMarginBottom={withoutMarginBottom}\n        openInNewTab={openInNewTab}\n      >\n        {icon && <IconWrapper>{icon}</IconWrapper>}\n        <AlertLinkText>{children}</AlertLinkText>\n        <IconLink>\n          <IconChevron direction=\"right\" />\n        </IconLink>\n      </StyledLink>\n    );\n  }\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.textColor};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport TextOverflow from 'app/components/textOverflow';\nimport {t} from 'app/locale';\nimport PluginIcon from 'app/plugins/components/pluginIcon';\nimport space from 'app/styles/space';\nimport {Plugin} from 'app/types';\n\ntype Props = {\n  plugins: Plugin[];\n  onEnablePlugin: (plugin: Plugin) => void;\n};\n\nconst InactivePlugins = ({plugins, onEnablePlugin}: Props) => {\n  if (plugins.length === 0) {\n    return null;\n  }\n\n  return (\n    <Panel>\n      <PanelHeader>{t('Inactive Integrations')}</PanelHeader>\n\n      <PanelBody>\n        <Plugins>\n          {plugins.map(plugin => (\n            <IntegrationButton\n              key={plugin.id}\n              onClick={() => onEnablePlugin(plugin)}\n              className={`ref-plugin-enable-${plugin.id}`}\n            >\n              <Label>\n                <StyledPluginIcon pluginId={plugin.id} />\n                <TextOverflow>{plugin.shortName || plugin.name}</TextOverflow>\n              </Label>\n            </IntegrationButton>\n          ))}\n        </Plugins>\n      </PanelBody>\n    </Panel>\n  );\n};\n\nconst Plugins = styled('div')`\n  display: flex;\n  padding: ${space(1)};\n  flex: 1;\n  flex-wrap: wrap;\n`;\n\nconst IntegrationButton = styled('button')`\n  margin: ${space(1)};\n  width: 175px;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: #889ab0;\n  letter-spacing: 0.1px;\n  font-weight: 600;\n  text-transform: uppercase;\n  border: 1px solid #eee;\n  background: inherit;\n  border-radius: ${p => p.theme.borderRadius};\n  padding: 10px;\n\n  &:hover {\n    border-color: #ccc;\n  }\n`;\n\nconst Label = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledPluginIcon = styled(PluginIcon)`\n  margin-right: ${space(1)};\n`;\n\nexport default InactivePlugins;\n","import React from 'react';\n\nimport {disablePlugin, enablePlugin} from 'app/actionCreators/plugins';\nimport InactivePlugins from 'app/components/inactivePlugins';\nimport PluginConfig from 'app/components/pluginConfig';\nimport {t} from 'app/locale';\nimport {Organization, Plugin, Project} from 'app/types';\n\nimport {Panel, PanelItem} from './panels';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  pluginList: Plugin[];\n  onDisablePlugin?: (plugin: Plugin) => void;\n  onEnablePlugin?: (plugin: Plugin) => void;\n};\n\nconst PluginList = ({\n  organization,\n  project,\n  pluginList,\n  onDisablePlugin = () => {},\n  onEnablePlugin = () => {},\n}: Props) => {\n  const handleEnablePlugin = (plugin: Plugin) => {\n    enablePlugin({\n      projectId: project.slug,\n      orgId: organization.slug,\n      pluginId: plugin.slug,\n    });\n\n    onEnablePlugin(plugin);\n  };\n\n  const handleDisablePlugin = (plugin: Plugin) => {\n    disablePlugin({\n      projectId: project.slug,\n      orgId: organization.slug,\n      pluginId: plugin.slug,\n    });\n\n    onDisablePlugin(plugin);\n  };\n\n  if (!pluginList.length) {\n    return (\n      <Panel>\n        <PanelItem>\n          {t(\"Oops! Looks like there aren't any available integrations installed.\")}\n        </PanelItem>\n      </Panel>\n    );\n  }\n\n  return (\n    <div>\n      {pluginList\n        .filter(p => p.enabled)\n        .map(data => (\n          <PluginConfig\n            data={data}\n            organization={organization}\n            project={project}\n            key={data.id}\n            onDisablePlugin={handleDisablePlugin}\n          />\n        ))}\n\n      <InactivePlugins\n        plugins={pluginList.filter(p => !p.enabled && !p.isHidden)}\n        onEnablePlugin={handleEnablePlugin}\n      />\n    </div>\n  );\n};\n\nexport default PluginList;\n","import {t, tn} from 'app/locale';\nimport {Field} from 'app/views/settings/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/:orgId/projects/:projectId/alerts/';\n\nconst formatMinutes = (value: number | '') => {\n  value = Number(value) / 60;\n  return tn('%s minute', '%s minutes', value);\n};\n\nexport const fields: {[key: string]: Field} = {\n  subjectTemplate: {\n    name: 'subjectTemplate',\n    type: 'string',\n\n    // additional data/props that is related to rendering of form field rather than data\n    label: t('Subject Template'),\n    placeholder: 'e.g. $shortID - $title',\n    help: t(\n      'The email subject to use (excluding the prefix) for individual alerts. Usable variables include: $title, $shortID, $projectID, $orgID, and ${tag:key}, such as ${tag:environment} or ${tag:release}.'\n    ),\n  },\n  digestsMinDelay: {\n    name: 'digestsMinDelay',\n    type: 'range',\n    min: 60,\n    max: 3600,\n    step: 60,\n    defaultValue: 300,\n    label: t('Minimum delivery interval'),\n    help: t('Notifications will be delivered at most this often.'),\n    formatLabel: formatMinutes,\n  },\n  digestsMaxDelay: {\n    name: 'digestsMaxDelay',\n    type: 'range',\n    min: 60,\n    max: 3600,\n    step: 60,\n    defaultValue: 300,\n    label: t('Maximum delivery interval'),\n    help: t('Notifications will be delivered at least this often.'),\n    formatLabel: formatMinutes,\n  },\n};\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport AlertLink from 'app/components/alertLink';\nimport Button from 'app/components/button';\nimport {PanelAlert} from 'app/components/panels';\nimport PluginList from 'app/components/pluginList';\nimport {fields} from 'app/data/forms/projectAlerts';\nimport {IconMail} from 'app/icons';\nimport {t} from 'app/locale';\nimport {Organization, Plugin, Project} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\n\ntype RouteParams = {orgId: string; projectId: string};\ntype Props = RouteComponentProps<RouteParams, {}> &\n  AsyncView['props'] & {\n    canEditRule: boolean;\n    organization: Organization;\n    project: Project;\n  };\n\ntype State = AsyncView['state'] & {\n  project: Project | null;\n  pluginList: Array<Plugin> | null;\n};\n\nclass Settings extends AsyncView<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      project: null,\n      pluginList: [],\n    };\n  }\n  getProjectEndpoint({orgId, projectId}: RouteParams) {\n    return `/projects/${orgId}/${projectId}/`;\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {params} = this.props;\n    const {orgId, projectId} = params;\n    const projectEndpoint = this.getProjectEndpoint(params);\n    return [\n      ['project', projectEndpoint],\n      ['pluginList', `/projects/${orgId}/${projectId}/plugins/`],\n    ];\n  }\n\n  handleEnablePlugin = (plugin: Plugin) => {\n    this.setState(prevState => ({\n      pluginList: (prevState.pluginList ?? []).map(p => {\n        if (p.id !== plugin.id) {\n          return p;\n        }\n        return {\n          ...plugin,\n          enabled: true,\n        };\n      }),\n    }));\n  };\n\n  handleDisablePlugin = (plugin: Plugin) => {\n    this.setState(prevState => ({\n      pluginList: (prevState.pluginList ?? []).map(p => {\n        if (p.id !== plugin.id) {\n          return p;\n        }\n        return {\n          ...plugin,\n          enabled: false,\n        };\n      }),\n    }));\n  };\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Alerts Settings'), projectId, false);\n  }\n\n  renderBody() {\n    const {canEditRule, organization, params} = this.props;\n    const {orgId} = params;\n    const {project, pluginList} = this.state;\n\n    if (!project) {\n      return null;\n    }\n\n    const projectEndpoint = this.getProjectEndpoint(params);\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader\n          title={t('Alerts Settings')}\n          action={\n            <Button\n              to={{\n                pathname: `/organizations/${orgId}/alerts/rules/`,\n                query: {project: project.id},\n              }}\n              size=\"small\"\n            >\n              {t('View Alert Rules')}\n            </Button>\n          }\n        />\n        <PermissionAlert />\n        <AlertLink to=\"/settings/account/notifications/\" icon={<IconMail />}>\n          {t(\n            'Looking to fine-tune your personal notification preferences? Visit your Account Settings'\n          )}\n        </AlertLink>\n\n        <Form\n          saveOnBlur\n          allowUndo\n          initialData={{\n            subjectTemplate: project.subjectTemplate,\n            digestsMinDelay: project.digestsMinDelay,\n            digestsMaxDelay: project.digestsMaxDelay,\n          }}\n          apiMethod=\"PUT\"\n          apiEndpoint={projectEndpoint}\n        >\n          <JsonForm\n            disabled={!canEditRule}\n            title={t('Email Settings')}\n            fields={[fields.subjectTemplate]}\n          />\n\n          <JsonForm\n            title={t('Digests')}\n            disabled={!canEditRule}\n            fields={[fields.digestsMinDelay, fields.digestsMaxDelay]}\n            renderHeader={() => (\n              <PanelAlert type=\"info\">\n                {t(\n                  'Sentry will automatically digest alerts sent by some services to avoid flooding your inbox with individual issue notifications. To control how frequently notifications are delivered, use the sliders below.'\n                )}\n              </PanelAlert>\n            )}\n          />\n        </Form>\n\n        {canEditRule && (\n          <PluginList\n            organization={organization}\n            project={project}\n            pluginList={(pluginList ?? []).filter(\n              p => p.type === 'notification' && p.hasConfiguration\n            )}\n            onEnablePlugin={this.handleEnablePlugin}\n            onDisablePlugin={this.handleDisablePlugin}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Settings;\n"],"sourceRoot":""}