{"version":3,"sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectOwnership/codeowners.tsx","webpack:///./app/views/settings/project/projectOwnership/index.tsx"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","PermissionAlert","access","hasAccess","type","size","t","CodeOwners","organization","project","slug","provider","data","raw","dateUpdated","repoName","codeMapping","Container","RulesHeader","TitleContainer","renderIcon","ReadOnlyTag","Repository","Detail","RulesView","InnerPanel","InnerPanelHeader","moment","fromNow","InnerPanelBody","StyledTextArea","value","spellCheck","autoComplete","autoCorrect","autoCapitalize","state","codeowners","map","codeowner","key","id","renderView","withTheme","Tag","Panel","PanelHeader","PanelBody","TextareaAutosize","inputStyles","text","familyMono","routeTitleGen","ownership","disabled","includes","to","pathname","query","tct","link","href","withPadding","Block","CodeBlock","initialText","features","apiEndpoint","apiMethod","saveOnBlur","initialData","fallthrough","hideFooter","forms","fields","name","label","help","autoAssignment","TextBlock"],"mappings":"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","file":"ProjectOwnership.js","sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport styled from '@emotion/styled';\nimport {withTheme} from 'emotion-theming';\nimport moment from 'moment';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport Tag from 'app/components/tag';\nimport {IconGithub, IconGitlab} from 'app/icons';\nimport {inputStyles} from 'app/styles/input';\nimport space from 'app/styles/space';\nimport {Organization, Project} from 'app/types';\nimport {Theme} from 'app/utils/theme';\n\ntype Props = AsyncComponent['props'] & {\n  theme: Theme;\n  organization: Organization;\n  project: Project;\n};\n\ntype State = {} & AsyncComponent['state'];\n\nclass CodeOwners extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, project} = this.props;\n    return [\n      [\n        'codeowners',\n        `/projects/${organization.slug}/${project.slug}/codeowners/?expand=codeMapping`,\n      ],\n    ];\n  }\n  renderIcon(provider) {\n    switch (provider) {\n      case 'github':\n        return <IconGithub size=\"md\" />;\n      case 'gitlab':\n        return <IconGitlab size=\"md\" />;\n      default:\n        return null;\n    }\n  }\n  renderView(data) {\n    const {theme} = this.props;\n    const {\n      raw,\n      dateUpdated,\n      provider,\n      codeMapping: {repoName},\n    } = data;\n    return (\n      <Container>\n        <RulesHeader>\n          <TitleContainer>\n            {this.renderIcon(provider)}\n            <Title>CODEOWNERS</Title>\n          </TitleContainer>\n          <ReadOnlyTag type=\"default\">{'Read Only'}</ReadOnlyTag>\n          <Repository>{repoName}</Repository>\n          <Detail />\n        </RulesHeader>\n        <RulesView>\n          <InnerPanel>\n            <InnerPanelHeader>{`Last synced ${moment(\n              dateUpdated\n            ).fromNow()}`}</InnerPanelHeader>\n            <InnerPanelBody>\n              <StyledTextArea\n                value={raw}\n                spellCheck=\"false\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                autoCapitalize=\"off\"\n                theme={theme}\n              />\n            </InnerPanelBody>\n          </InnerPanel>\n        </RulesView>\n      </Container>\n    );\n  }\n\n  renderBody() {\n    const {codeowners} = this.state;\n    return codeowners.map(codeowner => (\n      <React.Fragment key={codeowner.id}>{this.renderView(codeowner)}</React.Fragment>\n    ));\n  }\n}\n\nexport default withTheme(CodeOwners);\n\nconst Container = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  grid-template-areas: 'rules-header rules-view';\n  margin-bottom: ${space(3)};\n`;\n\nconst RulesHeader = styled('div')`\n  grid-area: rules-header;\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  grid-template-rows: 45px 1fr 1fr 1fr 1fr;\n  grid-template-areas: 'title tag' 'repository repository' '. .' '. .' 'detail detail';\n  border: 1px solid #c6becf;\n  border-radius: 4px 0 0 4px;\n  border-right: none;\n  box-shadow: 0 2px 0 rgb(37 11 54 / 4%);\n  background-color: #ffffff;\n`;\nconst TitleContainer = styled('div')`\n  grid-area: title;\n  align-self: center;\n  padding-left: ${space(2)};\n  display: flex;\n  * {\n    padding-right: ${space(0.5)};\n  }\n`;\nconst Title = styled('div')`\n  align-self: center;\n`;\nconst ReadOnlyTag = styled(Tag)`\n  grid-area: tag;\n  align-self: center;\n  justify-self: end;\n  padding-right: ${space(1)};\n`;\nconst Repository = styled('div')`\n  grid-area: repository;\n  padding-left: calc(${space(2)} + ${space(3)});\n  color: #9386a0;\n  font-size: 14px;\n`;\nconst Detail = styled('div')`\n  grid-area: detail;\n  align-self: end;\n  padding: 0 0 ${space(2)} ${space(2)};\n  color: #9386a0;\n  font-size: 14px;\n`;\n\nconst RulesView = styled('div')`\n  grid-area: rules-view;\n`;\n\nconst InnerPanel = styled(Panel)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0px;\n  margin: 0px;\n  height: 100%;\n`;\n\nconst InnerPanelHeader = styled(PanelHeader)`\n  text-transform: none;\n  font-size: 16px;\n  font-weight: 400;\n`;\n\nconst InnerPanelBody = styled(PanelBody)`\n  height: auto;\n`;\n\nconst StyledTextArea = styled(TextareaAutosize)`\n  ${inputStyles};\n  height: calc(400px - ${space(2)} - ${space(1)} - ${space(3)}) !important;\n  overflow: auto;\n  outline: 0;\n  width: 100%;\n  resize: none;\n  margin: 0;\n  font-family: ${p => p.theme.text.familyMono};\n  word-break: break-all;\n  white-space: pre-wrap;\n  line-height: ${space(3)};\n  border: none;\n  box-shadow: none;\n  padding: ${space(2)};\n  color: #9386a0;\n\n  &:hover,\n  &:focus,\n  &:active {\n    border: none;\n    box-shadow: none;\n  }\n`;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Feature from 'app/components/acl/feature';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {t, tct} from 'app/locale';\nimport {Organization, Project} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\nimport CodeOwners from 'app/views/settings/project/projectOwnership/codeowners';\nimport OwnerInput from 'app/views/settings/project/projectOwnership/ownerInput';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  ownership: null | any;\n} & AsyncView['state'];\n\nclass ProjectOwnership extends AsyncView<Props, State> {\n  getTitle() {\n    const {project} = this.props;\n    return routeTitleGen(t('Issue Owners'), project.slug, false);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, project} = this.props;\n    return [['ownership', `/projects/${organization.slug}/${project.slug}/ownership/`]];\n  }\n\n  renderBody() {\n    const {project, organization} = this.props;\n    const {ownership} = this.state;\n\n    const disabled = !organization.access.includes('project:write');\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader\n          title={t('Issue Owners')}\n          action={\n            <Button\n              to={{\n                pathname: `/organizations/${organization.slug}/issues/`,\n                query: {project: project.id},\n              }}\n              size=\"small\"\n            >\n              {t('View Issues')}\n            </Button>\n          }\n        />\n        <TextBlock>\n          {tct(\n            `Automatically assign issues and send alerts to the right people based on issue properties. To learn more about Issue Owners, [link:view the docs].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/product/error-monitoring/issue-owners/\" />\n              ),\n            }\n          )}\n        </TextBlock>\n        <PermissionAlert />\n        <Panel>\n          <PanelHeader>{t('Ownership Rules')}</PanelHeader>\n          <PanelBody withPadding>\n            <Block>\n              {t('An owner for an issue can be a team such as ')}{' '}\n              <code>#infrastructure</code>\n              {t('or a member’s email like ')} <code>tom@sentry.io</code>\n              {'. Here are some examples: '}\n            </Block>\n            <Block>\n              <CodeBlock>\n                path:src/example/pipeline/* person@sentry.io #infrastructure\n                {'\\n'}\n                url:http://example.com/settings/* #product\n                {'\\n'}\n                tags.sku_class:enterprise #enterprise\n                {'\\n'}\n                module:example.api.base tom@sentry.io\n              </CodeBlock>\n            </Block>\n            <Block>\n              {t('These rules follow the pattern: ')}\n              <code>matcher:pattern owner1 owner2 ...</code>{' '}\n              {t('and the globbing syntax works like this:')}\n            </Block>\n            <Block>\n              <CodeBlock>\n                {`* matches everything\n? matches any single character`}\n              </CodeBlock>\n            </Block>\n            <OwnerInput\n              {...this.props}\n              disabled={disabled}\n              initialText={ownership.raw || ''}\n            />\n          </PanelBody>\n        </Panel>\n        <Feature features={['import-codeowners']}>\n          <CodeOwners {...this.props} />\n        </Feature>\n        <Form\n          apiEndpoint={`/projects/${organization.slug}/${project.slug}/ownership/`}\n          apiMethod=\"PUT\"\n          saveOnBlur\n          initialData={{fallthrough: ownership.fallthrough}}\n          hideFooter\n        >\n          <JsonForm\n            forms={[\n              {\n                title: t('If ownership cannot be determined for an issue...'),\n                fields: [\n                  {\n                    name: 'fallthrough',\n                    type: 'boolean',\n                    label: t('All users with access to this project are issue owners'),\n                    help: t(\n                      'Issue owners will receive notifications for issues they are responsible for.'\n                    ),\n                    disabled,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Form>\n\n        <Form\n          apiEndpoint={`/projects/${organization.slug}/${project.slug}/ownership/`}\n          apiMethod=\"PUT\"\n          saveOnBlur\n          initialData={{autoAssignment: ownership.autoAssignment}}\n          hideFooter\n        >\n          <JsonForm\n            forms={[\n              {\n                title: t('If a new event matches any of the ownership rules...'),\n                fields: [\n                  {\n                    name: 'autoAssignment',\n                    type: 'boolean',\n                    label: t('The issue is assigned to the team or user'),\n                    help: t('Issue owners will be automatically assigned.'),\n                    disabled,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ProjectOwnership;\n\nconst Block = styled(TextBlock)`\n  margin-bottom: 16px;\n`;\n\nconst CodeBlock = styled('pre')`\n  word-break: break-all;\n  white-space: pre-wrap;\n`;\n"],"sourceRoot":""}