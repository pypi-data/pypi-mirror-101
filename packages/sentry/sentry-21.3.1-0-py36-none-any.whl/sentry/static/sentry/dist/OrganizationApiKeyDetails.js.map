{"version":3,"sources":["webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/forms/apiForm.tsx","webpack:///./app/views/settings/components/forms/controls/multipleCheckbox.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/organizationApiKeys/organizationApiKeyDetails.tsx"],"names":["recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","title","this","getTitle","renderComponent","AsyncComponent","ApiForm","api","Client","onSubmit","data","onSuccess","onError","props","addLoadingMessage","t","request","apiEndpoint","method","apiMethod","success","response","clearIndicators","error","clear","otherProps","React","MultipleCheckboxWrapper","Label","CheckboxLabel","MultipleCheckbox","onChange","selectedValue","e","value","target","checked","filter","v","disabled","choices","choiceValue","choiceLabel","LabelContainer","key","type","bind","defined","p","theme","breakpoints","UnstyledSettingsPageHeader","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","defaultProps","space","gray400","fontSizeLarge","SettingsPageHeader","API_CHOICES","API_ACCESS_SCOPES","s","OrganizationApiKeyDetails","handleSubmitSuccess","addSuccessMessage","browserHistory","handleSubmitError","addErrorMessage","orgId","apiKey","routeTitleGen","organization","slug","initialData","state","onSubmitSuccess","onSubmitError","onCancel","label","name","inline","required","placeholder","help","withOrganization"],"mappings":"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","file":"OrganizationApiKeyDetails.js","sourcesContent":["import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\n\nimport {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport Form from 'app/views/settings/components/forms/form';\n\ntype Props = Form['props'] & {\n  onSubmit?: (data: Record<string, any>) => void;\n  apiMethod: string;\n  apiEndpoint: string;\n};\n\nexport default class ApiForm extends React.Component<Props> {\n  componentWillUnmount() {\n    this.api.clear();\n  }\n\n  api: Client = new Client();\n\n  onSubmit = (\n    data: Record<string, any>,\n    onSuccess: (response: Record<string, any>) => void,\n    onError: (error: any) => void\n  ) => {\n    this.props.onSubmit && this.props.onSubmit(data);\n    addLoadingMessage(t('Saving changes\\u2026'));\n    this.api.request(this.props.apiEndpoint, {\n      method: this.props.apiMethod,\n      data,\n      success: response => {\n        clearIndicators();\n        onSuccess(response);\n      },\n      error: error => {\n        clearIndicators();\n        onError(error);\n      },\n    });\n  };\n\n  render() {\n    const {\n      onSubmit: _onSubmit,\n      apiMethod: _apiMethod,\n      apiEndpoint: _apiEndpoint,\n      ...otherProps\n    } = this.props;\n\n    return <Form onSubmit={this.onSubmit} {...otherProps} />;\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Choices} from 'app/types';\nimport {defined} from 'app/utils';\n\nconst MultipleCheckboxWrapper = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Label = styled('label')`\n  font-weight: normal;\n  white-space: nowrap;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  width: 20%;\n`;\n\nconst CheckboxLabel = styled('span')`\n  margin-left: 3px;\n`;\n\ntype SelectedValue = (string | number)[];\n\ntype Props = {\n  value: (string | number)[];\n  choices: Choices;\n  onChange?: (value: SelectedValue, event: React.ChangeEvent<HTMLInputElement>) => void;\n  disabled?: boolean;\n};\n\nclass MultipleCheckbox extends React.Component<Props> {\n  onChange = (selectedValue: string | number, e: React.ChangeEvent<HTMLInputElement>) => {\n    const {value, onChange} = this.props;\n    let newValue: SelectedValue = [];\n\n    if (typeof onChange !== 'function') {\n      return;\n    }\n\n    if (e.target.checked) {\n      newValue = value ? [...value, selectedValue] : [value];\n    } else {\n      newValue = value.filter(v => v !== selectedValue);\n    }\n\n    onChange(newValue, e);\n  };\n\n  render() {\n    const {disabled, choices, value} = this.props;\n\n    return (\n      <MultipleCheckboxWrapper>\n        {choices.map(([choiceValue, choiceLabel]) => (\n          <LabelContainer key={choiceValue}>\n            <Label>\n              <input\n                type=\"checkbox\"\n                value={choiceValue}\n                onChange={this.onChange.bind(this, choiceValue)}\n                disabled={disabled}\n                checked={defined(value) && value.indexOf(choiceValue) !== -1}\n              />\n              <CheckboxLabel>{choiceLabel}</CheckboxLabel>\n            </Label>\n          </LabelContainer>\n        ))}\n      </MultipleCheckboxWrapper>\n    );\n  }\n}\n\nexport default MultipleCheckbox;\n\nconst LabelContainer = styled('div')`\n  width: 100%;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    width: 50%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    width: 33.333%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints[2]}) {\n    width: 25%;\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {API_ACCESS_SCOPES} from 'app/constants';\nimport {t} from 'app/locale';\nimport {Choices, Organization} from 'app/types';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\nimport ApiForm from 'app/views/settings/components/forms/apiForm';\nimport MultipleCheckbox from 'app/views/settings/components/forms/controls/multipleCheckbox';\nimport FormField from 'app/views/settings/components/forms/formField';\nimport TextareaField from 'app/views/settings/components/forms/textareaField';\nimport TextField from 'app/views/settings/components/forms/textField';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nimport {DeprecatedApiKey} from './types';\n\nconst API_CHOICES: Choices = API_ACCESS_SCOPES.map(s => [s, s]);\n\ntype RouteParams = {\n  orgId: string;\n  apiKey: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n};\n\ntype State = AsyncView['state'] & {\n  apiKey: DeprecatedApiKey;\n};\n\nclass OrganizationApiKeyDetails extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [\n      [\n        'apiKey',\n        `/organizations/${this.props.params.orgId}/api-keys/${this.props.params.apiKey}/`,\n      ],\n    ];\n  }\n\n  getTitle() {\n    return routeTitleGen(t('Edit API Key'), this.props.organization.slug, false);\n  }\n\n  handleSubmitSuccess = () => {\n    addSuccessMessage('Saved changes');\n\n    // Go back to API list\n    browserHistory.push(\n      recreateRoute('', {\n        stepBack: -1,\n        routes: this.props.routes,\n        params: this.props.params,\n      })\n    );\n  };\n\n  handleSubmitError = () => {\n    addErrorMessage('Unable to save changes. Please try again.');\n  };\n\n  renderBody() {\n    return (\n      <div>\n        <SettingsPageHeader title={t('Edit API Key')} />\n\n        <Panel>\n          <PanelHeader>{t('API Key')}</PanelHeader>\n          <ApiForm\n            apiMethod=\"PUT\"\n            apiEndpoint={`/organizations/${this.props.params.orgId}/api-keys/${this.props.params.apiKey}/`}\n            initialData={this.state.apiKey}\n            onSubmitSuccess={this.handleSubmitSuccess}\n            onSubmitError={this.handleSubmitError}\n            onCancel={() =>\n              browserHistory.push(\n                recreateRoute('', {\n                  stepBack: -1,\n                  routes: this.props.routes,\n                  params: this.props.params,\n                })\n              )\n            }\n          >\n            <PanelBody>\n              <TextField label={t('Label')} name=\"label\" />\n              <TextField label={t('API Key')} name=\"key\" disabled />\n\n              <FormField name=\"scope_list\" label={t('Scopes')} inline={false} required>\n                {({value, onChange}) => (\n                  <MultipleCheckbox\n                    value={value}\n                    onChange={onChange}\n                    choices={API_CHOICES}\n                  />\n                )}\n              </FormField>\n\n              <TextareaField\n                label={t('Allowed Domains')}\n                name=\"allowed_origins\"\n                placeholder=\"e.g. example.com or https://example.com\"\n                help=\"Separate multiple entries with a newline\"\n              />\n            </PanelBody>\n          </ApiForm>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationApiKeyDetails);\n"],"sourceRoot":""}