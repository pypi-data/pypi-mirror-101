{"version":3,"sources":["webpack:///./app/views/settings/components/forms/apiForm.tsx","webpack:///./app/views/settings/components/forms/controls/multipleCheckbox.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/project/projectCreateServiceHook.tsx","webpack:///./app/views/settings/project/serviceHookSettingsForm.tsx"],"names":["ApiForm","api","Client","onSubmit","data","onSuccess","onError","props","addLoadingMessage","t","request","apiEndpoint","method","apiMethod","success","response","clearIndicators","error","this","clear","otherProps","React","MultipleCheckboxWrapper","Label","CheckboxLabel","MultipleCheckbox","onChange","selectedValue","e","value","target","checked","filter","v","disabled","choices","map","choiceValue","choiceLabel","LabelContainer","key","type","bind","defined","indexOf","p","theme","breakpoints","UnstyledSettingsPageHeader","icon","title","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","defaultProps","space","gray400","fontSizeLarge","SettingsPageHeader","ProjectCreateServiceHook","params","orgId","projectId","initialData","events","isActive","EVENT_CHOICES","ServiceHookSettingsForm","onSubmitSuccess","browserHistory","hookId","endpoint","footerStyle","marginTop","paddingRight","submitLabel","name","label","required","help","inline"],"mappings":"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","file":"ProjectCreateServiceHook.js","sourcesContent":["import React from 'react';\n\nimport {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport Form from 'app/views/settings/components/forms/form';\n\ntype Props = Form['props'] & {\n  onSubmit?: (data: Record<string, any>) => void;\n  apiMethod: string;\n  apiEndpoint: string;\n};\n\nexport default class ApiForm extends React.Component<Props> {\n  componentWillUnmount() {\n    this.api.clear();\n  }\n\n  api: Client = new Client();\n\n  onSubmit = (\n    data: Record<string, any>,\n    onSuccess: (response: Record<string, any>) => void,\n    onError: (error: any) => void\n  ) => {\n    this.props.onSubmit && this.props.onSubmit(data);\n    addLoadingMessage(t('Saving changes\\u2026'));\n    this.api.request(this.props.apiEndpoint, {\n      method: this.props.apiMethod,\n      data,\n      success: response => {\n        clearIndicators();\n        onSuccess(response);\n      },\n      error: error => {\n        clearIndicators();\n        onError(error);\n      },\n    });\n  };\n\n  render() {\n    const {\n      onSubmit: _onSubmit,\n      apiMethod: _apiMethod,\n      apiEndpoint: _apiEndpoint,\n      ...otherProps\n    } = this.props;\n\n    return <Form onSubmit={this.onSubmit} {...otherProps} />;\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Choices} from 'app/types';\nimport {defined} from 'app/utils';\n\nconst MultipleCheckboxWrapper = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Label = styled('label')`\n  font-weight: normal;\n  white-space: nowrap;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  width: 20%;\n`;\n\nconst CheckboxLabel = styled('span')`\n  margin-left: 3px;\n`;\n\ntype SelectedValue = (string | number)[];\n\ntype Props = {\n  value: (string | number)[];\n  choices: Choices;\n  onChange?: (value: SelectedValue, event: React.ChangeEvent<HTMLInputElement>) => void;\n  disabled?: boolean;\n};\n\nclass MultipleCheckbox extends React.Component<Props> {\n  onChange = (selectedValue: string | number, e: React.ChangeEvent<HTMLInputElement>) => {\n    const {value, onChange} = this.props;\n    let newValue: SelectedValue = [];\n\n    if (typeof onChange !== 'function') {\n      return;\n    }\n\n    if (e.target.checked) {\n      newValue = value ? [...value, selectedValue] : [value];\n    } else {\n      newValue = value.filter(v => v !== selectedValue);\n    }\n\n    onChange(newValue, e);\n  };\n\n  render() {\n    const {disabled, choices, value} = this.props;\n\n    return (\n      <MultipleCheckboxWrapper>\n        {choices.map(([choiceValue, choiceLabel]) => (\n          <LabelContainer key={choiceValue}>\n            <Label>\n              <input\n                type=\"checkbox\"\n                value={choiceValue}\n                onChange={this.onChange.bind(this, choiceValue)}\n                disabled={disabled}\n                checked={defined(value) && value.indexOf(choiceValue) !== -1}\n              />\n              <CheckboxLabel>{choiceLabel}</CheckboxLabel>\n            </Label>\n          </LabelContainer>\n        ))}\n      </MultipleCheckboxWrapper>\n    );\n  }\n}\n\nexport default MultipleCheckbox;\n\nconst LabelContainer = styled('div')`\n  width: 100%;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    width: 50%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    width: 33.333%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints[2]}) {\n    width: 25%;\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\nimport {RouteComponentProps} from 'react-router';\n\nimport {t} from 'app/locale';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport ServiceHookSettingsForm from 'app/views/settings/project/serviceHookSettingsForm';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\nfunction ProjectCreateServiceHook({params}: Props) {\n  const {orgId, projectId} = params;\n  const title = t('Create Service Hook');\n  return (\n    <DocumentTitle title={`${title} - Sentry`}>\n      <React.Fragment>\n        <SettingsPageHeader title={title} />\n        <ServiceHookSettingsForm\n          orgId={orgId}\n          projectId={projectId}\n          initialData={{events: [], isActive: true}}\n        />\n      </React.Fragment>\n    </DocumentTitle>\n  );\n}\n\nexport default ProjectCreateServiceHook;\n","import React from 'react';\nimport {browserHistory} from 'react-router';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport {Choices, ServiceHook} from 'app/types';\nimport ApiForm from 'app/views/settings/components/forms/apiForm';\nimport BooleanField from 'app/views/settings/components/forms/booleanField';\nimport MultipleCheckbox from 'app/views/settings/components/forms/controls/multipleCheckbox';\nimport FormField from 'app/views/settings/components/forms/formField';\nimport TextField from 'app/views/settings/components/forms/textField';\n\nconst EVENT_CHOICES: Choices = ['event.alert', 'event.created'].map(e => [e, e]);\n\ntype Props = {\n  orgId: string;\n  projectId: string;\n  initialData: Partial<ServiceHook> & {isActive: boolean};\n  hookId?: string;\n};\n\nexport default class ServiceHookSettingsForm extends React.Component<Props> {\n  onSubmitSuccess = () => {\n    const {orgId, projectId} = this.props;\n    browserHistory.push(`/settings/${orgId}/projects/${projectId}/hooks/`);\n  };\n\n  render() {\n    const {initialData, orgId, projectId, hookId} = this.props;\n\n    const endpoint = hookId\n      ? `/projects/${orgId}/${projectId}/hooks/${hookId}/`\n      : `/projects/${orgId}/${projectId}/hooks/`;\n\n    return (\n      <Panel>\n        <ApiForm\n          apiMethod={hookId ? 'PUT' : 'POST'}\n          apiEndpoint={endpoint}\n          initialData={initialData}\n          onSubmitSuccess={this.onSubmitSuccess}\n          footerStyle={{\n            marginTop: 0,\n            paddingRight: 20,\n          }}\n          submitLabel={hookId ? t('Save Changes') : t('Create Hook')}\n        >\n          <PanelHeader>{t('Hook Configuration')}</PanelHeader>\n          <PanelBody>\n            <BooleanField name=\"isActive\" label={t('Active')} />\n            <TextField\n              name=\"url\"\n              label={t('URL')}\n              required\n              help={t('The URL which will receive events.')}\n            />\n            <FormField\n              name=\"events\"\n              label={t('Events')}\n              inline={false}\n              help={t('The event types you wish to subscribe to.')}\n            >\n              {({value, onChange}) => (\n                <MultipleCheckbox\n                  onChange={onChange}\n                  value={value}\n                  choices={EVENT_CHOICES}\n                />\n              )}\n            </FormField>\n          </PanelBody>\n        </ApiForm>\n      </Panel>\n    );\n  }\n}\n"],"sourceRoot":""}