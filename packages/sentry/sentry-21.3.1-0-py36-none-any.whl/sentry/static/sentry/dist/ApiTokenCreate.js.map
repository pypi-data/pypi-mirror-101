{"version":3,"sources":["webpack:///./app/views/settings/account/apiNewToken.tsx","webpack:///./app/views/settings/components/forms/apiForm.tsx","webpack:///./app/views/settings/components/forms/controls/multipleCheckbox.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx"],"names":["SORTED_DEFAULT_API_ACCESS_SCOPES","DEFAULT_API_ACCESS_SCOPES","API_CHOICES","API_ACCESS_SCOPES","s","API_INDEX_ROUTE","ApiNewToken","onCancel","browserHistory","onSubmitSuccess","title","t","tct","link","href","apiMethod","apiEndpoint","initialData","scopes","this","footerStyle","marginTop","paddingRight","submitLabel","name","label","inline","required","value","onChange","choices","React","ApiForm","api","Client","onSubmit","data","onSuccess","onError","props","addLoadingMessage","request","method","success","response","clearIndicators","error","clear","otherProps","MultipleCheckboxWrapper","Label","CheckboxLabel","MultipleCheckbox","selectedValue","e","target","checked","filter","v","disabled","map","choiceValue","choiceLabel","LabelContainer","key","type","bind","defined","indexOf","p","theme","breakpoints","UnstyledSettingsPageHeader","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","defaultProps","space","gray400","fontSizeLarge","SettingsPageHeader"],"mappings":"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","file":"ApiTokenCreate.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\nimport {browserHistory} from 'react-router';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {API_ACCESS_SCOPES, DEFAULT_API_ACCESS_SCOPES} from 'app/constants';\nimport {t, tct} from 'app/locale';\nimport {Choices} from 'app/types';\nimport ApiForm from 'app/views/settings/components/forms/apiForm';\nimport MultipleCheckbox from 'app/views/settings/components/forms/controls/multipleCheckbox';\nimport FormField from 'app/views/settings/components/forms/formField';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nconst SORTED_DEFAULT_API_ACCESS_SCOPES = DEFAULT_API_ACCESS_SCOPES.sort();\nconst API_CHOICES: Choices = API_ACCESS_SCOPES.map(s => [s, s]);\nconst API_INDEX_ROUTE = '/settings/account/api/auth-tokens/';\n\nexport default class ApiNewToken extends React.Component {\n  onCancel = () => {\n    browserHistory.push(API_INDEX_ROUTE);\n  };\n\n  onSubmitSuccess = () => {\n    browserHistory.push(API_INDEX_ROUTE);\n  };\n\n  render() {\n    return (\n      <DocumentTitle title=\"Create API Token - Sentry\">\n        <div>\n          <SettingsPageHeader title={t('Create New Token')} />\n          <TextBlock>\n            {t(\n              \"Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.\"\n            )}\n          </TextBlock>\n          <TextBlock>\n            {tct(\n              'For more information on how to use the web API, see our [link:documentation].',\n              {\n                link: <a href=\"https://docs.sentry.io/api/\" />,\n              }\n            )}\n          </TextBlock>\n          <Panel>\n            <PanelHeader>{t('Create New Token')}</PanelHeader>\n            <ApiForm\n              apiMethod=\"POST\"\n              apiEndpoint=\"/api-tokens/\"\n              initialData={{scopes: SORTED_DEFAULT_API_ACCESS_SCOPES}}\n              onSubmitSuccess={this.onSubmitSuccess}\n              onCancel={this.onCancel}\n              footerStyle={{\n                marginTop: 0,\n                paddingRight: 20,\n              }}\n              submitLabel={t('Create Token')}\n            >\n              <PanelBody>\n                <FormField name=\"scopes\" label={t('Scopes')} inline={false} required>\n                  {({value, onChange}) => (\n                    <MultipleCheckbox\n                      onChange={onChange}\n                      value={value}\n                      choices={API_CHOICES}\n                    />\n                  )}\n                </FormField>\n              </PanelBody>\n            </ApiForm>\n          </Panel>\n        </div>\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\n\nimport {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport Form from 'app/views/settings/components/forms/form';\n\ntype Props = Form['props'] & {\n  onSubmit?: (data: Record<string, any>) => void;\n  apiMethod: string;\n  apiEndpoint: string;\n};\n\nexport default class ApiForm extends React.Component<Props> {\n  componentWillUnmount() {\n    this.api.clear();\n  }\n\n  api: Client = new Client();\n\n  onSubmit = (\n    data: Record<string, any>,\n    onSuccess: (response: Record<string, any>) => void,\n    onError: (error: any) => void\n  ) => {\n    this.props.onSubmit && this.props.onSubmit(data);\n    addLoadingMessage(t('Saving changes\\u2026'));\n    this.api.request(this.props.apiEndpoint, {\n      method: this.props.apiMethod,\n      data,\n      success: response => {\n        clearIndicators();\n        onSuccess(response);\n      },\n      error: error => {\n        clearIndicators();\n        onError(error);\n      },\n    });\n  };\n\n  render() {\n    const {\n      onSubmit: _onSubmit,\n      apiMethod: _apiMethod,\n      apiEndpoint: _apiEndpoint,\n      ...otherProps\n    } = this.props;\n\n    return <Form onSubmit={this.onSubmit} {...otherProps} />;\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Choices} from 'app/types';\nimport {defined} from 'app/utils';\n\nconst MultipleCheckboxWrapper = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Label = styled('label')`\n  font-weight: normal;\n  white-space: nowrap;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  width: 20%;\n`;\n\nconst CheckboxLabel = styled('span')`\n  margin-left: 3px;\n`;\n\ntype SelectedValue = (string | number)[];\n\ntype Props = {\n  value: (string | number)[];\n  choices: Choices;\n  onChange?: (value: SelectedValue, event: React.ChangeEvent<HTMLInputElement>) => void;\n  disabled?: boolean;\n};\n\nclass MultipleCheckbox extends React.Component<Props> {\n  onChange = (selectedValue: string | number, e: React.ChangeEvent<HTMLInputElement>) => {\n    const {value, onChange} = this.props;\n    let newValue: SelectedValue = [];\n\n    if (typeof onChange !== 'function') {\n      return;\n    }\n\n    if (e.target.checked) {\n      newValue = value ? [...value, selectedValue] : [value];\n    } else {\n      newValue = value.filter(v => v !== selectedValue);\n    }\n\n    onChange(newValue, e);\n  };\n\n  render() {\n    const {disabled, choices, value} = this.props;\n\n    return (\n      <MultipleCheckboxWrapper>\n        {choices.map(([choiceValue, choiceLabel]) => (\n          <LabelContainer key={choiceValue}>\n            <Label>\n              <input\n                type=\"checkbox\"\n                value={choiceValue}\n                onChange={this.onChange.bind(this, choiceValue)}\n                disabled={disabled}\n                checked={defined(value) && value.indexOf(choiceValue) !== -1}\n              />\n              <CheckboxLabel>{choiceLabel}</CheckboxLabel>\n            </Label>\n          </LabelContainer>\n        ))}\n      </MultipleCheckboxWrapper>\n    );\n  }\n}\n\nexport default MultipleCheckbox;\n\nconst LabelContainer = styled('div')`\n  width: 100%;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    width: 50%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    width: 33.333%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints[2]}) {\n    width: 25%;\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n"],"sourceRoot":""}