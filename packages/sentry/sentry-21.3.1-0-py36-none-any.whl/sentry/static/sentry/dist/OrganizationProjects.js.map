{"version":3,"sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/components/projectLabel.tsx","webpack:///./app/views/settings/components/settingsProjectItem.tsx","webpack:///./app/views/settings/organizationProjects/projectStatsGraph.tsx","webpack:///./app/views/settings/organizationProjects/index.tsx"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","ProjectLabel","project","className","slug","ProjectItem","state","isBookmarked","handleToggleBookmark","setState","organization","Wrapper","BookmarkLink","onToggle","to","BookmarkStar","ProjectStatsGraph","stats","series","seriesName","t","data","map","point","name","value","height","debounce","isGroupedByDate","showTimeInTooltip","OrganizationProjects","orgId","params","location","query","decodeScalar","per_page","since","Date","getTime","stat","group","routeTitleGen","renderBody","projectList","projectListPageLinks","projectStats","canCreateProjects","Set","access","has","priority","size","disabled","undefined","isCircled","SearchWrapper","renderSearchInput","updateRoute","placeholder","sortProjects","GridPanelItem","key","id","ProjectListItemWrapper","ProjectStatsGraphWrapper","length","pageLinks","withOrganization","PanelItem"],"mappings":"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","file":"OrganizationProjects.js","sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\n\nimport {Project} from 'app/types';\n\ntype Props = React.HTMLProps<HTMLSpanElement> & {\n  project: Project;\n};\n\nexport default class ProjectLabel extends React.PureComponent<Props> {\n  render() {\n    const {project, ...props} = this.props;\n\n    return (\n      <span className=\"project-label\" {...props}>\n        <span className=\"project-name\">{project.slug}</span>\n      </span>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Link from 'app/components/links/link';\nimport ProjectLabel from 'app/components/projectLabel';\nimport BookmarkStar from 'app/components/projects/bookmarkStar';\nimport space from 'app/styles/space';\nimport {Organization, Project} from 'app/types';\n\ntype Props = {\n  project: Project;\n  organization: Organization;\n};\n\ntype State = {\n  isBookmarked: boolean;\n};\n\nclass ProjectItem extends React.Component<Props, State> {\n  state = {\n    isBookmarked: this.props.project.isBookmarked,\n  };\n\n  handleToggleBookmark = (isBookmarked: State['isBookmarked']) => {\n    this.setState({isBookmarked});\n  };\n\n  render() {\n    const {project, organization} = this.props;\n\n    return (\n      <Wrapper>\n        <BookmarkLink\n          organization={organization}\n          project={project}\n          isBookmarked={this.state.isBookmarked}\n          onToggle={this.handleToggleBookmark}\n        />\n        <Link to={`/settings/${organization.slug}/projects/${project.slug}/`}>\n          <ProjectLabel project={project} />\n        </Link>\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst BookmarkLink = styled(BookmarkStar)`\n  margin-right: ${space(1)};\n  margin-top: -${space(0.25)};\n`;\n\nexport default ProjectItem;\n","import React from 'react';\nimport LazyLoad from 'react-lazyload';\n\nimport MiniBarChart from 'app/components/charts/miniBarChart';\nimport {t} from 'app/locale';\nimport {Project} from 'app/types';\nimport {Series} from 'app/types/echarts';\n\ntype Props = {\n  project: Project;\n  stats?: Project['stats'];\n};\n\nconst ProjectStatsGraph = ({project, stats}: Props) => {\n  stats = stats || project.stats || [];\n  const series: Series[] = [\n    {\n      seriesName: t('Events'),\n      data: stats.map(point => ({name: point[0] * 1000, value: point[1]})),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {series && (\n        <LazyLoad height={25} debounce={50}>\n          <MiniBarChart isGroupedByDate showTimeInTooltip series={series} height={25} />\n        </LazyLoad>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ProjectStatsGraph;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Button from 'app/components/button';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport Placeholder from 'app/components/placeholder';\nimport {IconAdd} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization, Project} from 'app/types';\nimport {sortProjects} from 'app/utils';\nimport {decodeScalar} from 'app/utils/queryString';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport ProjectListItem from 'app/views/settings/components/settingsProjectItem';\n\nimport ProjectStatsGraph from './projectStatsGraph';\n\nconst ITEMS_PER_PAGE = 50;\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n} & RouteComponentProps<{orgId: string}, {}>;\n\ntype ProjectStats = Record<string, Required<Project['stats']>>;\n\ntype State = AsyncView['state'] & {\n  projectList: Project[] | null;\n  projectListPageLinks: string | null;\n  projectStats: ProjectStats | null;\n};\n\nclass OrganizationProjects extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId} = this.props.params;\n    const {location} = this.props;\n    const query = decodeScalar(location.query.query);\n    return [\n      [\n        'projectList',\n        `/organizations/${orgId}/projects/`,\n        {\n          query: {\n            query,\n            per_page: ITEMS_PER_PAGE,\n          },\n        },\n      ],\n      [\n        'projectStats',\n        `/organizations/${orgId}/stats/`,\n        {\n          query: {\n            since: new Date().getTime() / 1000 - 3600 * 24,\n            stat: 'generated',\n            group: 'project',\n            per_page: ITEMS_PER_PAGE,\n          },\n        },\n      ],\n    ];\n  }\n\n  getTitle(): string {\n    const {organization} = this.props;\n    return routeTitleGen(t('Projects'), organization.slug, false);\n  }\n\n  renderLoading(): React.ReactNode {\n    return this.renderBody();\n  }\n\n  renderBody(): React.ReactNode {\n    const {projectList, projectListPageLinks, projectStats} = this.state;\n    const {organization} = this.props;\n    const canCreateProjects = new Set(organization.access).has('project:admin');\n\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"small\"\n        disabled={!canCreateProjects}\n        title={\n          !canCreateProjects\n            ? t('You do not have permission to create projects')\n            : undefined\n        }\n        to={`/organizations/${organization.slug}/projects/new/`}\n        icon={<IconAdd size=\"xs\" isCircled />}\n      >\n        {t('Create Project')}\n      </Button>\n    );\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader title=\"Projects\" action={action} />\n        <SearchWrapper>\n          {this.renderSearchInput({\n            updateRoute: true,\n            placeholder: t('Search Projects'),\n            className: 'search',\n          })}\n        </SearchWrapper>\n        <Panel>\n          <PanelHeader>{t('Projects')}</PanelHeader>\n          <PanelBody>\n            {projectList ? (\n              sortProjects(projectList).map(project => (\n                <GridPanelItem key={project.id}>\n                  <ProjectListItemWrapper>\n                    <ProjectListItem project={project} organization={organization} />\n                  </ProjectListItemWrapper>\n                  <ProjectStatsGraphWrapper>\n                    {projectStats ? (\n                      <ProjectStatsGraph\n                        key={project.id}\n                        project={project}\n                        stats={projectStats[project.id]}\n                      />\n                    ) : (\n                      <Placeholder height=\"25px\" />\n                    )}\n                  </ProjectStatsGraphWrapper>\n                </GridPanelItem>\n              ))\n            ) : (\n              <LoadingIndicator />\n            )}\n            {projectList && projectList.length === 0 && (\n              <EmptyMessage>{t('No projects found.')}</EmptyMessage>\n            )}\n          </PanelBody>\n        </Panel>\n        {projectListPageLinks && (\n          <Pagination pageLinks={projectListPageLinks} {...this.props} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationProjects);\n\nconst SearchWrapper = styled('div')`\n  margin-bottom: ${space(2)};\n`;\n\nconst GridPanelItem = styled(PanelItem)`\n  display: flex;\n  align-items: center;\n  padding: 0;\n`;\n\nconst ProjectListItemWrapper = styled('div')`\n  padding: ${space(2)};\n  flex: 1;\n`;\n\nconst ProjectStatsGraphWrapper = styled('div')`\n  padding: ${space(2)};\n  width: 25%;\n  margin-left: ${space(2)};\n`;\n"],"sourceRoot":""}