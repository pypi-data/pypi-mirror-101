{"version":3,"sources":["webpack:///./app/actionCreators/release.tsx","webpack:///./app/actions/releaseActions.tsx","webpack:///./app/components/charts/styles.tsx","webpack:///./app/stores/releaseStore.tsx","webpack:///./app/utils/discover/genericDiscoverQuery.tsx","webpack:///./app/views/sharedGroupDetails/sharedGroupHeader.tsx","webpack:///./app/views/sharedGroupDetails/index.tsx"],"names":["getProjectRelease","api","params","orgSlug","projectSlug","releaseVersion","path","encodeURIComponent","ReleaseStore","getReleaseStoreKey","ReleaseActions","requestPromise","method","then","res","err","status","Sentry","scope","setLevel","setFingerprint","getReleaseDeploys","archiveRelease","addLoadingMessage","t","data","ReleaseStatus","projects","version","release","addSuccessMessage","error","addErrorMessage","responseJSON","detail","restoreRelease","Reflux","SectionHeading","space","p","theme","subText","fontSizeMedium","SectionValue","InlineContainer","ChartControls","border","breakpoints","HeaderTitle","fontSizeLarge","textColor","HeaderTitleLegend","background","borderRadius","ChartContainer","ReleaseStoreConfig","state","undefined","Map","releaseLoading","releaseError","deploys","deploysLoading","deploysError","listenables","init","this","listenTo","OrganizationActions","updateOrganization","reset","trigger","org","slug","loadRelease","releaseKey","loadReleaseError","loadReleaseSuccess","loadDeploys","loadDeploysError","loadDeploysSuccess","get","GenericDiscoverQuery","isLoading","tableFetchID","tableData","pageLinks","_shouldRefetchData","prevProps","thisAPIPayload","getPayload","props","otherAPIPayload","isAPIPayloadSimilar","limit","route","cursor","fetchData","beforeFetch","afterFetch","eventView","setError","noPagination","referrer","isValid","url","Symbol","apiPayload","setState","per_page","doDiscoverQuery","jqXHR","prevState","getResponseHeader","refetchCondition","eventViewValidation","shouldRefetchExternal","shouldRefetchData","getRequestPayload","getEventsAPIPayload","location","childrenProps","children","React","includeAllArgs","query","SharedGroupHeader","group","Wrapper","Details","Title","title","isUnhandled","message","culprit","fontSizeExtraLarge","headerFontSize","overflowEllipsis","SharedGroupDetails","getInitialState","handleRetry","loading","document","body","classList","add","remove","shareId","onRetry","permalink","latestEvent","project","getTitle","className","to","Container","organization","event","isShare","childContextTypes","SentryTypes","withApi"],"mappings":"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","file":"SharedGroupDetails.js","sourcesContent":["import * as Sentry from '@sentry/react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport ReleaseActions from 'app/actions/releaseActions';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport ReleaseStore, {getReleaseStoreKey} from 'app/stores/releaseStore';\nimport {Deploy, Release, ReleaseStatus} from 'app/types';\n\ntype ParamsGet = {\n  orgSlug: string;\n  projectSlug: string;\n  releaseVersion: string;\n};\n\nexport function getProjectRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n  const path = `/projects/${orgSlug}/${projectSlug}/releases/${encodeURIComponent(\n    releaseVersion\n  )}/`;\n  // HACK(leedongwei): Actions fired by the ActionCreators are queued to\n  // the back of the event loop, allowing another getRelease for the same\n  // release to be fired before the loading state is updated in store.\n  // This hack short-circuits that and update the state immediately.\n  ReleaseStore.state.releaseLoading[\n    getReleaseStoreKey(projectSlug, releaseVersion)\n  ] = true;\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, res);\n    })\n    .catch(err => {\n      // This happens when a Project is not linked to a specific Release\n      if (err.status === 404) {\n        ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, null);\n        return;\n      }\n\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, err);\n      Sentry.withScope(scope => {\n        scope.setLevel(Sentry.Severity.Warning);\n        scope.setFingerprint(['getRelease-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n\nexport function getReleaseDeploys(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n  const path = `/organizations/${orgSlug}/releases/${encodeURIComponent(\n    releaseVersion\n  )}/deploys/`;\n\n  // HACK(leedongwei): Same as above\n  ReleaseStore.state.deploysLoading[\n    getReleaseStoreKey(projectSlug, releaseVersion)\n  ] = true;\n  ReleaseActions.loadDeploys(orgSlug, projectSlug, releaseVersion);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Deploy[]) => {\n      ReleaseActions.loadDeploysSuccess(projectSlug, releaseVersion, res);\n    })\n    .catch(err => {\n      // This happens when a Project is not linked to a specific Release\n      if (err.status === 404) {\n        ReleaseActions.loadDeploysSuccess(projectSlug, releaseVersion, null);\n        return;\n      }\n\n      ReleaseActions.loadDeploysError(projectSlug, releaseVersion, err);\n      Sentry.withScope(scope => {\n        scope.setLevel(Sentry.Severity.Warning);\n        scope.setFingerprint(['getReleaseDeploys-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n\nexport function archiveRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n  addLoadingMessage(t('Archiving Release\\u2026'));\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/releases/`, {\n      method: 'POST',\n      data: {\n        status: ReleaseStatus.Archived,\n        projects: [],\n        version: releaseVersion,\n      },\n    })\n    .then((release: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, release);\n      addSuccessMessage(t('Release was successfully archived.'));\n    })\n    .catch(error => {\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, error);\n      addErrorMessage(\n        error.responseJSON?.detail ?? t('Release could not be be archived.')\n      );\n      throw error;\n    });\n}\n\nexport function restoreRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n  addLoadingMessage(t('Restoring Release\\u2026'));\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/releases/`, {\n      method: 'POST',\n      data: {\n        status: ReleaseStatus.Active,\n        projects: [],\n        version: releaseVersion,\n      },\n    })\n    .then((release: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, release);\n      addSuccessMessage(t('Release was successfully restored.'));\n    })\n    .catch(error => {\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, error);\n      addErrorMessage(\n        error.responseJSON?.detail ?? t('Release could not be be restored.')\n      );\n      throw error;\n    });\n}\n","import Reflux from 'reflux';\n\nexport default Reflux.createActions([\n  'loadRelease', // Singular as it loads 1 release\n  'loadReleaseError',\n  'loadReleaseSuccess',\n  'loadDeploys', // Plural as it loads all deploys related to a release\n  'loadDeploysError',\n  'loadDeploysSuccess',\n]);\n","import styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\n\nexport const SubHeading = styled('h3')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  font-weight: normal;\n  color: ${p => p.theme.textColor};\n  margin: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const SectionHeading = styled('h4')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  grid-gap: ${space(1)};\n  align-items: center;\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: ${space(1)} 0;\n  line-height: 1.3;\n`;\n\nexport const SectionValue = styled('span')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-right: ${space(1)};\n`;\n\nexport const InlineContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-right: ${space(2)};\n\n  > h4 {\n    margin-right: ${space(1)};\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const ChartControls = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  padding: ${space(1)} ${space(3)};\n  border-top: 1px solid ${p => p.theme.border};\n\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    flex-direction: column;\n\n    > ${/* sc-selector */ InlineContainer} + ${/* sc-selector */ InlineContainer} {\n      margin-top: ${space(1)};\n    }\n  }\n`;\n\n// Header element for charts within panels.\nexport const HeaderTitle = styled('div')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  grid-gap: ${space(1)};\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.textColor};\n  align-items: center;\n`;\n\n// Header element for charts within panels\n// This header can be rendered while the chart is still loading\nexport const HeaderTitleLegend = styled(HeaderTitle)`\n  background-color: ${p => p.theme.background};\n  border-bottom-right-radius: ${p => p.theme.borderRadius};\n  position: absolute;\n  z-index: 1;\n`;\n\nexport const ChartContainer = styled('div')`\n  padding: ${space(2)} ${space(3)};\n`;\n","import Reflux from 'reflux';\n\nimport OrganizationActions from 'app/actions/organizationActions';\nimport ReleaseActions from 'app/actions/releaseActions';\nimport {Deploy, Organization, Release} from 'app/types';\n\ntype StoreRelease = Map<string, Release>;\ntype StoreDeploys = Map<string, Array<Deploy>>;\ntype StoreLoading = Map<string, boolean>;\ntype StoreError = Map<string, Error>;\n\ntype ReleaseStoreInterface = {\n  get(\n    projectSlug: string,\n    releaseVersion: string\n  ): {\n    release: Release | undefined;\n    releaseLoading: boolean | undefined;\n    releaseError: Error | undefined;\n    deploys: Array<Deploy> | undefined;\n    deploysLoading: boolean | undefined;\n    deploysError: Error | undefined;\n  };\n\n  state: {\n    orgSlug: string | undefined;\n    release: StoreRelease;\n    releaseLoading: StoreLoading;\n    releaseError: StoreError;\n    deploys: StoreDeploys;\n    deploysLoading: StoreLoading;\n    deploysError: StoreError;\n  };\n\n  updateOrganization(org: Organization): void;\n  loadRelease(orgSlug: string, projectSlug: string, releaseVersion: string): void;\n  loadReleaseSuccess(projectSlug: string, releaseVersion: string, data: Release): void;\n  loadReleaseError(projectSlug: string, releaseVersion: string, error: Error): void;\n  loadDeploys(orgSlug: string, projectSlug: string, releaseVersion: string): void;\n  loadDeploysSuccess(projectSlug: string, releaseVersion: string, data: Release): void;\n  loadDeploysError(projectSlug: string, releaseVersion: string, error: Error): void;\n};\n\nexport const getReleaseStoreKey = (projectSlug: string, releaseVersion: string) =>\n  `${projectSlug}${releaseVersion}`;\n\nconst ReleaseStoreConfig: Reflux.StoreDefinition & ReleaseStoreInterface = {\n  state: {\n    orgSlug: undefined,\n    release: new Map() as StoreRelease,\n    releaseLoading: new Map() as StoreLoading,\n    releaseError: new Map() as StoreError,\n    deploys: new Map() as StoreDeploys,\n    deploysLoading: new Map() as StoreLoading,\n    deploysError: new Map() as StoreError,\n  },\n\n  listenables: ReleaseActions,\n\n  init() {\n    this.listenTo(OrganizationActions.update, this.updateOrganization);\n    this.reset();\n  },\n\n  reset() {\n    this.state = {\n      orgSlug: undefined,\n      release: new Map() as StoreRelease,\n      releaseLoading: new Map() as StoreLoading,\n      releaseError: new Map() as StoreError,\n      deploys: new Map() as StoreDeploys,\n      deploysLoading: new Map() as StoreLoading,\n      deploysError: new Map() as StoreError,\n    };\n    this.trigger(this.state);\n  },\n\n  updateOrganization(org: Organization) {\n    this.reset();\n    this.state.orgSlug = org.slug;\n    this.trigger(this.state);\n  },\n\n  loadRelease(orgSlug: string, projectSlug: string, releaseVersion: string) {\n    // Wipe entire store if the user switched organizations\n    if (!this.orgSlug || this.orgSlug !== orgSlug) {\n      this.reset();\n      this.orgSlug = orgSlug;\n    }\n\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {releaseLoading, releaseError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: true,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadReleaseError(projectSlug: string, releaseVersion: string, error: Error) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {releaseLoading, releaseError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: false,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: error,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadReleaseSuccess(projectSlug: string, releaseVersion: string, data: Release) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {release, releaseLoading, releaseError, ...state} = this.state;\n    this.state = {\n      ...state,\n      release: {\n        ...release,\n        [releaseKey]: data,\n      },\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: false,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploys(orgSlug: string, projectSlug: string, releaseVersion: string) {\n    // Wipe entire store if the user switched organizations\n    if (!this.orgSlug || this.orgSlug !== orgSlug) {\n      this.reset();\n      this.orgSlug = orgSlug;\n    }\n\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: true,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploysError(projectSlug: string, releaseVersion: string, error: Error) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: false,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: error,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploysSuccess(projectSlug: string, releaseVersion: string, data: Release) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploys, deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploys: {\n        ...deploys,\n        [releaseKey]: data,\n      },\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: false,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  get(projectSlug: string, releaseVersion: string) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n\n    return {\n      release: this.state.release[releaseKey],\n      releaseLoading: this.state.releaseLoading[releaseKey],\n      releaseError: this.state.releaseError[releaseKey],\n      deploys: this.state.deploys[releaseKey],\n      deploysLoading: this.state.deploysLoading[releaseKey],\n      deploysError: this.state.deploysError[releaseKey],\n    };\n  },\n};\n\ntype ReleaseStore = Reflux.Store & ReleaseStoreInterface;\n\nconst ReleaseStore = Reflux.createStore(ReleaseStoreConfig) as ReleaseStore;\n\nexport default ReleaseStore;\n","import React from 'react';\nimport {Location} from 'history';\n\nimport {EventQuery} from 'app/actionCreators/events';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport EventView, {\n  isAPIPayloadSimilar,\n  LocationQuery,\n} from 'app/utils/discover/eventView';\n\nexport type GenericChildrenProps<T> = {\n  isLoading: boolean;\n  error: null | string;\n  tableData: T | null;\n  pageLinks: null | string;\n};\n\nexport type DiscoverQueryProps = {\n  api: Client;\n  /**\n   * Used as the default source for cursor values.\n   */\n  location: Location;\n  eventView: EventView;\n  orgSlug: string;\n  /**\n   * Record limit to get.\n   */\n  limit?: number;\n  /**\n   * Explicit cursor value if you aren't using `location.query.cursor` because there are\n   * multiple paginated results on the page.\n   */\n  cursor?: string;\n  /**\n   * Include this whenever pagination won't be used. Limit can still be used when this is\n   * passed, but cursor will be ignored.\n   */\n  noPagination?: boolean;\n  /**\n   * A callback to set an error so that the error can be rendered in parent components\n   */\n  setError?: (msg: string | undefined) => void;\n  /**\n   * Sets referrer parameter in the API Payload. Set of allowed referrers are defined\n   * on the OrganizationEventsV2Endpoint view.\n   */\n  referrer?: string;\n};\n\ntype RequestProps<P> = DiscoverQueryProps & P;\n\ntype ReactProps<T> = {\n  children?: (props: GenericChildrenProps<T>) => React.ReactNode;\n};\n\ntype Props<T, P> = RequestProps<P> &\n  ReactProps<T> & {\n    /**\n     * Route to the endpoint\n     */\n    route: string;\n    /**\n     * Allows components to modify the payload before it is set.\n     */\n    getRequestPayload?: (props: Props<T, P>) => any;\n    /**\n     * An external hook in addition to the event view check to check if data should be refetched\n     */\n    shouldRefetchData?: (prevProps: Props<T, P>, props: Props<T, P>) => boolean;\n    /**\n     * A hook before fetch that can be used to do things like clearing the api\n     */\n    beforeFetch?: (api: Client) => void;\n    /**\n     * A hook to modify data into the correct output after data has been received\n     */\n    afterFetch?: (data: any, props: Props<T, P>) => T;\n  };\n\ntype State<T> = {\n  tableFetchID: symbol | undefined;\n} & GenericChildrenProps<T>;\n\n/**\n * Generic component for discover queries\n */\nclass GenericDiscoverQuery<T, P> extends React.Component<Props<T, P>, State<T>> {\n  state: State<T> = {\n    isLoading: true,\n    tableFetchID: undefined,\n    error: null,\n\n    tableData: null,\n    pageLinks: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props<T, P>) {\n    // Reload data if we aren't already loading,\n    const refetchCondition = !this.state.isLoading && this._shouldRefetchData(prevProps);\n\n    // or if we've moved from an invalid view state to a valid one,\n    const eventViewValidation =\n      prevProps.eventView.isValid() === false && this.props.eventView.isValid();\n\n    const shouldRefetchExternal = this.props.shouldRefetchData\n      ? this.props.shouldRefetchData(prevProps, this.props)\n      : false;\n\n    if (refetchCondition || eventViewValidation || shouldRefetchExternal) {\n      this.fetchData();\n    }\n  }\n\n  getPayload(props: Props<T, P>) {\n    if (this.props.getRequestPayload) {\n      return this.props.getRequestPayload(props);\n    }\n    return props.eventView.getEventsAPIPayload(props.location);\n  }\n\n  _shouldRefetchData = (prevProps: Props<T, P>): boolean => {\n    const thisAPIPayload = this.getPayload(this.props);\n    const otherAPIPayload = this.getPayload(prevProps);\n\n    return (\n      !isAPIPayloadSimilar(thisAPIPayload, otherAPIPayload) ||\n      prevProps.limit !== this.props.limit ||\n      prevProps.route !== this.props.route ||\n      prevProps.cursor !== this.props.cursor\n    );\n  };\n\n  fetchData = async () => {\n    const {\n      api,\n      beforeFetch,\n      afterFetch,\n      eventView,\n      orgSlug,\n      route,\n      limit,\n      cursor,\n      setError,\n      noPagination,\n      referrer,\n    } = this.props;\n\n    if (!eventView.isValid()) {\n      return;\n    }\n\n    const url = `/organizations/${orgSlug}/${route}/`;\n    const tableFetchID = Symbol(`tableFetchID`);\n    const apiPayload: Partial<EventQuery & LocationQuery> = this.getPayload(this.props);\n\n    this.setState({isLoading: true, tableFetchID});\n\n    setError?.(undefined);\n\n    if (limit) {\n      apiPayload.per_page = limit;\n    }\n    if (noPagination) {\n      apiPayload.noPagination = noPagination;\n    }\n    if (cursor) {\n      apiPayload.cursor = cursor;\n    }\n    if (referrer) {\n      apiPayload.referrer = referrer;\n    }\n\n    beforeFetch?.(api);\n\n    try {\n      const [data, , jqXHR] = await doDiscoverQuery<T>(api, url, apiPayload);\n      if (this.state.tableFetchID !== tableFetchID) {\n        // invariant: a different request was initiated after this request\n        return;\n      }\n\n      const tableData = afterFetch ? afterFetch(data, this.props) : data;\n\n      this.setState(prevState => ({\n        isLoading: false,\n        tableFetchID: undefined,\n        error: null,\n        pageLinks: jqXHR?.getResponseHeader('Link') ?? prevState.pageLinks,\n        tableData,\n      }));\n    } catch (err) {\n      const error = err?.responseJSON?.detail || t('An unknown error occurred.');\n      this.setState({\n        isLoading: false,\n        tableFetchID: undefined,\n        error,\n        tableData: null,\n      });\n      if (setError) {\n        setError(error);\n      }\n    }\n  };\n\n  render() {\n    const {isLoading, error, tableData, pageLinks} = this.state;\n\n    const childrenProps: GenericChildrenProps<T> = {\n      isLoading,\n      error,\n      tableData,\n      pageLinks,\n    };\n    const children: ReactProps<T>['children'] = this.props.children; // Explicitly setting type due to issues with generics and React's children\n    return children?.(childrenProps);\n  }\n}\n\nexport type DiscoverQueryRequestParams = Partial<EventQuery & LocationQuery>;\n\nexport async function doDiscoverQuery<T>(\n  api: Client,\n  url: string,\n  params: DiscoverQueryRequestParams\n): Promise<[T, string | undefined, JQueryXHR | undefined]> {\n  return api.requestPromise(url, {\n    method: 'GET',\n    includeAllArgs: true,\n    query: {\n      // marking params as any so as to not cause typescript errors\n      ...(params as any),\n    },\n  });\n}\n\nexport default GenericDiscoverQuery;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport EventMessage from 'app/components/events/eventMessage';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\nimport {Group} from 'app/types';\n\nimport UnhandledTag, {\n  TagAndMessageWrapper,\n} from '../organizationGroupDetails/unhandledTag';\n\ntype Props = {\n  group: Group;\n};\n\nconst SharedGroupHeader = ({group}: Props) => (\n  <Wrapper>\n    <Details>\n      <Title>{group.title}</Title>\n      <TagAndMessageWrapper>\n        {group.isUnhandled && <UnhandledTag />}\n        <EventMessage message={group.culprit} />\n      </TagAndMessageWrapper>\n    </Details>\n  </Wrapper>\n);\n\nexport default SharedGroupHeader;\n\nconst Wrapper = styled('div')`\n  padding: ${space(3)} ${space(4)} ${space(3)} ${space(4)};\n  border-bottom: ${p => `1px solid ${p.theme.border}`};\n  box-shadow: 0 2px 0 rgba(0, 0, 0, 0.03);\n  position: relative;\n  margin: 0 0 ${space(3)};\n`;\n\nconst Details = styled('div')`\n  max-width: 960px;\n  margin: 0 auto;\n`;\n\n// TODO(style): the color #161319 is not yet in the color object of the theme\nconst Title = styled('h3')`\n  color: #161319;\n  margin: 0 0 ${space(1)};\n  overflow-wrap: break-word;\n  line-height: 1.2;\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  @media (min-width: ${props => props.theme.breakpoints[0]}) {\n    font-size: ${p => p.theme.headerFontSize};\n    line-height: 1.1;\n    ${overflowEllipsis};\n  }\n`;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'app/api';\nimport NotFound from 'app/components/errors/notFound';\nimport {BorderlessEventEntries} from 'app/components/events/eventEntries';\nimport Footer from 'app/components/footer';\nimport Link from 'app/components/links/link';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\nimport space from 'app/styles/space';\nimport {Group} from 'app/types';\nimport withApi from 'app/utils/withApi';\n\nimport SharedGroupHeader from './sharedGroupHeader';\n\ntype Props = RouteComponentProps<{shareId: string}, {}> & {\n  api: Client;\n};\n\ntype State = {\n  group: Group | null;\n  loading: boolean;\n  error: boolean;\n};\n\nclass SharedGroupDetails extends React.Component<Props, State> {\n  static childContextTypes = {\n    group: SentryTypes.Group,\n  };\n\n  state: State = this.getInitialState();\n\n  getInitialState() {\n    return {\n      group: null,\n      loading: true,\n      error: false,\n    };\n  }\n\n  getChildContext() {\n    return {\n      group: this.state.group,\n    };\n  }\n\n  componentWillMount() {\n    document.body.classList.add('shared-group');\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('shared-group');\n  }\n\n  async fetchData() {\n    const {params, api} = this.props;\n    const {shareId} = params;\n    try {\n      const group = await api.requestPromise(`/shared/issues/${shareId}/`);\n      this.setState({loading: false, group});\n    } catch {\n      this.setState({loading: false, error: true});\n    }\n  }\n\n  handleRetry = () => {\n    this.setState(this.getInitialState());\n    this.fetchData();\n  };\n\n  getTitle() {\n    const {group} = this.state;\n\n    if (group) {\n      return group.title;\n    }\n\n    return 'Sentry';\n  }\n\n  render() {\n    const {group, loading, error} = this.state;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (!group) {\n      return <NotFound />;\n    }\n\n    if (error) {\n      return <LoadingError onRetry={this.handleRetry} />;\n    }\n\n    const {location, api} = this.props;\n    const {permalink, latestEvent, project} = group;\n    const title = this.getTitle();\n\n    return (\n      <DocumentTitle title={title}>\n        <div className=\"app\">\n          <div className=\"pattern-bg\" />\n          <div className=\"container\">\n            <div className=\"box box-modal\">\n              <div className=\"box-header\">\n                <Link className=\"logo\" to=\"/\">\n                  <span className=\"icon-sentry-logo-full\" />\n                </Link>\n                {permalink && (\n                  <Link className=\"details\" to={permalink}>\n                    {t('Details')}\n                  </Link>\n                )}\n              </div>\n              <div className=\"content\">\n                <SharedGroupHeader group={group} />\n                <Container className=\"group-overview event-details-container\">\n                  <BorderlessEventEntries\n                    location={location}\n                    organization={project.organization}\n                    group={group}\n                    event={latestEvent}\n                    project={project}\n                    api={api}\n                    isShare\n                  />\n                </Container>\n                <Footer />\n              </div>\n            </div>\n          </div>\n        </div>\n      </DocumentTitle>\n    );\n  }\n}\n\nconst Container = styled('div')`\n  padding: 0 ${space(4)};\n`;\n\nexport {SharedGroupDetails};\nexport default withApi(SharedGroupDetails);\n"],"sourceRoot":""}