{"version":3,"sources":["webpack:///./app/components/searchBar.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/monitors/monitorIcon.tsx","webpack:///./app/views/monitors/monitors.tsx"],"names":["SearchBar","state","query","props","defaultQuery","dropdownVisible","searchInputRef","React","blur","current","onSubmit","evt","preventDefault","onSearch","clearSearch","setState","callIfFunction","onChange","onQueryFocus","onQueryBlur","onQueryChange","value","target","nextProps","this","className","width","classNames","StyledInput","type","placeholder","name","ref","autoComplete","onBlur","StyledIconSearch","size","color","SearchClearButton","priority","onClick","icon","label","t","defaultProps","Input","p","undefined","IconSearch","Button","theme","fontSizeLarge","gray200","gray300","AsyncView","title","getTitle","renderComponent","AsyncComponent","status","error","success","disabled","Monitors","handleSearch","location","context","router","push","pathname","getParams","params","orgId","monitorList","monitorListPageLinks","organization","HeaderTitle","NewMonitorButton","to","slug","StyledSearchBar","decodeScalar","qs","search","map","monitor","PanelItemCentered","key","id","StyledLink","nextCheckIn","date","lastCheckIn","pageLinks","PageHeading","space","PanelItem","Link","withRouter","withOrganization"],"mappings":"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","file":"Monitors.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport Button from 'app/components/button';\nimport {IconSearch} from 'app/icons';\nimport {IconClose} from 'app/icons/iconClose';\nimport {t} from 'app/locale';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport Input from 'app/views/settings/components/forms/controls/input';\n\ntype DefaultProps = {\n  query: string;\n  defaultQuery: string;\n  onSearch: (query: string) => void;\n};\n\ntype Props = DefaultProps & {\n  placeholder?: string;\n  className?: string;\n  onChange?: (query: string) => void;\n  width?: string;\n};\n\ntype State = {\n  query: string;\n  dropdownVisible: boolean;\n};\n\nclass SearchBar extends React.PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    query: '',\n    defaultQuery: '',\n    onSearch: function () {},\n  };\n\n  state = {\n    query: this.props.query || this.props.defaultQuery,\n    dropdownVisible: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.query !== this.props.query) {\n      this.setState({\n        query: nextProps.query,\n      });\n    }\n  }\n\n  searchInputRef = React.createRef<HTMLInputElement>();\n\n  blur = () => {\n    if (this.searchInputRef.current) {\n      this.searchInputRef.current.blur();\n    }\n  };\n\n  onSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    this.blur();\n    this.props.onSearch(this.state.query);\n  };\n\n  clearSearch = () => {\n    this.setState({query: this.props.defaultQuery}, () => {\n      this.props.onSearch(this.state.query);\n      callIfFunction(this.props.onChange, this.state.query);\n    });\n  };\n\n  onQueryFocus = () => {\n    this.setState({\n      dropdownVisible: true,\n    });\n  };\n\n  onQueryBlur = () => {\n    this.setState({dropdownVisible: false});\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const {value} = evt.target;\n\n    this.setState({query: value});\n    callIfFunction(this.props.onChange, value);\n  };\n\n  render() {\n    const {className, width} = this.props;\n\n    return (\n      <div className={classNames('search', className)}>\n        <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\n          <div>\n            <StyledInput\n              type=\"text\"\n              className=\"search-input\"\n              placeholder={this.props.placeholder}\n              name=\"query\"\n              ref={this.searchInputRef}\n              autoComplete=\"off\"\n              value={this.state.query}\n              onBlur={this.onQueryBlur}\n              onChange={this.onQueryChange}\n              width={width}\n            />\n            <StyledIconSearch className=\"search-input-icon\" size=\"sm\" color=\"gray300\" />\n            {this.state.query !== this.props.defaultQuery && (\n              <SearchClearButton\n                type=\"button\"\n                className=\"search-clear-form\"\n                priority=\"link\"\n                onClick={this.clearSearch}\n                size=\"xsmall\"\n                icon={<IconClose />}\n                label={t('Clear')}\n              />\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst StyledInput = styled(Input)`\n  width: ${p => (p.width ? p.width : undefined)};\n  &.focus-visible {\n    box-shadow: inset 0 2px 0 rgba(0, 0, 0, 0.04), 0 0 6px rgba(177, 171, 225, 0.3);\n    border-color: #a598b2;\n    outline: none;\n  }\n`;\n\nconst StyledIconSearch = styled(IconSearch)`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 14px;\n`;\n\nconst SearchClearButton = styled(Button)`\n  position: absolute;\n  top: 50%;\n  height: 16px;\n  transform: translateY(-50%);\n  right: 10px;\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.gray200};\n\n  &:hover {\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nexport default SearchBar;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport {Status} from './types';\n\nexport default styled('div')<{size: number; status: Status}>`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  height: ${p => p.size}px;\n  width: ${p => p.size}px;\n\n  ${p =>\n    p.color\n      ? `background: ${p.color};`\n      : `background: ${\n          p.status === 'error'\n            ? p.theme.error\n            : p.status === 'ok'\n            ? p.theme.success\n            : p.theme.disabled\n        };`};\n`;\n","import React from 'react';\nimport {Link, RouteComponentProps, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as qs from 'query-string';\n\nimport Button from 'app/components/button';\nimport FeatureBadge from 'app/components/featureBadge';\nimport {getParams} from 'app/components/organizations/globalSelectionHeader/getParams';\nimport PageHeading from 'app/components/pageHeading';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelBody, PanelItem} from 'app/components/panels';\nimport SearchBar from 'app/components/searchBar';\nimport TimeSince from 'app/components/timeSince';\nimport {t} from 'app/locale';\nimport {PageHeader} from 'app/styles/organization';\nimport space from 'app/styles/space';\nimport {Organization} from 'app/types';\nimport {decodeScalar} from 'app/utils/queryString';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\n\nimport MonitorIcon from './monitorIcon';\nimport {Monitor} from './types';\n\ntype Props = AsyncView['props'] &\n  RouteComponentProps<{orgId: string}, {}> &\n  WithRouterProps & {\n    organization: Organization;\n  };\n\ntype State = AsyncView['state'] & {\n  monitorList: Monitor[] | null;\n};\n\nclass Monitors extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {params, location} = this.props;\n    return [\n      [\n        'monitorList',\n        `/organizations/${params.orgId}/monitors/`,\n        {\n          query: location.query,\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    return `Monitors - ${this.props.params.orgId}`;\n  }\n\n  handleSearch = (query: string) => {\n    const {location} = this.props;\n    const {router} = this.context;\n    router.push({\n      pathname: location.pathname,\n      query: getParams({\n        ...(location.query || {}),\n        query,\n      }),\n    });\n  };\n\n  renderBody() {\n    const {monitorList, monitorListPageLinks} = this.state;\n    const {organization} = this.props;\n    return (\n      <React.Fragment>\n        <PageHeader>\n          <HeaderTitle>\n            <div>\n              {t('Monitors')} <FeatureBadge type=\"beta\" />\n            </div>\n            <NewMonitorButton\n              to={`/organizations/${organization.slug}/monitors/create/`}\n              priority=\"primary\"\n              size=\"xsmall\"\n            >\n              {t('New Monitor')}\n            </NewMonitorButton>\n          </HeaderTitle>\n          <StyledSearchBar\n            query={decodeScalar(qs.parse(location.search)?.query, '')}\n            placeholder={t('Search for monitors.')}\n            onSearch={this.handleSearch}\n          />\n        </PageHeader>\n        <Panel>\n          <PanelBody>\n            {monitorList?.map(monitor => (\n              <PanelItemCentered key={monitor.id}>\n                <MonitorIcon status={monitor.status} size={16} />\n                <StyledLink\n                  to={`/organizations/${organization.slug}/monitors/${monitor.id}/`}\n                >\n                  {monitor.name}\n                </StyledLink>\n                {monitor.nextCheckIn ? (\n                  <TimeSince date={monitor.lastCheckIn} />\n                ) : (\n                  t('n/a')\n                )}\n              </PanelItemCentered>\n            ))}\n          </PanelBody>\n        </Panel>\n        {monitorListPageLinks && (\n          <Pagination pageLinks={monitorListPageLinks} {...this.props} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst HeaderTitle = styled(PageHeading)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1;\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  flex: 1;\n`;\n\nconst NewMonitorButton = styled(Button)`\n  margin-right: ${space(2)};\n`;\n\nconst PanelItemCentered = styled(PanelItem)`\n  align-items: center;\n  padding: 0;\n  padding-left: ${space(2)};\n  padding-right: ${space(2)};\n`;\n\nconst StyledLink = styled(Link)`\n  flex: 1;\n  padding: ${space(2)};\n`;\n\nexport default withRouter(withOrganization(Monitors));\n"],"sourceRoot":""}