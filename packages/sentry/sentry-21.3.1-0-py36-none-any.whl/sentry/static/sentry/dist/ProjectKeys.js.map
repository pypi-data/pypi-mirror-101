{"version":3,"sources":["webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/project/projectKeys/list/keyRow.tsx","webpack:///./app/views/settings/project/projectKeys/list/index.tsx","webpack:///./app/views/settings/project/projectKeys/projectKeyCredentials.tsx"],"names":["recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","KeyRow","handleRemove","data","onRemove","handleEnable","onToggle","handleDisable","access","editUrl","id","controlActive","has","controls","key","size","t","onClick","isActive","disabled","priority","onConfirm","confirmText","message","hasButtons","PanelHeaderLink","label","Controls","c","n","StyledClippedBox","clipHeight","defaultClipped","btnText","StyledPanelBody","projectId","ClippedBox","Link","subText","PanelBody","ProjectKeys","handleRemoveKey","oldKeyList","state","keyList","addLoadingMessage","setState","filter","orgId","api","requestPromise","method","addSuccessMessage","addErrorMessage","handleToggleKey","handleCreateKey","routeTitleGen","description","organization","Set","pageLinks","keyListPageLinks","isEmpty","length","data-test-id","isCircled","tct","link","href","code","renderEmpty","renderResults","withOrganization","ProjectKeyCredentials","showDeprecatedDsn","toggleDeprecatedDsn","showDsn","showDsnPublic","showSecurityEndpoint","showMinidump","showUnreal","showPublicKey","showSecretKey","showProjectId","inline","flexibleControlStateSize","help","getDynamicText","value","dsn","fixed","StyledField","secret","security","minidump","unreal","Field"],"mappings":"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","file":"ProjectKeys.js","sourcesContent":["import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport {Link, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport ClippedBox from 'app/components/clippedBox';\nimport Confirm from 'app/components/confirm';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {IconDelete} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Scope} from 'app/types';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport ProjectKeyCredentials from 'app/views/settings/project/projectKeys/projectKeyCredentials';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\n\ntype Props = {\n  api: Client;\n  orgId: string;\n  projectId: string;\n  data: ProjectKey;\n  access: Set<Scope>;\n  onToggle: (isActive: boolean, data: ProjectKey) => void;\n  onRemove: (data: ProjectKey) => void;\n} & Pick<RouteComponentProps<{}, {}>, 'routes' | 'location' | 'params'>;\n\nclass KeyRow extends React.Component<Props> {\n  handleRemove = () => {\n    const {data, onRemove} = this.props;\n    onRemove(data);\n  };\n\n  handleEnable = () => {\n    const {onToggle, data} = this.props;\n    onToggle(true, data);\n  };\n\n  handleDisable = () => {\n    const {onToggle, data} = this.props;\n    onToggle(false, data);\n  };\n\n  render() {\n    const {access, data, routes, location, params} = this.props;\n    const editUrl = recreateRoute(`${data.id}/`, {routes, params, location});\n    const controlActive = access.has('project:write');\n\n    const controls = [\n      <Button key=\"edit\" to={editUrl} size=\"small\">\n        {t('Configure')}\n      </Button>,\n      <Button\n        key=\"toggle\"\n        size=\"small\"\n        onClick={data.isActive ? this.handleDisable : this.handleEnable}\n        disabled={!controlActive}\n      >\n        {data.isActive ? t('Disable') : t('Enable')}\n      </Button>,\n      <Confirm\n        key=\"remove\"\n        priority=\"danger\"\n        disabled={!controlActive}\n        onConfirm={this.handleRemove}\n        confirmText={t('Remove Key')}\n        message={t(\n          'Are you sure you want to remove this key? This action is irreversible.'\n        )}\n      >\n        <Button size=\"small\" disabled={!controlActive} icon={<IconDelete />} />\n      </Confirm>,\n    ];\n\n    return (\n      <Panel>\n        <PanelHeader hasButtons>\n          <Title disabled={!data.isActive}>\n            <PanelHeaderLink to={editUrl}>{data.label}</PanelHeaderLink>\n            {!data.isActive && (\n              <small>\n                {' \\u2014  '}\n                {t('Disabled')}\n              </small>\n            )}\n          </Title>\n          <Controls>\n            {controls.map((c, n) => (\n              <span key={n}> {c}</span>\n            ))}\n          </Controls>\n        </PanelHeader>\n\n        <StyledClippedBox clipHeight={300} defaultClipped btnText={t('Expand')}>\n          <StyledPanelBody disabled={!data.isActive}>\n            <ProjectKeyCredentials projectId={`${data.projectId}`} data={data} />\n          </StyledPanelBody>\n        </StyledClippedBox>\n      </Panel>\n    );\n  }\n}\n\nexport default KeyRow;\n\nconst StyledClippedBox = styled(ClippedBox)`\n  padding: 0;\n  margin: 0;\n  > *:last-child {\n    padding-bottom: ${space(3)};\n  }\n`;\n\nconst PanelHeaderLink = styled(Link)`\n  color: ${p => p.theme.subText};\n`;\n\nconst Title = styled('div')<{disabled: boolean}>`\n  flex: 1;\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n  margin-right: ${space(1)};\n`;\n\nconst Controls = styled('div')`\n  display: grid;\n  align-items: center;\n  grid-gap: ${space(1)};\n  grid-auto-flow: column;\n`;\n\nconst StyledPanelBody = styled(PanelBody)<{disabled: boolean}>`\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n`;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport Pagination from 'app/components/pagination';\nimport {Panel} from 'app/components/panels';\nimport {IconAdd, IconFlag} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport {Organization, Project} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\n\nimport KeyRow from './keyRow';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  keyList: ProjectKey[];\n} & AsyncView['state'];\n\nclass ProjectKeys extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Client Keys'), projectId, false);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [['keyList', `/projects/${orgId}/${projectId}/keys/`]];\n  }\n\n  /**\n   * Optimistically remove key\n   */\n  handleRemoveKey = async (data: ProjectKey) => {\n    const oldKeyList = [...this.state.keyList];\n\n    addLoadingMessage(t('Revoking key\\u2026'));\n\n    this.setState(state => ({\n      keyList: state.keyList.filter(key => key.id !== data.id),\n    }));\n\n    const {orgId, projectId} = this.props.params;\n\n    try {\n      await this.api.requestPromise(`/projects/${orgId}/${projectId}/keys/${data.id}/`, {\n        method: 'DELETE',\n      });\n      addSuccessMessage(t('Revoked key'));\n    } catch (_err) {\n      this.setState({\n        keyList: oldKeyList,\n      });\n      addErrorMessage(t('Unable to revoke key'));\n    }\n  };\n\n  handleToggleKey = async (isActive: boolean, data: ProjectKey) => {\n    const oldKeyList = [...this.state.keyList];\n\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    this.setState(state => {\n      const keyList = state.keyList.map(key => {\n        if (key.id === data.id) {\n          return {\n            ...key,\n            isActive: !data.isActive,\n          };\n        }\n\n        return key;\n      });\n      return {keyList};\n    });\n\n    const {orgId, projectId} = this.props.params;\n\n    try {\n      await this.api.requestPromise(`/projects/${orgId}/${projectId}/keys/${data.id}/`, {\n        method: 'PUT',\n        data: {isActive},\n      });\n      addSuccessMessage(isActive ? t('Enabled key') : t('Disabled key'));\n    } catch (_err) {\n      addErrorMessage(isActive ? t('Error enabling key') : t('Error disabling key'));\n      this.setState({keyList: oldKeyList});\n    }\n  };\n\n  handleCreateKey = async () => {\n    const {orgId, projectId} = this.props.params;\n\n    try {\n      const data: ProjectKey = await this.api.requestPromise(\n        `/projects/${orgId}/${projectId}/keys/`,\n        {\n          method: 'POST',\n        }\n      );\n\n      this.setState(state => ({\n        keyList: [...state.keyList, data],\n      }));\n      addSuccessMessage(t('Created a new key.'));\n    } catch (_err) {\n      addErrorMessage(t('Unable to create new key. Please try again.'));\n    }\n  };\n\n  renderEmpty() {\n    return (\n      <Panel>\n        <EmptyMessage\n          icon={<IconFlag size=\"xl\" />}\n          description={t('There are no keys active for this project.')}\n        />\n      </Panel>\n    );\n  }\n\n  renderResults() {\n    const {location, organization, routes, params} = this.props;\n    const {orgId, projectId} = params;\n    const access = new Set(organization.access);\n\n    return (\n      <React.Fragment>\n        {this.state.keyList.map(key => (\n          <KeyRow\n            api={this.api}\n            access={access}\n            key={key.id}\n            orgId={orgId}\n            projectId={`${projectId}`}\n            data={key}\n            onToggle={this.handleToggleKey}\n            onRemove={this.handleRemoveKey}\n            routes={routes}\n            location={location}\n            params={params}\n          />\n        ))}\n        <Pagination pageLinks={this.state.keyListPageLinks} />\n      </React.Fragment>\n    );\n  }\n\n  renderBody() {\n    const access = new Set(this.props.organization.access);\n    const isEmpty = !this.state.keyList.length;\n\n    return (\n      <div data-test-id=\"project-keys\">\n        <SettingsPageHeader\n          title={t('Client Keys')}\n          action={\n            access.has('project:write') ? (\n              <Button\n                onClick={this.handleCreateKey}\n                size=\"small\"\n                priority=\"primary\"\n                icon={<IconAdd size=\"xs\" isCircled />}\n              >\n                {t('Generate New Key')}\n              </Button>\n            ) : null\n          }\n        />\n        <TextBlock>\n          {tct(\n            `To send data to Sentry you will need to configure an SDK with a client key\n          (usually referred to as the [code:SENTRY_DSN] value). For more\n          information on integrating Sentry with your application take a look at our\n          [link:documentation].`,\n            {\n              link: <ExternalLink href=\"https://docs.sentry.io/\" />,\n              code: <code />,\n            }\n          )}\n        </TextBlock>\n\n        {isEmpty ? this.renderEmpty() : this.renderResults()}\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(ProjectKeys);\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport Link from 'app/components/links/link';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport Field from 'app/views/settings/components/forms/field';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\n\nconst DEFAULT_PROPS = {\n  showDsn: true,\n  showDsnPublic: true,\n  showSecurityEndpoint: true,\n  showMinidump: true,\n  showUnreal: true,\n  showPublicKey: false,\n  showSecretKey: false,\n  showProjectId: false,\n};\n\ntype Props = {\n  projectId: string;\n  data: ProjectKey;\n} & typeof DEFAULT_PROPS;\n\ntype State = {\n  showDeprecatedDsn: boolean;\n};\n\nclass ProjectKeyCredentials extends React.Component<Props, State> {\n  static defaultProps = DEFAULT_PROPS;\n\n  state = {\n    showDeprecatedDsn: false,\n  };\n\n  toggleDeprecatedDsn = () => {\n    this.setState(state => ({\n      showDeprecatedDsn: !state.showDeprecatedDsn,\n    }));\n  };\n\n  render() {\n    const {showDeprecatedDsn} = this.state;\n    const {\n      projectId,\n      data,\n      showDsn,\n      showDsnPublic,\n      showSecurityEndpoint,\n      showMinidump,\n      showUnreal,\n      showPublicKey,\n      showSecretKey,\n      showProjectId,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        {showDsnPublic && (\n          <Field\n            label={t('DSN')}\n            inline={false}\n            flexibleControlStateSize\n            help={tct('The DSN tells the SDK where to send the events to. [link]', {\n              link: showDsn ? (\n                <Link to=\"\" onClick={this.toggleDeprecatedDsn}>\n                  {showDeprecatedDsn\n                    ? t('Hide deprecated DSN')\n                    : t('Show deprecated DSN')}\n                </Link>\n              ) : null,\n            })}\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.public,\n                fixed: '__DSN__',\n              })}\n            </TextCopyInput>\n            {showDeprecatedDsn && (\n              <StyledField\n                label={null}\n                help={t(\n                  'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n                )}\n                inline={false}\n                flexibleControlStateSize\n              >\n                <TextCopyInput>\n                  {getDynamicText({\n                    value: data.dsn.secret,\n                    fixed: '__DSN_DEPRECATED__',\n                  })}\n                </TextCopyInput>\n              </StyledField>\n            )}\n          </Field>\n        )}\n\n        {/* this edge case should imho not happen, but just to be sure */}\n        {!showDsnPublic && showDsn && (\n          <Field\n            label={t('DSN (Deprecated)')}\n            help={t(\n              'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.secret,\n                fixed: '__DSN_DEPRECATED__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showSecurityEndpoint && (\n          <Field\n            label={t('Security Header Endpoint')}\n            help={t(\n              'Use your security header endpoint for features like CSP and Expect-CT reports.'\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.security,\n                fixed: '__SECURITY_HEADER_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showMinidump && (\n          <Field\n            label={t('Minidump Endpoint')}\n            help={tct(\n              'Use this endpoint to upload [link], for example with Electron, Crashpad or Breakpad.',\n              {\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/platforms/native/guides/minidumps/\">\n                    minidump crash reports\n                  </ExternalLink>\n                ),\n              }\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.minidump,\n                fixed: '__MINIDUMP_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showUnreal && (\n          <Field\n            label={t('Unreal Engine 4 Endpoint')}\n            help={t('Use this endpoint to configure your UE4 Crash Reporter.')}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.unreal || '',\n                fixed: '__UNREAL_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showPublicKey && (\n          <Field label={t('Public Key')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.public,\n                fixed: '__PUBLICKEY__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showSecretKey && (\n          <Field label={t('Secret Key')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.secret,\n                fixed: '__SECRETKEY__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showProjectId && (\n          <Field label={t('Project ID')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: projectId,\n                fixed: '__PROJECTID__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst StyledField = styled(Field)`\n  padding: ${space(0.5)} 0 0 0;\n`;\n\nexport default ProjectKeyCredentials;\n"],"sourceRoot":""}