{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectKeys/details/keyRateLimitsForm.tsx","webpack:///./app/views/settings/project/projectKeys/details/keySettings.tsx","webpack:///./app/views/settings/project/projectKeys/details/keyStats.tsx","webpack:///./app/views/settings/project/projectKeys/details/index.tsx","webpack:///./app/views/settings/project/projectKeys/projectKeyCredentials.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","PermissionAlert","access","hasAccess","type","size","t","RATE_LIMIT_FORMAT_MAP","Map","formatRateLimitWindow","val","get","KeyRateLimitsForm","handleChangeWindow","onChange","onBlur","currentValueObj","value","e","valueObj","window","handleChangeCount","cb","count","target","data","disabled","params","keyId","orgId","projectId","apiEndpoint","disabledAlert","features","alert","PanelAlert","featureName","saveOnBlur","apiMethod","initialData","hookName","renderDisabled","children","hasFeature","organization","project","className","name","label","validate","form","rateLimit","formatMessageValue","help","inline","RateLimitRow","min","placeholder","bind","EventsIn","allowedValues","Array","from","keys","formatLabel","fontSizeRelativeSmall","KeySettings","state","loading","error","handleRemove","addLoadingMessage","api","onRemove","requestPromise","method","addSuccessMessage","setState","addErrorMessage","loaderLink","getDynamicText","dsn","cdn","fixed","allowUndo","required","maxLength","date","dateCreated","tct","link","href","flexibleControlStateSize","choices","browserSdk","allowClear","enabled","showPublicKey","showSecretKey","showProjectId","priority","message","onConfirm","confirmText","getInitialState","until","Math","floor","Date","getTime","since","series","emptyStats","KeyStats","fetchData","request","query","resolution","success","dropped","accepted","forEach","total","push","ts","seriesName","onRetry","withPadding","height","description","isGroupedByDate","colors","stacked","labelYAxisExtents","ProjectKeyDetails","browserHistory","data-test-id","ProjectKeyCredentials","showDeprecatedDsn","toggleDeprecatedDsn","showDsn","showDsnPublic","showSecurityEndpoint","showMinidump","showUnreal","to","onClick","StyledField","secret","security","minidump","unreal","Field"],"mappings":"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","file":"ProjectKeyDetails.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Feature from 'app/components/acl/feature';\nimport FeatureDisabled from 'app/components/acl/featureDisabled';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport {IconFlag} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport InputControl from 'app/views/settings/components/forms/controls/input';\nimport RangeSlider from 'app/views/settings/components/forms/controls/rangeSlider';\nimport Form from 'app/views/settings/components/forms/form';\nimport FormField from 'app/views/settings/components/forms/formField';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\n\nconst RATE_LIMIT_FORMAT_MAP = new Map([\n  [0, 'None'],\n  [60, '1 minute'],\n  [300, '5 minutes'],\n  [900, '15 minutes'],\n  [3600, '1 hour'],\n  [7200, '2 hours'],\n  [14400, '4 hours'],\n  [21600, '6 hours'],\n  [43200, '12 hours'],\n  [86400, '24 hours'],\n]);\n\ntype RateLimitValue = {\n  window: number;\n  count: number;\n};\n\n// This value isn't actually any, but the various angles on the types don't line up.\nconst formatRateLimitWindow = (val: any) => RATE_LIMIT_FORMAT_MAP.get(val);\n\ntype Props = {\n  data: ProjectKey;\n  disabled: boolean;\n} & Pick<\n  RouteComponentProps<\n    {\n      keyId: string;\n      orgId: string;\n      projectId: string;\n    },\n    {}\n  >,\n  'params'\n>;\n\nclass KeyRateLimitsForm extends React.Component<Props> {\n  handleChangeWindow = (\n    onChange,\n    onBlur,\n    currentValueObj: RateLimitValue,\n    value: number,\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const valueObj = {\n      ...currentValueObj,\n      window: value,\n    };\n    onChange(valueObj, e);\n    onBlur(valueObj, e);\n  };\n\n  handleChangeCount = (\n    cb,\n    value: RateLimitValue,\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const valueObj = {\n      ...value,\n      count: e.target.value,\n    };\n\n    cb(valueObj, e);\n  };\n\n  render() {\n    const {data, disabled} = this.props;\n    const {keyId, orgId, projectId} = this.props.params;\n    const apiEndpoint = `/projects/${orgId}/${projectId}/keys/${keyId}/`;\n\n    const disabledAlert = ({features}) => (\n      <FeatureDisabled\n        alert={PanelAlert}\n        features={features}\n        featureName={t('Key Rate Limits')}\n      />\n    );\n\n    return (\n      <Form saveOnBlur apiEndpoint={apiEndpoint} apiMethod=\"PUT\" initialData={data}>\n        <Feature\n          features={['projects:rate-limits']}\n          hookName=\"feature-disabled:rate-limits\"\n          renderDisabled={({children, ...props}) =>\n            typeof children === 'function' &&\n            children({...props, renderDisabled: disabledAlert})\n          }\n        >\n          {({hasFeature, features, organization, project, renderDisabled}) => (\n            <Panel>\n              <PanelHeader>{t('Rate Limits')}</PanelHeader>\n\n              <PanelBody>\n                <PanelAlert type=\"info\" icon={<IconFlag size=\"md\" />}>\n                  {t(\n                    `Rate limits provide a flexible way to manage your error\n                      volume. If you have a noisy project or environment you\n                      can configure a rate limit for this key to reduce the\n                      number of errors processed. To manage your transaction\n                      volume, we recommend adjusting your sample rate in your\n                      SDK configuration.`\n                  )}\n                </PanelAlert>\n                {!hasFeature &&\n                  typeof renderDisabled === 'function' &&\n                  renderDisabled({\n                    organization,\n                    project,\n                    features,\n                    hasFeature,\n                    children: null,\n                  })}\n                <FormField\n                  className=\"rate-limit-group\"\n                  name=\"rateLimit\"\n                  label={t('Rate Limit')}\n                  disabled={disabled || !hasFeature}\n                  validate={({form}) => {\n                    //TODO(TS): is validate actually doing anything because it's an unexpected prop\n                    const isValid =\n                      form &&\n                      form.rateLimit &&\n                      typeof form.rateLimit.count !== 'undefined' &&\n                      typeof form.rateLimit.window !== 'undefined';\n\n                    if (isValid) {\n                      return [];\n                    }\n\n                    return [['rateLimit', t('Fill in both fields first')]];\n                  }}\n                  formatMessageValue={(value: RateLimitValue) => {\n                    return t(\n                      '%s errors in %s',\n                      value.count,\n                      formatRateLimitWindow(value.window)\n                    );\n                  }}\n                  help={t(\n                    'Apply a rate limit to this credential to cap the amount of events accepted during a time window.'\n                  )}\n                  inline={false}\n                >\n                  {({onChange, onBlur, value}) => (\n                    <RateLimitRow>\n                      <InputControl\n                        type=\"number\"\n                        name=\"rateLimit.count\"\n                        min={0}\n                        value={value && value.count}\n                        placeholder={t('Count')}\n                        disabled={disabled || !hasFeature}\n                        onChange={this.handleChangeCount.bind(this, onChange, value)}\n                        onBlur={this.handleChangeCount.bind(this, onBlur, value)}\n                      />\n                      <EventsIn>{t('event(s) in')}</EventsIn>\n                      <RangeSlider\n                        name=\"rateLimit.window\"\n                        allowedValues={Array.from(RATE_LIMIT_FORMAT_MAP.keys())}\n                        value={value && value.window}\n                        placeholder={t('Window')}\n                        formatLabel={formatRateLimitWindow}\n                        disabled={disabled || !hasFeature}\n                        onChange={this.handleChangeWindow.bind(\n                          this,\n                          onChange,\n                          onBlur,\n                          value\n                        )}\n                      />\n                    </RateLimitRow>\n                  )}\n                </FormField>\n              </PanelBody>\n            </Panel>\n          )}\n        </Feature>\n      </Form>\n    );\n  }\n}\n\nexport default KeyRateLimitsForm;\n\nconst RateLimitRow = styled('div')`\n  display: grid;\n  grid-template-columns: 2fr 1fr 2fr;\n  align-items: center;\n  grid-gap: ${space(1)};\n`;\n\nconst EventsIn = styled('small')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  text-align: center;\n  white-space: nowrap;\n`;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Access from 'app/components/acl/access';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport DateTime from 'app/components/dateTime';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport {IconFlag} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport BooleanField from 'app/views/settings/components/forms/booleanField';\nimport Field from 'app/views/settings/components/forms/field';\nimport Form from 'app/views/settings/components/forms/form';\nimport SelectField from 'app/views/settings/components/forms/selectField';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\nimport TextField from 'app/views/settings/components/forms/textField';\nimport KeyRateLimitsForm from 'app/views/settings/project/projectKeys/details/keyRateLimitsForm';\nimport ProjectKeyCredentials from 'app/views/settings/project/projectKeys/projectKeyCredentials';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\n\ntype Props = {\n  api: Client;\n  data: ProjectKey;\n  onRemove: () => void;\n} & Pick<\n  RouteComponentProps<\n    {\n      keyId: string;\n      orgId: string;\n      projectId: string;\n    },\n    {}\n  >,\n  'params'\n>;\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n};\n\nclass KeySettings extends React.Component<Props, State> {\n  state = {\n    loading: false,\n    error: false,\n  };\n\n  handleRemove = async () => {\n    if (this.state.loading) {\n      return;\n    }\n\n    addLoadingMessage(t('Revoking key\\u2026'));\n    const {api, onRemove, params} = this.props;\n    const {keyId, orgId, projectId} = params;\n\n    try {\n      await api.requestPromise(`/projects/${orgId}/${projectId}/keys/${keyId}/`, {\n        method: 'DELETE',\n      });\n\n      onRemove();\n      addSuccessMessage(t('Revoked key'));\n    } catch (_err) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n      addErrorMessage(t('Unable to revoke key'));\n    }\n  };\n\n  render() {\n    const {keyId, orgId, projectId} = this.props.params;\n    const {data} = this.props;\n    const apiEndpoint = `/projects/${orgId}/${projectId}/keys/${keyId}/`;\n    const loaderLink = getDynamicText({\n      value: data.dsn.cdn,\n      fixed: '__JS_SDK_LOADER_URL__',\n    });\n\n    return (\n      <Access access={['project:write']}>\n        {({hasAccess}) => (\n          <React.Fragment>\n            <Form\n              saveOnBlur\n              allowUndo\n              apiEndpoint={apiEndpoint}\n              apiMethod=\"PUT\"\n              initialData={data}\n            >\n              <Panel>\n                <PanelHeader>{t('Details')}</PanelHeader>\n\n                <PanelBody>\n                  <TextField\n                    name=\"name\"\n                    label={t('Name')}\n                    disabled={!hasAccess}\n                    required={false}\n                    maxLength={64}\n                  />\n                  <BooleanField\n                    name=\"isActive\"\n                    label={t('Enabled')}\n                    required={false}\n                    disabled={!hasAccess}\n                    help=\"Accept events from this key? This may be used to temporarily suspend a key.\"\n                  />\n                  <Field label={t('Created')}>\n                    <div className=\"controls\">\n                      <DateTime date={data.dateCreated} />\n                    </div>\n                  </Field>\n                </PanelBody>\n              </Panel>\n            </Form>\n\n            <KeyRateLimitsForm\n              params={this.props.params}\n              data={data}\n              disabled={!hasAccess}\n            />\n\n            <Form saveOnBlur apiEndpoint={apiEndpoint} apiMethod=\"PUT\" initialData={data}>\n              <Panel>\n                <PanelHeader>{t('JavaScript Loader')}</PanelHeader>\n                <PanelBody>\n                  <Field\n                    help={tct(\n                      'Copy this script into your website to setup your JavaScript SDK without any additional configuration. [link]',\n                      {\n                        link: (\n                          <ExternalLink href=\"https://docs.sentry.io/platforms/javascript/install/lazy-load-sentry/\">\n                            What does the script provide?\n                          </ExternalLink>\n                        ),\n                      }\n                    )}\n                    inline={false}\n                    flexibleControlStateSize\n                  >\n                    <TextCopyInput>\n                      {`<script src='${loaderLink}' crossorigin=\"anonymous\"></script>`}\n                    </TextCopyInput>\n                  </Field>\n                  <SelectField\n                    name=\"browserSdkVersion\"\n                    choices={data.browserSdk ? data.browserSdk.choices : []}\n                    placeholder={t('4.x')}\n                    allowClear={false}\n                    enabled={!hasAccess}\n                    help={t(\n                      'Select the version of the SDK that should be loaded. Note that it can take a few minutes until this change is live.'\n                    )}\n                  />\n                </PanelBody>\n              </Panel>\n            </Form>\n\n            <Panel>\n              <PanelHeader>{t('Credentials')}</PanelHeader>\n              <PanelBody>\n                <PanelAlert type=\"info\" icon={<IconFlag size=\"md\" />}>\n                  {t(\n                    'Your credentials are coupled to a public and secret key. Different clients will require different credentials, so make sure you check the documentation before plugging things in.'\n                  )}\n                </PanelAlert>\n\n                <ProjectKeyCredentials\n                  projectId={`${data.projectId}`}\n                  data={data}\n                  showPublicKey\n                  showSecretKey\n                  showProjectId\n                />\n              </PanelBody>\n            </Panel>\n\n            <Access access={['project:admin']}>\n              <Panel>\n                <PanelHeader>{t('Revoke Key')}</PanelHeader>\n                <PanelBody>\n                  <Field\n                    label={t('Revoke Key')}\n                    help={t(\n                      'Revoking this key will immediately remove and suspend the credentials. This action is irreversible.'\n                    )}\n                  >\n                    <div>\n                      <Confirm\n                        priority=\"danger\"\n                        message={t(\n                          'Are you sure you want to revoke this key? This will immediately remove and suspend the credentials.'\n                        )}\n                        onConfirm={this.handleRemove}\n                        confirmText={t('Revoke Key')}\n                      >\n                        <Button priority=\"danger\">{t('Revoke Key')}</Button>\n                      </Confirm>\n                    </div>\n                  </Field>\n                </PanelBody>\n              </Panel>\n            </Access>\n          </React.Fragment>\n        )}\n      </Access>\n    );\n  }\n}\n\nexport default KeySettings;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {Client} from 'app/api';\nimport MiniBarChart from 'app/components/charts/miniBarChart';\nimport LoadingError from 'app/components/loadingError';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport Placeholder from 'app/components/placeholder';\nimport {t} from 'app/locale';\nimport {Series} from 'app/types/echarts';\nimport theme from 'app/utils/theme';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\ntype Props = {\n  api: Client;\n} & Pick<\n  RouteComponentProps<\n    {\n      keyId: string;\n      orgId: string;\n      projectId: string;\n    },\n    {}\n  >,\n  'params'\n>;\n\ntype State = {\n  since: number;\n  until: number;\n  loading: boolean;\n  error: boolean;\n  series: Series[];\n  emptyStats: boolean;\n};\n\nconst getInitialState = (): State => {\n  const until = Math.floor(new Date().getTime() / 1000);\n  return {\n    since: until - 3600 * 24 * 30,\n    until,\n    loading: true,\n    error: false,\n    series: [],\n    emptyStats: false,\n  };\n};\n\nclass KeyStats extends React.Component<Props, State> {\n  state = getInitialState();\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    const {keyId, orgId, projectId} = this.props.params;\n    this.props.api.request(`/projects/${orgId}/${projectId}/keys/${keyId}/stats/`, {\n      query: {\n        since: this.state.since,\n        until: this.state.until,\n        resolution: '1d',\n      },\n      success: data => {\n        let emptyStats = true;\n        const dropped: Series['data'] = [];\n        const accepted: Series['data'] = [];\n        data.forEach(p => {\n          if (p.total) {\n            emptyStats = false;\n          }\n          dropped.push({name: p.ts * 1000, value: p.dropped});\n          accepted.push({name: p.ts * 1000, value: p.accepted});\n        });\n        const series = [\n          {\n            seriesName: t('Accepted'),\n            data: accepted,\n          },\n          {\n            seriesName: t('Rate Limited'),\n            data: dropped,\n          },\n        ];\n        this.setState({\n          series,\n          emptyStats,\n          error: false,\n          loading: false,\n        });\n      },\n      error: () => {\n        this.setState({error: true, loading: false});\n      },\n    });\n  };\n\n  render() {\n    if (this.state.error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Key usage in the last 30 days (by day)')}</PanelHeader>\n        <PanelBody withPadding>\n          {this.state.loading ? (\n            <Placeholder height=\"150px\" />\n          ) : !this.state.emptyStats ? (\n            <MiniBarChart\n              isGroupedByDate\n              series={this.state.series}\n              height={150}\n              colors={[theme.gray200, theme.red300]}\n              stacked\n              labelYAxisExtents\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('Total events captured using these credentials.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default KeyStats;\n","import React from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\n\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\nimport KeySettings from 'app/views/settings/project/projectKeys/details/keySettings';\nimport KeyStats from 'app/views/settings/project/projectKeys/details/keyStats';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\n\ntype Props = RouteComponentProps<\n  {\n    keyId: string;\n    orgId: string;\n    projectId: string;\n  },\n  {}\n>;\n\ntype State = {\n  data: ProjectKey;\n} & AsyncView['state'];\n\nexport default class ProjectKeyDetails extends AsyncView<Props, State> {\n  getTitle() {\n    return t('Key Details');\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {keyId, orgId, projectId} = this.props.params;\n    return [['data', `/projects/${orgId}/${projectId}/keys/${keyId}/`]];\n  }\n\n  handleRemove = () => {\n    const {orgId, projectId} = this.props.params;\n    browserHistory.push(`/${orgId}/${projectId}/settings/keys/`);\n  };\n\n  renderBody() {\n    const {data} = this.state;\n    const {params} = this.props;\n\n    return (\n      <div data-test-id=\"key-details\">\n        <SettingsPageHeader title={t('Key Details')} />\n        <PermissionAlert />\n\n        <KeyStats api={this.api} params={params} />\n\n        <KeySettings\n          api={this.api}\n          params={params}\n          data={data}\n          onRemove={this.handleRemove}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport Link from 'app/components/links/link';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport Field from 'app/views/settings/components/forms/field';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\n\nconst DEFAULT_PROPS = {\n  showDsn: true,\n  showDsnPublic: true,\n  showSecurityEndpoint: true,\n  showMinidump: true,\n  showUnreal: true,\n  showPublicKey: false,\n  showSecretKey: false,\n  showProjectId: false,\n};\n\ntype Props = {\n  projectId: string;\n  data: ProjectKey;\n} & typeof DEFAULT_PROPS;\n\ntype State = {\n  showDeprecatedDsn: boolean;\n};\n\nclass ProjectKeyCredentials extends React.Component<Props, State> {\n  static defaultProps = DEFAULT_PROPS;\n\n  state = {\n    showDeprecatedDsn: false,\n  };\n\n  toggleDeprecatedDsn = () => {\n    this.setState(state => ({\n      showDeprecatedDsn: !state.showDeprecatedDsn,\n    }));\n  };\n\n  render() {\n    const {showDeprecatedDsn} = this.state;\n    const {\n      projectId,\n      data,\n      showDsn,\n      showDsnPublic,\n      showSecurityEndpoint,\n      showMinidump,\n      showUnreal,\n      showPublicKey,\n      showSecretKey,\n      showProjectId,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        {showDsnPublic && (\n          <Field\n            label={t('DSN')}\n            inline={false}\n            flexibleControlStateSize\n            help={tct('The DSN tells the SDK where to send the events to. [link]', {\n              link: showDsn ? (\n                <Link to=\"\" onClick={this.toggleDeprecatedDsn}>\n                  {showDeprecatedDsn\n                    ? t('Hide deprecated DSN')\n                    : t('Show deprecated DSN')}\n                </Link>\n              ) : null,\n            })}\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.public,\n                fixed: '__DSN__',\n              })}\n            </TextCopyInput>\n            {showDeprecatedDsn && (\n              <StyledField\n                label={null}\n                help={t(\n                  'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n                )}\n                inline={false}\n                flexibleControlStateSize\n              >\n                <TextCopyInput>\n                  {getDynamicText({\n                    value: data.dsn.secret,\n                    fixed: '__DSN_DEPRECATED__',\n                  })}\n                </TextCopyInput>\n              </StyledField>\n            )}\n          </Field>\n        )}\n\n        {/* this edge case should imho not happen, but just to be sure */}\n        {!showDsnPublic && showDsn && (\n          <Field\n            label={t('DSN (Deprecated)')}\n            help={t(\n              'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.secret,\n                fixed: '__DSN_DEPRECATED__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showSecurityEndpoint && (\n          <Field\n            label={t('Security Header Endpoint')}\n            help={t(\n              'Use your security header endpoint for features like CSP and Expect-CT reports.'\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.security,\n                fixed: '__SECURITY_HEADER_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showMinidump && (\n          <Field\n            label={t('Minidump Endpoint')}\n            help={tct(\n              'Use this endpoint to upload [link], for example with Electron, Crashpad or Breakpad.',\n              {\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/platforms/native/guides/minidumps/\">\n                    minidump crash reports\n                  </ExternalLink>\n                ),\n              }\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.minidump,\n                fixed: '__MINIDUMP_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showUnreal && (\n          <Field\n            label={t('Unreal Engine 4 Endpoint')}\n            help={t('Use this endpoint to configure your UE4 Crash Reporter.')}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.unreal || '',\n                fixed: '__UNREAL_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showPublicKey && (\n          <Field label={t('Public Key')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.public,\n                fixed: '__PUBLICKEY__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showSecretKey && (\n          <Field label={t('Secret Key')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.secret,\n                fixed: '__SECRETKEY__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showProjectId && (\n          <Field label={t('Project ID')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: projectId,\n                fixed: '__PROJECTID__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst StyledField = styled(Field)`\n  padding: ${space(0.5)} 0 0 0;\n`;\n\nexport default ProjectKeyCredentials;\n"],"sourceRoot":""}