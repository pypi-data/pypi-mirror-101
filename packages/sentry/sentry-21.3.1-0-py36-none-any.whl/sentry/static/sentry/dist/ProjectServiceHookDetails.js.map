{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/forms/apiForm.tsx","webpack:///./app/views/settings/components/forms/controls/multipleCheckbox.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/project/projectServiceHookDetails.tsx","webpack:///./app/views/settings/project/serviceHookSettingsForm.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","ApiForm","api","Client","onSubmit","data","onSuccess","onError","props","addLoadingMessage","t","request","apiEndpoint","method","apiMethod","success","response","clearIndicators","error","clear","otherProps","React","MultipleCheckboxWrapper","Label","CheckboxLabel","MultipleCheckbox","onChange","selectedValue","e","value","target","checked","filter","v","disabled","choices","map","choiceValue","choiceLabel","LabelContainer","key","type","bind","defined","indexOf","p","theme","breakpoints","UnstyledSettingsPageHeader","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","defaultProps","space","gray400","fontSizeLarge","SettingsPageHeader","HookStats","until","Math","floor","Date","getTime","since","params","hookId","orgId","projectId","query","resolution","stats","state","emptyStats","series","seriesName","total","name","ts","withPadding","description","isGroupedByDate","showTimeInTooltip","labelYAxisExtents","height","ProjectServiceHookDetails","onDelete","browserHistory","addErrorMessage","hook","initialData","isActive","status","size","label","flexibleControlStateSize","inline","help","getDynamicText","secret","fixed","priority","onClick","EVENT_CHOICES","ServiceHookSettingsForm","onSubmitSuccess","endpoint","footerStyle","marginTop","paddingRight","submitLabel","required"],"mappings":"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","file":"ProjectServiceHookDetails.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\n\nimport {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport Form from 'app/views/settings/components/forms/form';\n\ntype Props = Form['props'] & {\n  onSubmit?: (data: Record<string, any>) => void;\n  apiMethod: string;\n  apiEndpoint: string;\n};\n\nexport default class ApiForm extends React.Component<Props> {\n  componentWillUnmount() {\n    this.api.clear();\n  }\n\n  api: Client = new Client();\n\n  onSubmit = (\n    data: Record<string, any>,\n    onSuccess: (response: Record<string, any>) => void,\n    onError: (error: any) => void\n  ) => {\n    this.props.onSubmit && this.props.onSubmit(data);\n    addLoadingMessage(t('Saving changes\\u2026'));\n    this.api.request(this.props.apiEndpoint, {\n      method: this.props.apiMethod,\n      data,\n      success: response => {\n        clearIndicators();\n        onSuccess(response);\n      },\n      error: error => {\n        clearIndicators();\n        onError(error);\n      },\n    });\n  };\n\n  render() {\n    const {\n      onSubmit: _onSubmit,\n      apiMethod: _apiMethod,\n      apiEndpoint: _apiEndpoint,\n      ...otherProps\n    } = this.props;\n\n    return <Form onSubmit={this.onSubmit} {...otherProps} />;\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Choices} from 'app/types';\nimport {defined} from 'app/utils';\n\nconst MultipleCheckboxWrapper = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Label = styled('label')`\n  font-weight: normal;\n  white-space: nowrap;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  width: 20%;\n`;\n\nconst CheckboxLabel = styled('span')`\n  margin-left: 3px;\n`;\n\ntype SelectedValue = (string | number)[];\n\ntype Props = {\n  value: (string | number)[];\n  choices: Choices;\n  onChange?: (value: SelectedValue, event: React.ChangeEvent<HTMLInputElement>) => void;\n  disabled?: boolean;\n};\n\nclass MultipleCheckbox extends React.Component<Props> {\n  onChange = (selectedValue: string | number, e: React.ChangeEvent<HTMLInputElement>) => {\n    const {value, onChange} = this.props;\n    let newValue: SelectedValue = [];\n\n    if (typeof onChange !== 'function') {\n      return;\n    }\n\n    if (e.target.checked) {\n      newValue = value ? [...value, selectedValue] : [value];\n    } else {\n      newValue = value.filter(v => v !== selectedValue);\n    }\n\n    onChange(newValue, e);\n  };\n\n  render() {\n    const {disabled, choices, value} = this.props;\n\n    return (\n      <MultipleCheckboxWrapper>\n        {choices.map(([choiceValue, choiceLabel]) => (\n          <LabelContainer key={choiceValue}>\n            <Label>\n              <input\n                type=\"checkbox\"\n                value={choiceValue}\n                onChange={this.onChange.bind(this, choiceValue)}\n                disabled={disabled}\n                checked={defined(value) && value.indexOf(choiceValue) !== -1}\n              />\n              <CheckboxLabel>{choiceLabel}</CheckboxLabel>\n            </Label>\n          </LabelContainer>\n        ))}\n      </MultipleCheckboxWrapper>\n    );\n  }\n}\n\nexport default MultipleCheckbox;\n\nconst LabelContainer = styled('div')`\n  width: 100%;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    width: 50%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    width: 33.333%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints[2]}) {\n    width: 25%;\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport {browserHistory, WithRouterProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Button from 'app/components/button';\nimport MiniBarChart from 'app/components/charts/miniBarChart';\nimport ErrorBoundary from 'app/components/errorBoundary';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport {IconFlag} from 'app/icons';\nimport {t} from 'app/locale';\nimport {ServiceHook} from 'app/types';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport Field from 'app/views/settings/components/forms/field';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport ServiceHookSettingsForm from 'app/views/settings/project/serviceHookSettingsForm';\n\ntype Params = {orgId: string; projectId: string; hookId: string};\n\ntype StatsProps = {\n  params: Params;\n};\n\ntype StatsState = {\n  stats: {ts: number; total: number}[] | null;\n} & AsyncComponent['state'];\n\nclass HookStats extends AsyncComponent<StatsProps, StatsState> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n    const {hookId, orgId, projectId} = this.props.params;\n    return [\n      [\n        'stats',\n        `/projects/${orgId}/${projectId}/hooks/${hookId}/stats/`,\n        {\n          query: {\n            since,\n            until,\n            resolution: '1d',\n          },\n        },\n      ],\n    ];\n  }\n\n  renderBody() {\n    const {stats} = this.state;\n    if (stats === null) {\n      return null;\n    }\n    let emptyStats = true;\n\n    const series = {\n      seriesName: t('Events'),\n      data: stats.map(p => {\n        if (p.total) {\n          emptyStats = false;\n        }\n        return {\n          name: p.ts * 1000,\n          value: p.total,\n        };\n      }),\n    };\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Events in the last 30 days (by day)')}</PanelHeader>\n        <PanelBody withPadding>\n          {!emptyStats ? (\n            <MiniBarChart\n              isGroupedByDate\n              showTimeInTooltip\n              labelYAxisExtents\n              series={[series]}\n              height={150}\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('Total webhooks fired for this configuration.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\ntype Props = WithRouterProps<Params, {}>;\ntype State = {\n  hook: ServiceHook | null;\n} & AsyncView['state'];\n\nexport default class ProjectServiceHookDetails extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId, hookId} = this.props.params;\n    return [['hook', `/projects/${orgId}/${projectId}/hooks/${hookId}/`]];\n  }\n\n  onDelete = () => {\n    const {orgId, projectId, hookId} = this.props.params;\n    addLoadingMessage(t('Saving changes\\u2026'));\n    this.api.request(`/projects/${orgId}/${projectId}/hooks/${hookId}/`, {\n      method: 'DELETE',\n      success: () => {\n        clearIndicators();\n        browserHistory.push(`/settings/${orgId}/projects/${projectId}/hooks/`);\n      },\n      error: () => {\n        addErrorMessage(t('Unable to remove application. Please try again.'));\n      },\n    });\n  };\n\n  renderBody() {\n    const {orgId, projectId, hookId} = this.props.params;\n    const {hook} = this.state;\n    if (!hook) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader title={t('Service Hook Details')} />\n\n        <ErrorBoundary>\n          <HookStats params={this.props.params} />\n        </ErrorBoundary>\n\n        <ServiceHookSettingsForm\n          orgId={orgId}\n          projectId={projectId}\n          hookId={hookId}\n          initialData={{\n            ...hook,\n            isActive: hook.status !== 'disabled',\n          }}\n        />\n        <Panel>\n          <PanelHeader>{t('Event Validation')}</PanelHeader>\n          <PanelBody>\n            <PanelAlert type=\"info\" icon={<IconFlag size=\"md\" />}>\n              Sentry will send the <code>X-ServiceHook-Signature</code> header built using{' '}\n              <code>HMAC(SHA256, [secret], [payload])</code>. You should always verify\n              this signature before trusting the information provided in the webhook.\n            </PanelAlert>\n            <Field\n              label={t('Secret')}\n              flexibleControlStateSize\n              inline={false}\n              help={t('The shared secret used for generating event HMAC signatures.')}\n            >\n              <TextCopyInput>\n                {getDynamicText({\n                  value: hook.secret,\n                  fixed: 'a dynamic secret value',\n                })}\n              </TextCopyInput>\n            </Field>\n          </PanelBody>\n        </Panel>\n        <Panel>\n          <PanelHeader>{t('Delete Hook')}</PanelHeader>\n          <PanelBody>\n            <Field\n              label={t('Delete Hook')}\n              help={t('Removing this hook is immediate and permanent.')}\n            >\n              <div>\n                <Button priority=\"danger\" onClick={this.onDelete}>\n                  {t('Delete Hook')}\n                </Button>\n              </div>\n            </Field>\n          </PanelBody>\n        </Panel>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport {browserHistory} from 'react-router';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport {Choices, ServiceHook} from 'app/types';\nimport ApiForm from 'app/views/settings/components/forms/apiForm';\nimport BooleanField from 'app/views/settings/components/forms/booleanField';\nimport MultipleCheckbox from 'app/views/settings/components/forms/controls/multipleCheckbox';\nimport FormField from 'app/views/settings/components/forms/formField';\nimport TextField from 'app/views/settings/components/forms/textField';\n\nconst EVENT_CHOICES: Choices = ['event.alert', 'event.created'].map(e => [e, e]);\n\ntype Props = {\n  orgId: string;\n  projectId: string;\n  initialData: Partial<ServiceHook> & {isActive: boolean};\n  hookId?: string;\n};\n\nexport default class ServiceHookSettingsForm extends React.Component<Props> {\n  onSubmitSuccess = () => {\n    const {orgId, projectId} = this.props;\n    browserHistory.push(`/settings/${orgId}/projects/${projectId}/hooks/`);\n  };\n\n  render() {\n    const {initialData, orgId, projectId, hookId} = this.props;\n\n    const endpoint = hookId\n      ? `/projects/${orgId}/${projectId}/hooks/${hookId}/`\n      : `/projects/${orgId}/${projectId}/hooks/`;\n\n    return (\n      <Panel>\n        <ApiForm\n          apiMethod={hookId ? 'PUT' : 'POST'}\n          apiEndpoint={endpoint}\n          initialData={initialData}\n          onSubmitSuccess={this.onSubmitSuccess}\n          footerStyle={{\n            marginTop: 0,\n            paddingRight: 20,\n          }}\n          submitLabel={hookId ? t('Save Changes') : t('Create Hook')}\n        >\n          <PanelHeader>{t('Hook Configuration')}</PanelHeader>\n          <PanelBody>\n            <BooleanField name=\"isActive\" label={t('Active')} />\n            <TextField\n              name=\"url\"\n              label={t('URL')}\n              required\n              help={t('The URL which will receive events.')}\n            />\n            <FormField\n              name=\"events\"\n              label={t('Events')}\n              inline={false}\n              help={t('The event types you wish to subscribe to.')}\n            >\n              {({value, onChange}) => (\n                <MultipleCheckbox\n                  onChange={onChange}\n                  value={value}\n                  choices={EVENT_CHOICES}\n                />\n              )}\n            </FormField>\n          </PanelBody>\n        </ApiForm>\n      </Panel>\n    );\n  }\n}\n"],"sourceRoot":""}