Metadata-Version: 2.1
Name: RockyRoad
Version: 0.0.22
Summary: Python wrapper for the RockyRoad API
Home-page: https://github.com/pypa/sampleproject
License: UNKNOWN
Project-URL: Bug Tracker, https://github.com/pypa/sampleproject/issues
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: uplink

# RockyRoad

This package provides a Python wrapper for the RockyRoad API.

RockyRoad is a part of the PyPi repository and can be installed via

    pip install RockyRoad

    export OCP_APIM_SUBSCRIPTION_KEY="INSERT_YOUR_SUBSCRIPTION_KEY"


    Usage Examples - Data Services:

        from rockyroad.rockyroad import build

        service = build(serviceName="data-services", version="v1", base_url='INSERT_URL_FOR_API')

        api_response = service.helloWorld().list()
        print(api_response)

        api_response = service.alerts().requests().list()
        print(api_response)

        api_response = service.alerts().requests().list(creator_email='user@acme.com')
        print(api_response)

        api_response = service.alerts().requests().insert(new_alert_request_json)
        print(api_response)

        api_response = service.alerts().requests().delete(brand=brand, alert_request_id=alert_request_id)
        print(api_response)

        api_response = service.alerts().reports().list()
        print(api_response)

        api_response = service.alerts().reports().list(creator_email='user@acme.com')
        print(api_response)

        api_response = service.machines().utilData().list(brand=brand, time_period='today')
        print(api_response)

        api_response = service.machines().utilData().stats().list()
        print(api_response)

        api_response = service.dealers().list()
        print(api_response)

        api_response = service.customers().list(dealer_name=dealer_name)
        print(api_response)

        api_response = service.accounts().list()
        print(api_response)

        api_response = service.accounts().list(account="c123")
        print(api_response)

        api_response = service.accounts().insert(new_account=new_account)
        print(api_response)

        api_response = service.accounts().update(account=update_account)
        print(api_response)

        api_response = service.accounts().delete(account="d123")
        print(api_response)

        api_response = service.accounts().set_is_dealer(account="d123", is_dealer=True)
        print(api_response)

        api_response = service.accounts().assign_dealer(customer_account="c123", dealer_account="d123")
        print(api_response)

        api_response = service.accounts().unassign_dealer(
            customer_account="c123", dealer_account="d123"
        )
        print(api_response)

        api_response = service.accounts().customers().list()
        print(api_response)

        api_response = service.accounts().customers().list(dealer_account="D123")
        print(api_response)

        api_response = service.accounts().dealers().list()
        print(api_response)

        api_response = service.accounts().dealers().list(customer_account="A123")
        print(api_response)

    Usage Examples - Email Services:

        from rockyroad.rockyroad import build

        service = build(serviceName="email-services", version="v1", base_url='INSERT_URL_FOR_API')

        email_message = {
            "recipient": "someone@acme.com",
            "subject": "Sending Email Message via API",
            "html_message": "This email send via the API!",
            "text_message": "This email send via the API!",
            }

        api_response = service.emails().send(email_message_json)
        print(api_response)



