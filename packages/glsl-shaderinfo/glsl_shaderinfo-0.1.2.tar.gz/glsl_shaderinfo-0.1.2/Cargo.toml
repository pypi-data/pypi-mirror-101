[package]
name = "glsl-shaderinfo"
version = "0.1.2"
authors = ["Anentropic <ego@anentropic.com>"]
edition = "2018"
description = "Parses GLSL shader files and returns info about declared vars, inputs outputs, uniforms etc."
readme = "README.md"
homepage = "https://github.com/anentropic/python-glsl-shaderinfo"
license = "MIT"

[package.metadata.maturin]
# https://packaging.python.org/specifications/core-metadata/
requires-python = ">=3.6"

[lib]
name = "glsl_shaderinfo"
# "cdylib" is necessary to produce a shared library for Python to import from.
#
# Downstream Rust code (including code in `bin/`, `examples/`, and `tests/`) will not be able
# to `use string_sum;` unless the "rlib" or "lib" crate type is also included, e.g.:
# crate-type = ["cdylib", "rlib"]
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "shaderinfo"
path = "src/bin/shaderinfo.rs"

[[bin]]
name = "glsl-ast"
path = "src/bin/ast.rs"

[dependencies]
glsl = "6.0"
argparse = "0.2"

[dependencies.pyo3]
version = "0.13.2"
features = ["extension-module"]
