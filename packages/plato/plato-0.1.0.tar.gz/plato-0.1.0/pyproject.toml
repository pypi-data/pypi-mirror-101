[tool.poetry]
name = "plato"
version = "0.1.0"
description = "A dataclasses-inspired approach to test data."
authors = ["Jan Gosmann <jan@hyper-world.de>"]
maintainers = ["Jan Gosmann <jan@hyper-world.de>"]
license = "MIT"
readme = "README.rst"
repository = "https://github.com/py-plato/plato"
documentation = "https://py-plato.github.io/plato/docs/en/main/"
keywords = ["testdata", "dataclasses"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Testing",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.7"
Faker = "^6.4.1"
typing-extensions = "^3.7.4"

[tool.poetry.dev-dependencies]
pytest = "^6.2.2"
black = "^20.8b1"
mypy = "^0.800"
Sphinx = "^3.5.3"
sphinx-rtd-theme = "^0.5.1"
isort = "^5.8.0"
pytest-cov = "^2.11.1"
pylint = "^2.7.2"
darglint = "^1.7.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88