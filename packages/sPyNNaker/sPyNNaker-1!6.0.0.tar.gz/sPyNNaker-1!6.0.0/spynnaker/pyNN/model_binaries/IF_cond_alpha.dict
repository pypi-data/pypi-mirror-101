Id,Preface,Original
,DO NOT EDIT,THIS FILE WAS AUTOGENERATED BY MAKE
1,[INFO] (simulation.c: 77): ,Starting basic provenance gathering
2,[INFO] (simulation.c: 80): ,running other provenance gathering
3,[INFO] (simulation.c: 143): ,Received exit signal. Program complete.
4,[INFO] (simulation.c: 150): ,Calling pre-exit function
5,[INFO] (simulation.c: 153): ,Exiting
6,[INFO] (simulation.c: 159): ,Setting the runtime of this model to %d starting at %d
7,[INFO] (simulation.c: 161): ,Setting the flag of infinite run for this model to %d
8,[INFO] (simulation.c: 171): ,Calling pre-resume function
9,[INFO] (simulation.c: 175): ,Resuming
10,[INFO] (simulation.c: 188): ,Forced provenance gathering
11,[INFO] (simulation.c: 195): ,Calling pre-exit function
12,[ERROR] (simulation.c: 218): ,received packet with unknown command code %d
13,[ERROR] (simulation.c: 238): ,Cannot allocate SDP callback on port %d as its already been allocated.
14,[ERROR] (simulation.c: 260): ,Cannot handle tag value above %d, please reduce the tag value accordingly.
15,[ERROR] (simulation.c: 268): ,Cannot allocate DMA transfer callback on tag %d as its already been allocated.
16,[ERROR] (simulation.c: 292): ,Unexpected magic number 0x%08x instead of 0x%08x at 0x%08x
17,[ERROR] (simulation.c: 299): ,The SDP callback priority should be set to a number greater than or equal to -1.  It is currently set to %d
18,[DEBUG] (recording.c: 126): ,dropping packet with sequence no: %d
19,[DEBUG] (recording.c: 141): ,channel %d, updating read pointer by %d bytes, from 0x%08x
20,[DEBUG] (recording.c: 147): ,channel %d, read wrap around
21,[DEBUG] (recording.c: 164): ,dropping packet with sequence no: %d
22,[DEBUG] (recording.c: 167): ,Sequence %d acked
23,[DEBUG] (recording.c: 177): ,received packet of type %d
24,[DEBUG] (recording.c: 180): ,recording - parsing a command packet
25,[DEBUG] (recording.c: 183): ,command: HOST_DATA_READ
26,[DEBUG] (recording.c: 188): ,command: HOST_DATA_READ_ACK
27,[DEBUG] (recording.c: 193): ,unhandled command ID %d
28,[DEBUG] (recording.c: 198): ,leaving packet handler
29,[DEBUG] (recording.c: 265): ,t = %u, channel = %u, start = 0x%08x, read = 0x%08x,write = 0x%08x, end = 0x%08x, operation == read = %u, len = %u
30,[DEBUG] (recording.c: 274): ,Packet fits in final space of %u
31,[DEBUG] (recording.c: 282): ,Not enough space in final area (%u bytes)
32,[DEBUG] (recording.c: 286): ,Copying first %d bytes to final space of %u
33,[DEBUG] (recording.c: 295): ,Copying remaining %u bytes
34,[DEBUG] (recording.c: 307): ,Not enough space in middle (%u bytes)
35,[DEBUG] (recording.c: 311): ,Packet fits in middle space of %u
36,[DEBUG] (recording.c: 316): ,reached end
37,[DEBUG] (recording.c: 318): ,Buffer already full
38,[DEBUG] (recording.c: 324): ,channel %u, write wrap around
39,[ERROR] (recording.c: 391): ,Unknown channel state - channel: %d, start pointer: %d, end pointer: %d, read_pointer: %d, write_pointer: %d, last operation==READ: %d
40,[DEBUG] (recording.c: 403): ,Sending request with sequence %d
41,[DEBUG] (recording.c: 419): ,Freeing message
42,[DEBUG] (recording.c: 421): ,Done freeing message
43,[INFO] (recording.c: 439): ,WARNING: recording channel %u out of space
44,[DEBUG] (recording.c: 471): ,Storing channel %d state info starting at 0x%08x
45,[DEBUG] (recording.c: 483): ,Finalising recording channels
46,[INFO] (recording.c: 504): ,\tFinalising channel %u - dropped information whilebuffering - state info stored in SDRAM
47,[INFO] (recording.c: 507): ,\tFinalising channel %u - state info stored in SDRAM
48,[ERROR] (recording.c: 510): ,could not close channel %u.
49,[INFO] (recording.c: 512): ,closed channel %u.
50,[INFO] (recording.c: 563): ,Recording %d regions, using output tag %d, size before trigger %d, time between triggers %d
51,[ERROR] (recording.c: 569): ,Not enough space to allocate recording addresses
52,[ERROR] (recording.c: 574): ,Not enough space to allocate region sizes
53,[ERROR] (recording.c: 597): ,Could not allocate recording region %u of %u bytes
54,[ERROR] (recording.c: 611): ,Not enough space to create recording channels
55,[DEBUG] (recording.c: 614): ,Allocated recording channels to 0x%08x
56,[DEBUG] (recording.c: 643): ,region size %d
57,[DEBUG] (recording.c: 648): ,%d is size of buffer state in words
58,[INFO] (recording.c: 665): ,Recording channel %u configured to use %u byte memory block starting at 0x%08x
59,[INFO] (recording.c: 677): ,Recording channel %u left uninitialised
60,[DEBUG] (recording.c: 688): ,Sending buffering trigger message
61,[INFO] (profiler.c: 31): ,Reading profile setup from 0x%08x
62,[INFO] (profiler.c: 37): ,Initialising profiler with storage for %u samples starting at 0x%08x
63,[INFO] (profiler.c: 51): ,Profiler wrote %u bytes to 0x%08x
64,[DEBUG] (data_specification.c: 48): ,SDRAM data begins at address: %08x
65,[ERROR] (data_specification.c: 66): ,Magic number is incorrect: %08x
66,[ERROR] (data_specification.c: 71): ,Version number is incorrect: %08x
67,[INFO] (data_specification.c: 78): ,magic = %08x, version = %d.%d
8001,[DEBUG] (delay_expander.c: 94): ,Generated %u synapses
8002,[DEBUG] (delay_expander.c: 113): ,Rounded delay %k to %u
8003,[INFO] (delay_expander.c: 164): ,Generating %u delay edges for %u atoms starting at %u
8004,[INFO] (delay_expander.c: 182): ,Starting To Build Delays
8005,[INFO] (delay_expander.c: 191): ,\tReading SDRAM delay params at 0x%08x, expander params at 0x%08x
8006,[INFO] (delay_expander.c: 196): ,!!!   Error reading SDRAM data   !!!
8007,[INFO] (delay_expander.c: 200): ,Finished On Machine Delays!
8008,[ERROR] (connection_generator.c: 151): ,Could not create generator
8009,[ERROR] (connection_generator.c: 163): ,Connection generator with hash %u not found
8010,[ERROR] (param_generator.c: 137): ,Could not create generator
8011,[ERROR] (param_generator.c: 149): ,Param generator with hash %u not found
8012,[DEBUG] (synapse_expander.c: 103): ,Synaptic matrix offset = %u, delayed offset = %u
8013,[DEBUG] (synapse_expander.c: 105): ,Max row synapses = %u, max delayed row synapses = %u
8014,[DEBUG] (synapse_expander.c: 117): ,Generating matrix at 0x%08x, delayed at 0x%08x
8015,[ERROR] (synapse_expander.c: 139): ,\tMatrix generation failed
8016,[INFO] (synapse_expander.c: 161): ,Generating %u edges for %u atoms starting at %u
8017,[INFO] (synapse_expander.c: 187): ,Starting To Build Connectors
8018,[INFO] (synapse_expander.c: 195): ,\tReading SDRAM at 0x%08x, writing to matrix at 0x%08x
8019,[INFO] (synapse_expander.c: 200): ,!!!   Error reading SDRAM data   !!!
8020,[INFO] (synapse_expander.c: 204): ,Finished On Machine Connectors!
8021,[ERROR] (matrix_generator.c: 137): ,Could not create generator
8022,[ERROR] (matrix_generator.c: 149): ,Matrix generator with hash %u not found
8023,[DEBUG] (matrix_generator.c: 184): ,Rounded delay %k to %u
8024,[DEBUG] (matrix_generator.c: 196): ,Rounded weight %k to %u
8025,[DEBUG] (matrix_generator.c: 226): ,Generated %u synapses
8026,[DEBUG] (matrix_generator.c: 255): ,\t\tTotal synapses generated = %u. Done!
8027,[DEBUG] (param_generator_normal_clipped_to_boundary.h: 65): ,normal clipped to boundary mu = %k, sigma = %k, low = %k, high = %k
8028,[DEBUG] (param_generator_normal.h: 61): ,normal mu = %k, sigma = %k
8029,[DEBUG] (param_generator_exponential.h: 58): ,exponential beta = %k
8030,[DEBUG] (param_generator_constant.h: 46): ,Constant value %k
8031,[DEBUG] (param_generator_kernel.h: 69): ,Kernel param generator; kernelWidth, kernelHeight = %u,%u
8032,[ERROR] (param_generator_kernel.h: 118): ,Kernel coordinates off range (%d, %d)
8033,[DEBUG] (param_generator_normal_clipped.h: 65): ,normal clipped mu = %k, sigma = %k, low = %k, high = %k
8034,[DEBUG] (param_generator_uniform.h: 61): ,Uniform low = %k, high = %k
8035,[ERROR] (matrix_generator_stdp.h: 207): ,Delay stage %u has not been initialised
8036,[WARNING] (matrix_generator_stdp.h: 215): ,Row %u only has %u half words of %u free - not writing
8037,[DEBUG] (matrix_generator_common.h: 51): ,Delay of %u is too small
8038,[DEBUG] (matrix_generator_common.h: 58): ,Delay of %u is too big
8039,[DEBUG] (matrix_generator_static.h: 113): ,Max stage = %u
8040,[DEBUG] (matrix_generator_static.h: 129): ,row[0] = 0x%08x
8041,[DEBUG] (matrix_generator_static.h: 140): ,row[%u] = 0x%08x
8042,[DEBUG] (matrix_generator_static.h: 146): ,row[%u] = 0x%08x
8043,[DEBUG] (matrix_generator_static.h: 155): ,Row size at 0x%08x for stage %u
8044,[DEBUG] (matrix_generator_static.h: 163): ,write[%u] = 0x%08x
8045,[ERROR] (matrix_generator_static.h: 180): ,Delay stage %u has not been initialised; raw delay = %u, delay = %u, max stage = %u
8046,[WARNING] (matrix_generator_static.h: 187): ,Row for delay stage %u is full - word not added!
8047,[DEBUG] (matrix_generator_static.h: 197): ,Writing word to 0x%08x
8048,[DEBUG] (connection_generator_all_to_all.h: 53): ,All to all connector, pre_lo = %u, pre_hi = %u, post_lo = %u, post_hi = %u, count_post = %u, allow_self_connections = %u
8049,[DEBUG] (connection_generator_all_to_all.h: 69): ,Generating for %u
8050,[DEBUG] (connection_generator_all_to_all.h: 90): ,Not generating for post %u
8051,[DEBUG] (connection_generator_fixed_pre.h: 66): ,Fixed Total Number Connector, allow self connections = %u, with replacement = %u, n_pre = %u, n pre neurons = %u
8052,[DEBUG] (connection_generator_fixed_pre.h: 102): ,Generating %u from %u possible synapses
8053,[ERROR] (connection_generator_fixed_pre.h: 112): ,Created out of order!
8054,[WARNING] (connection_generator_fixed_pre.h: 122): ,Could not allocate in DTCM, trying SDRAM
8055,[ERROR] (connection_generator_fixed_pre.h: 128): ,Could not allocate array for indices
8056,[DEBUG] (connection_generator_fixed_prob.h: 67): ,Fixed Probability Connector, pre_lo = %u, pre_hi = %u, post_lo = %u, post_hi = %u, allow self connections = %u, probability = %k
8057,[WARNING] (connection_generator_fixed_prob.h: 120): ,Row overflow
8058,[DEBUG] (connection_generator_one_to_one.h: 55): ,One to one connector, pre_lo = %u, pre_hi = %u, post_lo = %u, post_hi = %u, count_post = %u
8059,[DEBUG] (connection_generator_one_to_one.h: 76): ,pre_neuron_index %u count_post %u
8060,[INFO] (connection_generator_one_to_one.h: 99): ,pre_neuron_index %u post_lo %u count_post %u
8061,[DEBUG] (connection_generator_kernel.h: 73): ,Kernel connector, m_kernelWidth, m_kernelHeight = %u %u
8062,[DEBUG] (connection_generator_kernel.h: 89): ,Generating for %u
8063,[DEBUG] (connection_generator_fixed_total.h: 66): ,Fixed Total Number Connector, allow self connections = %u, with replacement = %u, n connections = %u, n potential connections = %u
8064,[WARNING] (connection_generator_fixed_total.h: 165): ,Could not create %u connections
8065,[DEBUG] (connection_generator_fixed_total.h: 170): ,Generating %u of %u synapses
8066,[DEBUG] (connection_generator_fixed_post.h: 61): ,Fixed Number Post Connector, allow self connections = %u, with replacement = %u, n_post = %u, n post neurons = %u
8067,[DEBUG] (connection_generator_fixed_post.h: 94): ,Generating %u from %u possible synapses
8068,[INFO] (connection_generator_fixed_post.h: 173): ,Check: indices[%u] is %u
8069,[INFO] (connection_generator_fixed_post.h: 175): ,pre_neuron_index is %u count_indices is %u
8070,[INFO] (spike_source_poisson.c: 231): ,atom %d
8071,[INFO] (spike_source_poisson.c: 232): ,scaled_start = %u
8072,[INFO] (spike_source_poisson.c: 233): ,scaled end = %u
8073,[INFO] (spike_source_poisson.c: 234): ,scaled next = %u
8074,[INFO] (spike_source_poisson.c: 235): ,is_fast_source = %d
8075,[INFO] (spike_source_poisson.c: 236): ,exp_minus_lamda = %k
8076,[INFO] (spike_source_poisson.c: 237): ,isi_val = %k
8077,[INFO] (spike_source_poisson.c: 238): ,time_to_spike = %k
8078,[INFO] (spike_source_poisson.c: 254): ,read global_parameters: starting
8079,[INFO] (spike_source_poisson.c: 259): ,\tkey = %08x, set rate mask = %08x, timer offset = %u
8080,[INFO] (spike_source_poisson.c: 263): ,\tseed = %u %u %u %u
8081,[INFO] (spike_source_poisson.c: 266): ,\tspike sources = %u, starting at %u
8082,[INFO] (spike_source_poisson.c: 267): ,seconds_per_tick = %k\n
8083,[INFO] (spike_source_poisson.c: 268): ,ticks_per_second = %k\n
8084,[INFO] (spike_source_poisson.c: 270): ,slow_rate_per_tick_cutoff = %k\n
8085,[INFO] (spike_source_poisson.c: 272): ,fast_rate_per_tick_cutoff = %k\n
8086,[INFO] (spike_source_poisson.c: 274): ,read_global_parameters: completed successfully
8087,[ERROR] (spike_source_poisson.c: 303): ,Failed to allocate local sources
8088,[ERROR] (spike_source_poisson.c: 308): ,Failed to allocate SDRAM source links
8089,[INFO] (spike_source_poisson.c: 331): ,read_poisson_parameters: completed successfully
8090,[INFO] (spike_source_poisson.c: 343): ,Recording flags = 0x%08x
8091,[INFO] (spike_source_poisson.c: 357): ,Initialise: started
8092,[INFO] (spike_source_poisson.c: 408): ,Initialise: completed successfully
8093,[ERROR] (spike_source_poisson.c: 424): ,failed to reread the Poisson parameters from SDRAM
8094,[ERROR] (spike_source_poisson.c: 430): ,failed to reread the Poisson rates from SDRAM
8095,[INFO] (spike_source_poisson.c: 443): ,Successfully resumed Poisson spike source at time: %u
8096,[INFO] (spike_source_poisson.c: 455): ,store_parameters: starting
8097,[INFO] (spike_source_poisson.c: 470): ,store_parameters: completed successfully
8098,[DEBUG] (spike_source_poisson.c: 486): ,Sending spike packet %x at %d\n
8099,[ERROR] (spike_source_poisson.c: 497): ,Cannot reallocate spike buffer
8100,[DEBUG] (spike_source_poisson.c: 576): ,Generating %d spikes
8101,[DEBUG] (spike_source_poisson.c: 638): ,Timer tick %u
8102,[ERROR] (spike_source_poisson.c: 647): ,Failed to write poisson parameters to SDRAM
8103,[DEBUG] (spike_source_poisson.c: 682): ,Moving to next rate at time %d
8104,[DEBUG] (spike_source_poisson.c: 710): ,Setting rate of %u (%u) to %kHz (%k per tick)
8105,[ERROR] (spike_source_poisson.c: 746): ,Error in initialisation - exiting!
8106,[DEBUG] (delay_extension.c: 103): ,read_parameters: starting
8107,[DEBUG] (delay_extension.c: 111): ,\t key = 0x%08x, incoming key = 0x%08x, incoming mask = 0x%08x,incoming key mask = 0x%08x
8108,[DEBUG] (delay_extension.c: 129): ,\t parrot neurons = %u, neuron bit field words = %u, num delay stages = %u, num delay slots = %u (pot = %u), num delay slots mask = %08x
8109,[DEBUG] (delay_extension.c: 132): ,\t random back off = %u, time_between_spikes = %u
8110,[DEBUG] (delay_extension.c: 141): ,\t delay stage %u
8111,[DEBUG] (delay_extension.c: 155): ,\t\t delay stage config word %u = %08x
8112,[DEBUG] (delay_extension.c: 168): ,read_parameters: completed successfully
8113,[DEBUG] (delay_extension.c: 173): ,writing other provenance data
8114,[DEBUG] (delay_extension.c: 183): ,finished other provenance data
8115,[INFO] (delay_extension.c: 187): ,initialise: started
8116,[INFO] (delay_extension.c: 215): ,initialise: completed successfully
8117,[DEBUG] (delay_extension.c: 224): ,Received spike %x
8118,[DEBUG] (delay_extension.c: 246): ,Current time slot %u
8119,[DEBUG] (delay_extension.c: 261): ,Incrementing counter %u = %u\n
8120,[DEBUG] (delay_extension.c: 264): ,Invalid neuron ID %u
8121,[DEBUG] (delay_extension.c: 267): ,Invalid spike key 0x%08x
8122,[DEBUG] (delay_extension.c: 283): ,Timer tick %u
8123,[DEBUG] (delay_extension.c: 293): ,Delay extension finished at time %u, %u received spikes, %u processed spikes, %u sent spikes, %u added spikes
8124,[DEBUG] (delay_extension.c: 295): ,Delayed %u times
8125,[DEBUG] (delay_extension.c: 321): ,%u: Checking time slot %u for delay stage %u
8126,[DEBUG] (delay_extension.c: 335): ,Neuron %u sending %u spikes after delaystage %u with key %x
8127,[ERROR] (delay_extension.c: 365): ,Error in initialisation - exiting!
8128,[ERROR] (delay_extension.c: 374): ,Error in initialisation of spike buffer!
8129,[DEBUG] (delay_extension.c: 379): ,Timer period %u
8130,[DEBUG] (out_spikes.c: 50): ,Out spike size is %u words, allowing %u spike sources
8131,[ERROR] (out_spikes.c: 54): ,Out of DTCM when allocating out_spikes
8132,[DEBUG] (out_spikes.c: 91): ,out_spikes:\n
8133,[DEBUG] (out_spikes.c: 94): ,-----------\n
8134,[DEBUG] (out_spikes.c: 96): ,-----------\n
8135,[DEBUG] (out_spikes.c: 102): ,-----------\n
8136,[DEBUG] (out_spikes.c: 106): ,%08x\n
8137,[DEBUG] (out_spikes.c: 108): ,-----------\n
8138,[ERROR] (munich_protocol.h: 537): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8139,[ERROR] (munich_protocol.h: 553): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8140,[ERROR] (munich_protocol.h: 568): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8141,[ERROR] (munich_protocol.h: 584): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8142,[ERROR] (munich_protocol.h: 600): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8143,[ERROR] (munich_protocol.h: 615): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8144,[ERROR] (munich_protocol.h: 630): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8145,[ERROR] (munich_protocol.h: 645): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8146,[ERROR] (munich_protocol.h: 660): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8147,[ERROR] (munich_protocol.h: 675): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8148,[ERROR] (munich_protocol.h: 690): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8149,[ERROR] (munich_protocol.h: 705): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8150,[ERROR] (munich_protocol.h: 720): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8151,[ERROR] (munich_protocol.h: 736): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8152,[ERROR] (munich_protocol.h: 752): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8153,[ERROR] (munich_protocol.h: 799): ,The no of pixels is not supported in this protocol.
8154,[ERROR] (munich_protocol.h: 830): ,Unknown size of timestamp in bytes: %d\n
8155,[WARNING] (munich_protocol.h: 842): ,The current SpyNNaker models do not support the reception of packets with payloads, therefore you will need to add a adaptor model between the device and spynnaker models.
8156,[ERROR] (munich_protocol.h: 848): ,If you are using payloads to store events, you cannot have time stamps at all.
8157,[DEBUG] (spike_processing.c: 230): ,Writing back %u bytes of plastic region to %08x for spike %u
8158,[DEBUG] (spike_processing.c: 242): ,Received spike %x at %d, DMA Busy = %d
8159,[DEBUG] (spike_processing.c: 253): ,Sending user event for new spike
8160,[DEBUG] (spike_processing.c: 257): ,Could not trigger user event\n
8161,[DEBUG] (spike_processing.c: 261): ,Could not add spike
8162,[DEBUG] (spike_processing.c: 269): ,DMA transfer complete at time %u with tag %u
8163,[ERROR] (spike_processing.c: 314): ,Error processing spike 0x%.8x for address 0x%.8x (local=0x%.8x)
8164,[ERROR] (spike_processing.c: 319): ,%u: 0x%.8x
8165,[ERROR] (spike_processing.c: 365): ,Could not initialise DMA buffers
8166,[DEBUG] (spike_processing.c: 369): ,DMA buffer %u allocated at 0x%08x
8167,[DEBUG] (spike_processing.c: 421): ,Sending user event for rewiring
8168,[DEBUG] (spike_processing.c: 425): ,Could not trigger user event\n
8169,[DEBUG] (neuron.c: 146): ,loading parameters
8170,[DEBUG] (neuron.c: 174): ,neuron_reloading_neuron_parameters: starting
8171,[DEBUG] (neuron.c: 188): ,neuron_initialise: starting
8172,[DEBUG] (neuron.c: 194): ,\t back off = %u, time between spikes %u
8173,[DEBUG] (neuron.c: 204): ,\tThis model is not expecting to transmit as it has no key
8174,[DEBUG] (neuron.c: 206): ,\tThis model is expected to transmit with key = %08x
8175,[DEBUG] (neuron.c: 221): ,\t n_neurons = %u, spike buffer size = %u
8176,[ERROR] (neuron.c: 238): ,Could not allocate space for spike_recording_indexes
8177,[ERROR] (neuron.c: 243): ,Could not allocate space for var_recording_rate
8178,[ERROR] (neuron.c: 248): ,Could not allocate space for var_recording_count
8179,[ERROR] (neuron.c: 253): ,Could not allocate space for var_recording_increment
8180,[ERROR] (neuron.c: 258): ,Could not allocate space for var_recording_indexes
8181,[ERROR] (neuron.c: 263): ,Could not allocate space for var_recording_size
8182,[ERROR] (neuron.c: 269): ,Could not allocate space for var_recording_values
8183,[ERROR] (neuron.c: 278): ,Could not allocate space for var_recording_values[%d]
8184,[DEBUG] (neuron.c: 350): ,neuron %u spiked at time %u
8185,[DEBUG] (neuron.c: 374): ,the neuron %d has been determined to not spike
8186,[DEBUG] (synapses.c: 69): ,Synaptic row, at address %08x Num plastic words:%u\n
8187,[DEBUG] (synapses.c: 73): ,----------------------------------------\n
8188,[DEBUG] (synapses.c: 83): ,Fixed region %u fixed synapses (%u plastic control words):\n
8189,[DEBUG] (synapses.c: 91): ,%08x [%3d: (w: %5u (=
8190,[DEBUG] (synapses.c: 99): ,nA) d: %2u, %s, n = %3u)] - {%08x %08x}\n
8191,[DEBUG] (synapses.c: 104): ,----------------------------------------\n
8192,[DEBUG] (synapses.c: 112): ,----------------------------------------\n
8193,[DEBUG] (synapses.c: 134): , 
8194,[DEBUG] (synapses.c: 153): ,Inputs\n
8195,[DEBUG] (synapses.c: 222): ,synapses_initialise: starting
8196,[ERROR] (synapses.c: 230): ,Not enough memory to allocate ring buffer
8197,[DEBUG] (synapses.c: 242): ,Direct matrix malloc size is %d
8198,[ERROR] (synapses.c: 247): ,Not enough memory to allocate direct matrix
8199,[DEBUG] (synapses.c: 251): ,Copying %u bytes of direct synapses to 0x%08x
8200,[DEBUG] (synapses.c: 257): ,synapses_initialise: completed successfully
8201,[ERROR] (synapses.c: 282): ,Could not allocate %u entries for ring buffers
8202,[DEBUG] (c_main.c: 135): ,Recording flags = 0x%08x
8203,[DEBUG] (c_main.c: 140): ,writing other provenance data
8204,[DEBUG] (c_main.c: 155): ,finished other provenance data
8205,[DEBUG] (c_main.c: 164): ,Initialise: started
8206,[DEBUG] (c_main.c: 253): ,Initialise: finished
8207,[ERROR] (c_main.c: 272): ,failed to reload the neuron parameters.
8208,[DEBUG] (c_main.c: 315): ,Timer tick %u \n
8209,[DEBUG] (c_main.c: 323): ,Completed a run
8210,[DEBUG] (c_main.c: 336): ,updating recording regions
8211,[DEBUG] (c_main.c: 345): ,Rewire tries = %d
8212,[DEBUG] (c_main.c: 387): ,setting timer tick callback for %d microseconds
8213,[ERROR] (threshold_type_external_device_control.h: 105): ,Unknown enum value %u
8214,[DEBUG] (threshold_type_external_device_control.h: 127): ,Sending key=0x%08x payload=0x%08x
8215,[DEBUG] (threshold_type_external_device_control.h: 130): ,Sending key=0x%08x
8216,[ERROR] (synapse_dynamics_static_impl.c: 83): ,There should be no plastic synapses!
8217,[INFO] (post_events.h: 57): ,      ##  printing entire post event history  ##
8218,[INFO] (post_events.h: 60): ,post event: %u, time: %u, trace: %u
8219,[ERROR] (post_events.h: 71): ,Unable to allocate global STDP structures - Out of DTCM: Try reducing the number of neurons per core to fix this problem 
8220,[DEBUG] (post_events.h: 169): ,     ##  printing post window  ##
8221,[DEBUG] (post_events.h: 178): ,post spike: %u, time: %u, trace: %u
8222,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 115): ,\tPerforming deferred synapse update at time:%u
8223,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 118): ,\t\tbegin_time:%u, end_time:%u - prev_time:%u (valid %u), num_events:%u
8224,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 131): ,\t\tApplying post-synaptic event at delayed time:%u, pre:%u\n
8225,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 147): ,\t\tApplying pre-synaptic event at time:%u last post time:%u\n
8226,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 195): ,Plastic region %u synapses\n
8227,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 211): ,%08x [%3d: (w: %5u (=
8228,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 218): ,nA) d: %2u, %s, n = %3u)] - {%08x %08x}\n
8229,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 312): ,Adding pre-synaptic event to trace at time:%u
8230,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 378): ,Adding post-synaptic event to trace at time:%u
8231,[ERROR] (maths.h: 50): ,Not enough space to allocate LUT.  Try reducing the timestep, the number of neurons per core, or the tau value
8232,[INFO] (timing_vogels_2011_impl.c: 33): ,timing_initialise: starting
8233,[INFO] (timing_vogels_2011_impl.c: 34): ,\tVogels 2011 timing rule
8234,[INFO] (timing_vogels_2011_impl.c: 43): ,timing_initialise: completed successfully
8235,[DEBUG] (timing_recurrent_pre_stochastic_impl.c: 34): ,timing_initialise: starting
8236,[DEBUG] (timing_recurrent_pre_stochastic_impl.c: 35): ,\tRecurrent pre-calculated stochastic STDP rule
8237,[DEBUG] (timing_recurrent_pre_stochastic_impl.c: 46): ,\tAccumulator depression=%d, Accumulator potentiation=%d
8238,[DEBUG] (timing_recurrent_pre_stochastic_impl.c: 56): ,timing_initialise: completed successfully
8239,[DEBUG] (timing_pfister_triplet_impl.h: 79): ,\tdelta_time=%d, o1=%d, o2=%d\n
8240,[DEBUG] (timing_pfister_triplet_impl.h: 105): ,\tdelta_time=%u, r1=%d, r2=%d\n
8241,[DEBUG] (timing_pfister_triplet_impl.h: 130): ,\t\t\ttime_since_last_post_event=%u, decayed_o1=%d, r2=%d,decayed_o1_r2=%d\n
8242,[DEBUG] (timing_pfister_triplet_impl.h: 156): ,\t\t\ttime_since_last_pre_event=%u, decayed_r1=%d, o2=%d,decayed_r1_o2=%d\n
8243,[DEBUG] (timing_recurrent_common.h: 72): ,\tdelta_time=%u
8244,[DEBUG] (timing_recurrent_common.h: 86): ,\tdelta_time=%u
8245,[DEBUG] (timing_recurrent_common.h: 102): ,\tOpening pre-window
8246,[DEBUG] (timing_recurrent_common.h: 111): ,\tTime_since_last_pre_event=%u
8247,[DEBUG] (timing_recurrent_common.h: 115): ,\t\tClosing pre-window
8248,[DEBUG] (timing_recurrent_common.h: 119): ,\t\tRe-opening pre-window
8249,[DEBUG] (timing_recurrent_common.h: 128): ,\tTime_since_last_post_event=%u
8250,[DEBUG] (timing_recurrent_common.h: 139): ,\t\tDecrementing accumulator=%d
8251,[DEBUG] (timing_recurrent_common.h: 142): ,\t\tApplying depression
8252,[DEBUG] (timing_recurrent_common.h: 154): ,\t\tPost-window closed - Opening pre-window
8253,[DEBUG] (timing_recurrent_common.h: 160): ,\tInvalid state %u
8254,[DEBUG] (timing_recurrent_common.h: 177): ,\tOpening post-window
8255,[DEBUG] (timing_recurrent_common.h: 186): ,\tTime_since_last_post_event=%u
8256,[DEBUG] (timing_recurrent_common.h: 191): ,\t\tClosing post-window
8257,[DEBUG] (timing_recurrent_common.h: 195): ,\t\tRe-opening post-window
8258,[DEBUG] (timing_recurrent_common.h: 205): ,\tTime_since_last_pre_event=%u
8259,[DEBUG] (timing_recurrent_common.h: 209): ,\t\tIgnoring coinciding spikes
8260,[DEBUG] (timing_recurrent_common.h: 222): ,\t\tIncrementing accumulator=%d
8261,[DEBUG] (timing_recurrent_common.h: 225): ,\t\tApplying potentiation
8262,[DEBUG] (timing_recurrent_common.h: 237): ,\t\tPre-window closed - Opening post-window
8263,[DEBUG] (timing_recurrent_common.h: 243): ,\tInvalid state %u
8264,[INFO] (timing_recurrent_dual_fsm_impl.c: 34): ,timing_initialise: starting
8265,[INFO] (timing_recurrent_dual_fsm_impl.c: 35): ,\tRecurrent dual-FSM STDP rule
8266,[INFO] (timing_recurrent_dual_fsm_impl.c: 46): ,\tAccumulator depression=%d, Accumulator potentiation=%d
8267,[INFO] (timing_recurrent_dual_fsm_impl.c: 55): ,timing_initialise: completed successfully
8268,[INFO] (timing_pfister_triplet_impl.c: 33): ,timing_initialise: starting
8269,[INFO] (timing_pfister_triplet_impl.c: 34): ,\tSTDP triplet rule
8270,[INFO] (timing_pfister_triplet_impl.c: 44): ,timing_initialise: completed successfully
8271,[DEBUG] (timing_vogels_2011_impl.h: 71): ,\tdelta_time=%d, new_trace=%d\n
8272,[DEBUG] (timing_vogels_2011_impl.h: 108): ,\t\t\ttime_since_last_post_event=%u, decayed_o1=%d\n
8273,[DEBUG] (timing_vogels_2011_impl.h: 130): ,\t\t\ttime_since_last_pre_event=%u, decayed_r1=%d\n
8274,[DEBUG] (timing_pair_impl.h: 70): ,\tdelta_time=%d, o1=%d\n
8275,[DEBUG] (timing_pair_impl.h: 90): ,\tdelta_time=%u, r1=%d\n
8276,[DEBUG] (timing_pair_impl.h: 112): ,\t\t\ttime_since_last_post_event=%u, decayed_o1=%d\n
8277,[DEBUG] (timing_pair_impl.h: 134): ,\t\t\ttime_since_last_pre_event=%u, decayed_r1=%d\n
8278,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 71): ,\t\tResetting post-window: random=%d, window_length=%u
8279,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 88): ,\t\tResetting pre-window: random=%d, window_length=%u
8280,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 107): ,\t\t\ttime_since_last_post:%u, post_window_length:%u
8281,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 116): ,\t\t\t\tDecrementing accumulator=%d
8282,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 119): ,\t\t\t\tApplying depression
8283,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 143): ,\t\t\ttime_since_last_pre:%u, pre_window_length:%u
8284,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 155): ,\t\t\t\tIncrementing accumulator=%d
8285,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 158): ,\t\t\t\tApplying potentiation
8286,[INFO] (timing_nearest_pair_impl.c: 31): ,timing_initialise: starting
8287,[INFO] (timing_nearest_pair_impl.c: 32): ,\tSTDP nearest-pair rule
8288,[INFO] (timing_nearest_pair_impl.c: 39): ,timing_initialise: completed successfully
8289,[DEBUG] (timing_pair_impl.c: 31): ,timing_initialise: starting
8290,[DEBUG] (timing_pair_impl.c: 32): ,\tSTDP pair rule
8291,[DEBUG] (timing_pair_impl.c: 39): ,timing_initialise: completed successfully
8292,[DEBUG] (timing_nearest_pair_impl.h: 63): ,\tdelta_time=%u\n
8293,[DEBUG] (timing_nearest_pair_impl.h: 76): ,\tdelta_time=%u\n
8294,[DEBUG] (timing_nearest_pair_impl.h: 97): ,\t\t\ttime_since_last_post=%u, decayed_o1=%d\n
8295,[DEBUG] (timing_nearest_pair_impl.h: 122): ,\t\t\ttime_since_last_pret=%u, decayed_r1=%d\n
8296,[DEBUG] (timing_nearest_pair_impl.h: 124): ,\t\t\ttime_since_last_post=%u, decayed_r1=%d\n
8297,[DEBUG] (timing_nearest_pair_impl.h: 127): ,\t\t\tSetting trace to zero as not first pre-post pairing
8298,[DEBUG] (timing_recurrent_pre_stochastic_impl.h: 56): ,\t\tRandom=%d, Exp dist=%u
8299,[DEBUG] (timing_recurrent_pre_stochastic_impl.h: 67): ,\t\tRandom=%d, Exp dist=%u
8300,[DEBUG] (weight_additive_one_term_impl.h: 102): ,\told_weight:%u, a2+:%d, a2-:%d, scaled a2+:%d, scaled a2-:%d, new_weight:%d
8301,[DEBUG] (weight_additive_one_term_impl.c: 34): ,weight_initialise: starting
8302,[DEBUG] (weight_additive_one_term_impl.c: 35): ,\tSTDP additive one-term weight dependence
8303,[ERROR] (weight_additive_one_term_impl.c: 43): ,Could not initialise weight region data
8304,[DEBUG] (weight_additive_one_term_impl.c: 56): ,\tSynapse type %u: Min weight:%d, Max weight:%d, A2+:%d, A2-:%d
8305,[DEBUG] (weight_additive_one_term_impl.c: 58): ,weight_initialise: completed successfully
8306,[DEBUG] (weight_additive_two_term_impl.c: 34): ,weight_initialise: starting
8307,[DEBUG] (weight_additive_two_term_impl.c: 35): ,\tSTDP additive two-term weight dependance
8308,[ERROR] (weight_additive_two_term_impl.c: 43): ,Could not initialise weight region data
8309,[DEBUG] (weight_additive_two_term_impl.c: 61): ,\tSynapse type %u: Min weight:%d, Max weight:%d, A2+:%d, A2-:%d, A3+:%d, A3-:%d
8310,[DEBUG] (weight_additive_two_term_impl.c: 63): ,weight_initialise: completed successfully
8311,[DEBUG] (weight_multiplicative_impl.h: 99): ,\tnew_weight:%d\n
8312,[DEBUG] (weight_additive_two_term_impl.h: 113): ,\told_weight:%u, a2+:%d, a2-:%d, a3+:%d, a3-:%d
8313,[DEBUG] (weight_additive_two_term_impl.h: 117): ,\tscaled a2+:%d, scaled a2-:%d, scaled a3+:%d, scaled a3-:%d, new_weight:%d
8314,[DEBUG] (weight_multiplicative_impl.c: 33): ,weight_initialise: starting
8315,[DEBUG] (weight_multiplicative_impl.c: 34): ,\tSTDP multiplicative weight dependence
8316,[ERROR] (weight_multiplicative_impl.c: 41): ,Could not initialise weight region data
8317,[ERROR] (weight_multiplicative_impl.c: 47): ,Could not initialise weight region data
8318,[DEBUG] (weight_multiplicative_impl.c: 69): ,\tSynapse type %u: Min weight:%d, Max weight:%d, A2+:%d, A2-:%d, Weight multiply right shift:%u
8319,[DEBUG] (weight_multiplicative_impl.c: 72): ,weight_initialise: completed successfully
8320,[INFO] (topographic_map_impl.c: 83): ,SR init.
8321,[INFO] (topographic_map_impl.c: 88): ,Topographic Map Impl, s_max=%u
8322,[ERROR] (topographic_map_impl.c: 94): ,Could not initialise pre population info
8323,[ERROR] (topographic_map_impl.c: 103): ,Could not initialise pre population info %d
8324,[INFO] (topographic_map_impl.c: 120): ,Rewiring period %u, fast=%u, n_states=%u
8325,[ERROR] (topographic_map_impl.c: 124): ,Could not allocate current state queue
8326,[ERROR] (topographic_map_impl.c: 130): ,Could not allocate free state queue
8327,[ERROR] (topographic_map_impl.c: 134): ,Could not allocate states
8328,[ERROR] (topographic_map_impl.c: 139): ,Could not add state %u to free states
8329,[ERROR] (topographic_map_impl.c: 149): ,Could not initialise formation parameters
8330,[ERROR] (topographic_map_impl.c: 159): ,Could not initialise elimination parameters
8331,[ERROR] (topographic_map_impl.c: 210): ,FAIL@key %d
8332,[ERROR] (topographic_map_impl.c: 218): ,FAIL@key %d, index %d (failed at %d)
8333,[ERROR] (topographic_map_impl.c: 227): ,Ran out of states!
8334,[ERROR] (topographic_map_impl.c: 254): ,Could not read a state!
8335,[INFO] (topographic_map_impl.c: 271): ,Post neuron %u not in row
8336,[DEBUG] (topographic_map_impl.c: 280): ,row is full
8337,[ERROR] (formation_distance_dependent_impl.c: 29): ,Out of memory when allocating parameters
8338,[INFO] (formation_distance_dependent_impl.c: 35): ,Formation distance dependent %u bytes, grid=(%u, %u), %u ff probs, %u lat probs
8339,[ERROR] (elimination_random_by_weight_impl.c: 23): ,Out of memory when allocating parameters
8340,[INFO] (elimination_random_by_weight_impl.c: 29): ,Elimination random by weight prob_dep=%u prob_pot=%u thresh=%u
8341,[INFO] (last_neuron_selection_impl.c: 27): ,Last neuron selection, buffer size = %u
8342,[ERROR] (last_neuron_selection_impl.c: 32): ,Out of memory when creating last spikes buffer
8343,[ERROR] (neuron_impl_standard.h: 78): ,Unable to allocate global neuron parameters- Out of DTCM
8344,[ERROR] (neuron_impl_standard.h: 87): ,Unable to allocate neuron array - Out of DTCM
8345,[ERROR] (neuron_impl_standard.h: 96): ,Unable to allocate input type array - Out of DTCM
8346,[ERROR] (neuron_impl_standard.h: 107): ,Unable to allocate additional input array - Out of DTCM
8347,[ERROR] (neuron_impl_standard.h: 117): ,Unable to allocate threshold type array - Out of DTCM
8348,[ERROR] (neuron_impl_standard.h: 128): ,Unable to allocate synapse parameters array - Out of DTCM
8349,[DEBUG] (neuron_impl_standard.h: 153): ,reading parameters, next is %u, n_neurons is %u 
8350,[INFO] (neuron_impl_standard.h: 157): ,Looping over %u steps each timestep
8351,[DEBUG] (neuron_impl_standard.h: 161): ,writing neuron global parameters
8352,[DEBUG] (neuron_impl_standard.h: 168): ,reading neuron local parameters
8353,[DEBUG] (neuron_impl_standard.h: 175): ,reading input type parameters
8354,[DEBUG] (neuron_impl_standard.h: 182): ,reading threshold type parameters
8355,[DEBUG] (neuron_impl_standard.h: 189): ,reading synapse parameters
8356,[DEBUG] (neuron_impl_standard.h: 196): ,reading additional input type parameters
8357,[DEBUG] (neuron_impl_standard.h: 205): ,-------------------------------------\n
8358,[DEBUG] (neuron_impl_standard.h: 209): ,-------------------------------------\n
8359,[DEBUG] (neuron_impl_standard.h: 312): ,writing parameters
8360,[DEBUG] (neuron_impl_standard.h: 323): ,writing neuron global parameters
8361,[DEBUG] (neuron_impl_standard.h: 330): ,writing neuron local parameters
8362,[DEBUG] (neuron_impl_standard.h: 337): ,writing input type parameters
8363,[DEBUG] (neuron_impl_standard.h: 344): ,writing threshold type parameters
8364,[DEBUG] (neuron_impl_standard.h: 351): ,writing synapse parameters
8365,[DEBUG] (neuron_impl_standard.h: 358): ,writing additional input type parameters
8366,[DEBUG] (neuron_impl_standard.h: 375): ,-------------------------------------\n
8367,[DEBUG] (neuron_impl_standard.h: 382): ,%3u: %12.6k (= 
8368,[DEBUG] (neuron_impl_standard.h: 384): ,)\n
8369,[DEBUG] (neuron_impl_standard.h: 387): ,-------------------------------------\n
8370,[DEBUG] (neuron_impl_standard.h: 392): ,-------------------------------------\n
8371,[DEBUG] (neuron_impl_standard.h: 396): ,-------------------------------------\n
8372,[DEBUG] (synapse_types_alpha_impl.h: 149): ,did not recognise synapse type %i
8373,[DEBUG] (synapse_types_alpha_impl.h: 162): ,-------------------------------------\n
8374,[DEBUG] (synapse_types_alpha_impl.h: 163): ,exc_response  = %11.4k\n
8375,[DEBUG] (synapse_types_alpha_impl.h: 164): ,inh_response  = %11.4k\n
8376,[DEBUG] (synapse_types_delta_impl.h: 146): ,did not recognise synapse type %i
8377,[DEBUG] (synapse_types_semd_impl.h: 172): ,did not recognise synapse type %i
8378,[INFO] (synapse_types_semd_impl.h: 194): ,exc_decay  = %11.4k\n
8379,[INFO] (synapse_types_semd_impl.h: 195): ,exc_init   = %11.4k\n
8380,[INFO] (synapse_types_semd_impl.h: 196): ,exc2_decay = %11.4k\n
8381,[INFO] (synapse_types_semd_impl.h: 197): ,exc2_init  = %11.4k\n
8382,[INFO] (synapse_types_semd_impl.h: 198): ,inh_decay  = %11.4k\n
8383,[INFO] (synapse_types_semd_impl.h: 199): ,inh_init   = %11.4k\n
8384,[INFO] (synapse_types_semd_impl.h: 201): ,gsyn_excitatory_initial_value = %11.4k\n
8385,[INFO] (synapse_types_semd_impl.h: 203): ,gsyn_excitatory2_initial_value = %11.4k\n
8386,[INFO] (synapse_types_semd_impl.h: 205): ,gsyn_inhibitory_initial_value = %11.4k\n
8387,[INFO] (synapse_types_semd_impl.h: 206): ,multiplicator = %11.4k\n
8388,[INFO] (synapse_types_semd_impl.h: 207): ,exc2_old      = %11.4k\n
8389,[DEBUG] (synapse_types_dual_excitatory_exponential_impl.h: 160): ,did not recognise synapse type %i
8390,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 182): ,exc_decay  = %11.4k\n
8391,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 183): ,exc_init   = %11.4k\n
8392,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 184): ,exc2_decay = %11.4k\n
8393,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 185): ,exc2_init  = %11.4k\n
8394,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 186): ,inh_decay  = %11.4k\n
8395,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 187): ,inh_init   = %11.4k\n
8396,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 189): ,gsyn_excitatory_initial_value = %11.4k\n
8397,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 191): ,gsyn_excitatory2_initial_value = %11.4k\n
8398,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 193): ,gsyn_inhibitory_initial_value = %11.4k\n
8399,[DEBUG] (synapse_types_exponential_impl.h: 160): ,did not recognise synapse type %i
8400,[DEBUG] (synapse_types_exponential_impl.h: 182): ,exc_decay = %R\n
8401,[DEBUG] (synapse_types_exponential_impl.h: 183): ,exc_init  = %R\n
8402,[DEBUG] (synapse_types_exponential_impl.h: 184): ,inh_decay = %R\n
8403,[DEBUG] (synapse_types_exponential_impl.h: 185): ,inh_init  = %R\n
8404,[DEBUG] (synapse_types_exponential_impl.h: 187): ,gsyn_excitatory_initial_value = %11.4k\n
8405,[DEBUG] (synapse_types_exponential_impl.h: 189): ,gsyn_inhibitory_initial_value = %11.4k\n
8406,[DEBUG] (neuron_model_izh_impl.c: 39): , sv1 %9.4k  V %9.4k --- sv2 %9.4k  U %9.4k\n
8407,[DEBUG] (neuron_model_izh_impl.c: 127): ,V = %11.4k 
8408,[DEBUG] (neuron_model_izh_impl.c: 128): ,U = %11.4k 
8409,[DEBUG] (neuron_model_izh_impl.c: 132): ,A = %11.4k 
8410,[DEBUG] (neuron_model_izh_impl.c: 133): ,B = %11.4k 
8411,[DEBUG] (neuron_model_izh_impl.c: 134): ,C = %11.4k 
8412,[DEBUG] (neuron_model_izh_impl.c: 135): ,D = %11.4k 
8413,[DEBUG] (neuron_model_izh_impl.c: 137): ,I = %11.4k \n
8414,[DEBUG] (neuron_model_lif_impl.c: 48): ,Exc 1: %12.6k, Exc 2: %12.6k
8415,[DEBUG] (neuron_model_lif_impl.c: 49): ,Inh 1: %12.6k, Inh 2: %12.6k
8416,[DEBUG] (neuron_model_lif_impl.c: 88): ,V membrane    = %11.4k mv
8417,[DEBUG] (neuron_model_lif_impl.c: 92): ,V reset       = %11.4k mv
8418,[DEBUG] (neuron_model_lif_impl.c: 93): ,V rest        = %11.4k mv
8419,[DEBUG] (neuron_model_lif_impl.c: 95): ,I offset      = %11.4k nA
8420,[DEBUG] (neuron_model_lif_impl.c: 96): ,R membrane    = %11.4k Mohm
8421,[DEBUG] (neuron_model_lif_impl.c: 98): ,exp(-ms/(RC)) = %11.4k [.]
8422,[DEBUG] (neuron_model_lif_impl.c: 100): ,T refract     = %u timesteps
8423,[INFO] (population_table_binary_search_impl.c: 70): ,master_population\n
8424,[INFO] (population_table_binary_search_impl.c: 71): ,------------------------------------------\n
8425,[INFO] (population_table_binary_search_impl.c: 83): ,index (%d, %d), key: 0x%.8x, mask: 0x%.8x, offset: 0x%.8x, address: 0x%.8x, row_length: %u\n
8426,[INFO] (population_table_binary_search_impl.c: 90): ,index (%d, %d), key: 0x%.8x, mask: 0x%.8x, offset: 0x%.8x, address: 0x%.8x, single
8427,[INFO] (population_table_binary_search_impl.c: 94): ,------------------------------------------\n
8428,[DEBUG] (population_table_binary_search_impl.c: 100): ,population_table_initialise: starting
8429,[DEBUG] (population_table_binary_search_impl.c: 103): ,master pop table length is %d\n
8430,[DEBUG] (population_table_binary_search_impl.c: 105): ,master pop table entry size is %d\n
8431,[DEBUG] (population_table_binary_search_impl.c: 109): ,pop table size is %d\n
8432,[ERROR] (population_table_binary_search_impl.c: 115): ,Could not allocate master population table
8433,[ERROR] (population_table_binary_search_impl.c: 128): ,Could not allocate master population address list
8434,[DEBUG] (population_table_binary_search_impl.c: 134): ,pop table size: %u (%u bytes)
8435,[DEBUG] (population_table_binary_search_impl.c: 136): ,address list size: %u (%u bytes)
8436,[INFO] (population_table_binary_search_impl.c: 146): ,the stored synaptic matrix base address is located at: 0x%08x
8437,[INFO] (population_table_binary_search_impl.c: 148): ,the direct synaptic matrix base address is located at: 0x%08x
8438,[DEBUG] (population_table_binary_search_impl.c: 169): ,spike %u (= %x): population found in master populationtable but count is 0
8439,[DEBUG] (population_table_binary_search_impl.c: 178): ,spike = %08x, entry_index = %u, start = %u, count = %u
8440,[DEBUG] (population_table_binary_search_impl.c: 194): ,spike %u (= %x): population not found in master population table
8441,[DEBUG] (population_table_binary_search_impl.c: 232): ,neuron_id = %u, block_address = 0x%.8x,row_length = %u, row_address = 0x%.8x, n_bytes = %u
8442,[DEBUG] (robot_motor_control.c: 77): ,%s = %d, %s = %d, delta = %d, threshold = %u
8443,[DEBUG] (robot_motor_control.c: 80): ,Moving %s
8444,[DEBUG] (robot_motor_control.c: 85): ,Moving %s
8445,[DEBUG] (robot_motor_control.c: 91): ,Motion is indeterminate in %s-%s direction
8446,[DEBUG] (robot_motor_control.c: 105): ,Resending %s = %d
8447,[DEBUG] (robot_motor_control.c: 108): ,Resending %s = %d
8448,[DEBUG] (robot_motor_control.c: 112): ,Resending No Motion in the %s-%s direction
8449,[DEBUG] (robot_motor_control.c: 123): ,Timer tick %d
8450,[INFO] (robot_motor_control.c: 127): ,Simulation complete.\n
8451,[DEBUG] (robot_motor_control.c: 140): ,Received spike from unknown neuron %d
8452,[INFO] (robot_motor_control.c: 166): ,Reading parameters from 0x%.8x
8453,[INFO] (robot_motor_control.c: 187): ,Key = %d, speed = %d, sample_time = %d, update_time = %d, delay_time = %d, delta_threshold = %d, continue_if_not_different = %d
8454,[DEBUG] (robot_motor_control.c: 193): ,Received spike %x at time %d\n
8455,[INFO] (robot_motor_control.c: 200): ,initialise: started
8456,[INFO] (robot_motor_control.c: 222): ,initialise: completed successfully
8457,[ERROR] (robot_motor_control.c: 232): ,Error in initialisation - exiting!
