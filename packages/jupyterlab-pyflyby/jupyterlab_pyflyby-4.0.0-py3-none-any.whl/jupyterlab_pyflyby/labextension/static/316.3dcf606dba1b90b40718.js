(self.webpackChunk_deshaw_jupyterlab_pyflyby=self.webpackChunk_deshaw_jupyterlab_pyflyby||[]).push([[316],{316:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>B});var s=n(850),o=n(510),l=n(441),r=n(389),i=n(305),a=n(271),c=n.n(a);const d="pyflyby-cell",y="# THIS CELL WAS AUTO-GENERATED BY PYFLYBY\n",h="# END AUTO-GENERATED BLOCK\n",u="pyflyby.missing_imports",m="pyflyby.format_imports",g="pyflyby.init_comms",p=t=>"string"==typeof t?t.split("\n"):t,f=t=>!(t.startsWith("#")||t.startsWith('"""')||""===t.trim()||t.match(/^\s.*$/))||t.startsWith("%"),_=t=>""===t.trim()||!t.match(/^\s.*$/);var b=n(275),w=n(290);async function x(t="",e={}){const n=w.ServerConnection.makeSettings(),s=b.URLExt.join(n.baseUrl,"pyflyby",t);let o;try{o=await w.ServerConnection.makeRequest(s,e,n)}catch(t){throw new w.ServerConnection.NetworkError(t)}let l=await o.text();if(l.length>0)try{l=JSON.parse(l)}catch(t){console.log("Not a JSON response body.",o)}if(!o.ok)throw new w.ServerConnection.ResponseError(o,l.message||l);return l}const C=(0,i.debug)("PYFLYBY:");let Y=!1;class E extends o.Widget{constructor(t,e,n){super(),this._context=null,this._sessionContext=null,this._settings=null,this._comms={},n.load("@deshaw/jupyterlab-pyflyby:plugin").then((t=>{this._settings=t,(t.get("enabled").user||t.get("enabled").composite)&&(this._sessionContext.kernelChanged.connect(this._handleKernelChange,this),this._sessionContext.statusChanged.connect(this._handleKernelStatusChange,this))}),(t=>{C("PYFLYBY extension has been disabled")})),this._context=t,this._sessionContext=t.sessionContext}async _launchDialog(t){const e=new l.Dialog({title:"PYFLYBY",body:"PYFLYBY will be adding imports to the first code cell in the notebook.\n            To disable the PYFLYBY extension or to disable this notification in future, go\n            to Settings -> Advanced Settings Editor and choose PYFLYBY preferences tab",buttons:[l.Dialog.okButton()]});try{return await e.launch(),t}catch(t){console.error(t)}}_findImportCoordinates(){const{model:t}=this._context;let e=s.ArrayExt.findFirstIndex((0,s.toArray)(t.cells),((t,e)=>{const n=t.metadata.get("tags");return!(!n||-1===n.indexOf(d))}));-1===e&&(e=(t=>{const e=(0,s.toArray)(t);for(let t=0;t<e.length;t++){const n=e[t];if("code"===n.type){const e=p(n.toJSON().source);if(e.length>0&&!e[0].startsWith("%")&&!e[0].startsWith('"""'))for(let n=0;n<e.length;n++)if(f(e[n]))return t}}return-1})((0,s.toArray)(t.cells)));let n=t.cells.get(e),o=(t=>{const e=p(t.toJSON().source);for(let t=e.length-1;t>=0;t--)if(e[t]===h.substr(0,h.length-1)){let n=0;for(let s=0;s<t-1;s++)n+=e[s].length+1;return n}for(let t=e.length-1;t>=0;t--)if(n=e[t],f(n)&&(n.includes("__future__")||-1!==n.split(" ").indexOf("import")||n.includes("import_all_names"))&&(t===e.length-1||_(e[t+1]))){let n=0;for(let s=0;s<=t;s++)n+=e[s].length+1;return n}var n;return-1})(t.cells.get(e));return-1===o&&(n=this._context.model.contentFactory.createCodeCell({cell:{source:`${y}\n\n${h}`,cell_type:"code",metadata:{}}}),this._context.model.cells.insert(e,n),o=y.length+1),n.metadata.set("tags",[d]),{cellIndex:e,position:o}}_insertImport(t){let e=null;Y||this._settings.get("disableNotification").user?e=Promise.resolve(t):(e=this._launchDialog(t),Y=!0);const{model:n}=this._context,{position:s,cellIndex:o}=this._findImportCoordinates(),l=n.cells.get(o),r=-1===s?l.value.text.length:s;let i=0===l.value.text.length?t:`${t}\n`;return 0!==r&&"\n"!==l.value.text[r-1]&&(i=`\n${i}`),e}_sendFormatCodeMsg(t){const e=s.ArrayExt.findFirstIndex((0,s.toArray)(this._context.model.cells),((t,e)=>{const n=t.metadata.get("tags");return!(!n||-1===n.indexOf(d))}));if(-1!==e){const n=this._context.model.cells.get(e).toJSON().source,s=this._comms["pyflyby.format_imports"];s&&!s.isDisposed&&s.send({input_code:n,imports:t,type:m})}}_getCommMsgHandler(){return t=>{const e=t.content.data;switch(e.type){case u:{const t=e.missing_imports;this._insertImport(t).then((t=>{this._sendFormatCodeMsg(t)}));break}case m:this._formatImports(e);break;case g:this._initializeComms().catch(console.error)}}}async _initializeComms(){if(!this._sessionContext.session)return;const{kernel:t}=this._sessionContext.session;if(!t)return;const e=t.createComm("pyflyby.missing_imports");e.onMsg=this._getCommMsgHandler();try{e.open()}catch(t){console.error(`Unable to open PYFLYBY comm - ${t}`)}const n=t.createComm(m);n.onMsg=this._getCommMsgHandler(),n.onClose=t=>{const e=t.content.comm_id;delete this._comms[e]},this._comms["pyflyby.format_imports"]=n;try{n.open()}catch(t){console.error(`Unable to open PYFLYBY comm - ${t}`)}return t.registerCommTarget(g,((t,e)=>{t.onMsg=this._getCommMsgHandler()})),Promise.resolve()}_formatImports(t){const{formatted_code:e}=t,n=s.ArrayExt.findFirstIndex((0,s.toArray)(this._context.model.cells),((t,e)=>{const n=t.metadata.get("tags");return!(!n||-1===n.indexOf(d))}));if(-1!==n){const t=this._context.model.cells.get(n);t.value.remove(0,t.value.text.length),t.value.insert(0,e)}}async _handleKernelChange(t,e){return await this._initializeComms()}_handleKernelStatusChange(t,e){return"restarting"===e?this._initializeComms():null}}class S{constructor(t){this._settingRegistry=null,this._settingRegistry=t,this._loadSettings().catch(console.error)}async _loadSettings(){try{await this._settingRegistry.load("@deshaw/jupyterlab-pyflyby:plugin"),C("Successfully loaded PYFLYBY extension settings")}catch(t){console.error("Settings could not be loaded")}}createNew(t,e){return new E(e,t,this._settingRegistry)}}async function v(){try{await x("install-pyflyby",{method:"POST"})}catch(t){const e=await t.json();console.error(e.result)}}const k=c().createElement("div",null,c().createElement("p",null,"To use @deshaw/jupyterlab-pyflyby,"," ",c().createElement("a",{href:"https://github.com/deshaw/pyflyby/blob/master/README.rst",style:{color:"#0000EE"},target:"_blank",rel:"noopener noreferrer"},"pyflyby")," ","ipython extension needs to be installed."),c().createElement("br",null),c().createElement("p",null,'Clicking on "Install" will run following command'),c().createElement("div",{style:{font:"monospace",color:"#ffffff",backgroundColor:"#000000",marginTop:"5px"}},"$ py pyflyby.install_in_ipython_config_file"),c().createElement("br",null)),B={id:"@deshaw/jupyterlab-pyflyby:plugin",autoStart:!0,requires:[r.ISettingRegistry],activate:async function(t,e){console.log("JupyterLab extension @deshaw/jupyterlab-pyflyby is activated!");const n=await e.load("@deshaw/jupyterlab-pyflyby:plugin"),s=n.get("enabled").user||n.get("enabled").composite,o=n.get("installDialogDisplayed").user;s&&"loaded"!==await async function(){return(await x("pyflyby-status")).status}()&&(o||(await(0,l.showDialog)({title:"Installation required",body:k,buttons:[l.Dialog.okButton({label:"Install"}),l.Dialog.cancelButton({label:"Cancel",displayType:"default"})],defaultButton:0})).button.accept?await v():await async function(t){try{await x("disable-pyflyby",{method:"POST",mode:"cors",cache:"no-cache",credentials:"include",headers:{"Content-type":"application/x-www-form-urlencoded"},body:new URLSearchParams("installDialogDisplayed=true")})}catch(t){const e=await t.json();console.error(e.result)}await t.reload("@deshaw/jupyterlab-pyflyby:plugin")}(e)),t.docRegistry.addWidgetExtension("Notebook",new S(e))}}}}]);