{"version":3,"sources":["StreamlitQueryBuilder.tsx","index.tsx"],"names":["StreamlitQueryBuilder","render","fields","props","args","onQueryChange","logQuery","query","Streamlit","setComponentValue","formatQuery","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"iQASMA,E,4MAEGC,OAAS,WAEd,IAAMC,EAAS,EAAKC,MAAMC,KAAX,OAEf,OACE,cAAC,IAAD,CAAcF,OAAQA,EAAQG,cAAe,EAAKC,Y,EAI9CA,SAAW,SAACC,GAChBC,IAAUC,kBAAkBC,sBAAYH,EAAO,S,YAZjBI,KAiBrBC,cAAwBZ,GCrBvCa,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5e6cc0f5.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport QueryBuilder from 'react-querybuilder'\nimport { formatQuery } from 'react-querybuilder';\n\nclass StreamlitQueryBuilder extends StreamlitComponentBase {\n\n  public render = (): ReactNode => {\n\n    const fields = this.props.args[\"fields\"]\n\n    return (\n      <QueryBuilder fields={fields} onQueryChange={this.logQuery} />\n    )\n  }\n\n  private logQuery = (query: any): void => {\n      Streamlit.setComponentValue(formatQuery(query, 'sql'))\n  }\n\n}\n\nexport default withStreamlitConnection(StreamlitQueryBuilder)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport './styles.css'\nimport StreamlitQueryBuilder from \"./StreamlitQueryBuilder\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitQueryBuilder />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}