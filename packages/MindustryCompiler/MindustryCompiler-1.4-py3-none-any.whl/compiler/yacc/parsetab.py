
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'Affectaction ArobasedInfo CloseCurlyBracket CloseParenthesis Comma Comparison DefFun Dot Else ElseIf EndLine ID If Import Jump Number OpenCurlyBracket OpenParenthesis RefJump Return Stringlines : linelines : lines linesline : noLinenoLine : EndLineline : asmInstr asmValideInstructions EndLineasmInstr : IDline : ID EndLineasmValideInstructions : infoasmValideInstructions : asmValideInstructions infoinfo : IDinfo : Number\n            | String\n            | ArobasedInfo\n    dottedID : IDdottedID : dottedID Dot IDline : returnedVars Affectaction dottedID OpenParenthesis arguments CloseParenthesisline : dottedID OpenParenthesis arguments CloseParenthesisnoLine : dottedID OpenParenthesis arguments CloseParenthesis OpenCurlyBracket funScope lines CloseCurlyBracketfunScope : lines : Return argumentsreturnedVars : IDreturnedVars : returnedVars Comma IDarguments : arguments : infoarguments : arguments Comma infolines : ifBlocklines : ifBlock elseBlocklines : ifBlock elifslines : ifBlock elifs elseBlockelifs : elseIfBlockelifs : elifs elseIfBlockelseIfBlock : Else ifBlockelseBlock : Else OpenCurlyBracket lines CloseCurlyBracketifBlock : If asmCondition OpenCurlyBracket lines CloseCurlyBracketelseIfBlock : ElseIf asmCondition OpenCurlyBracket lines CloseCurlyBracketnoLine : Import ToImportsToImports : IDToImports : ToImports Comma IDline : RefJump EndLineline : jumpjump : Jump ID asmCondition EndLineasmCondition : info Comparison infojump : Jump ID EndLineline : Jump Number asmCondition EndLineasmCondition : ID info info'
    
_lr_action_items = {'Return':([0,1,2,3,4,5,7,12,16,17,18,19,20,21,22,23,24,26,30,35,41,42,44,45,46,47,49,58,59,63,64,65,67,68,69,70,73,74,75,77,78,79,80,81,82,83,],[3,3,-1,-23,-26,-3,-4,-40,3,-20,-24,-10,-11,-12,-13,-27,-28,-30,-7,-39,-36,-37,-29,-31,3,-32,-5,-43,3,-25,3,3,-17,-44,-41,3,-38,-33,3,-19,-34,-35,-16,3,3,-18,]),'ID':([0,1,2,3,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,49,50,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,77,78,79,80,81,82,83,],[8,8,-1,19,-26,-3,19,-4,-6,-40,37,40,42,8,-20,-24,-10,-11,-12,-13,-27,-28,-30,40,19,-8,-7,52,53,19,55,-39,40,40,19,-36,-37,19,-29,-31,8,-32,-5,-9,-43,8,19,19,73,-25,8,8,19,-17,-44,-41,8,-38,-33,8,-19,-34,-35,-16,8,8,-18,]),'RefJump':([0,1,2,3,4,5,7,12,16,17,18,19,20,21,22,23,24,26,30,35,41,42,44,45,46,47,49,58,59,63,64,65,67,68,69,70,73,74,75,77,78,79,80,81,82,83,],[11,11,-1,-23,-26,-3,-4,-40,11,-20,-24,-10,-11,-12,-13,-27,-28,-30,-7,-39,-36,-37,-29,-31,11,-32,-5,-43,11,-25,11,11,-17,-44,-41,11,-38,-33,11,-19,-34,-35,-16,11,11,-18,]),'Jump':([0,1,2,3,4,5,7,12,16,17,18,19,20,21,22,23,24,26,30,35,41,42,44,45,46,47,49,58,59,63,64,65,67,68,69,70,73,74,75,77,78,79,80,81,82,83,],[13,13,-1,-23,-26,-3,-4,-40,13,-20,-24,-10,-11,-12,-13,-27,-28,-30,-7,-39,-36,-37,-29,-31,13,-32,-5,-43,13,-25,13,13,-17,-44,-41,13,-38,-33,13,-19,-34,-35,-16,13,13,-18,]),'If':([0,1,2,3,4,5,7,12,16,17,18,19,20,21,22,23,24,25,26,30,35,41,42,44,45,46,47,49,58,59,63,64,65,67,68,69,70,73,74,75,77,78,79,80,81,82,83,],[14,14,-1,-23,-26,-3,-4,-40,14,-20,-24,-10,-11,-12,-13,-27,-28,14,-30,-7,-39,-36,-37,-29,-31,14,-32,-5,-43,14,-25,14,14,-17,-44,-41,14,-38,-33,14,-19,-34,-35,-16,14,14,-18,]),'EndLine':([0,1,2,3,4,5,7,8,11,12,16,17,18,19,20,21,22,23,24,26,28,29,30,35,37,41,42,44,45,46,47,49,50,56,57,58,59,63,64,65,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,],[7,7,-1,-23,-26,-3,-4,30,35,-40,7,-20,-24,-10,-11,-12,-13,-27,-28,-30,49,-8,-7,-39,58,-36,-37,-29,-31,7,-32,-5,-9,68,69,-43,7,-25,7,7,-17,-44,-41,7,-42,-45,-38,-33,7,-19,-34,-35,-16,7,7,-18,]),'Import':([0,1,2,3,4,5,7,12,16,17,18,19,20,21,22,23,24,26,30,35,41,42,44,45,46,47,49,58,59,63,64,65,67,68,69,70,73,74,75,77,78,79,80,81,82,83,],[15,15,-1,-23,-26,-3,-4,-40,15,-20,-24,-10,-11,-12,-13,-27,-28,-30,-7,-39,-36,-37,-29,-31,15,-32,-5,-43,15,-25,15,15,-17,-44,-41,15,-38,-33,15,-19,-34,-35,-16,15,15,-18,]),'$end':([1,2,3,4,5,7,12,16,17,18,19,20,21,22,23,24,26,30,35,41,42,44,45,47,49,58,63,67,68,69,73,74,78,79,80,83,],[0,-1,-23,-26,-3,-4,-40,-2,-20,-24,-10,-11,-12,-13,-27,-28,-30,-7,-39,-36,-37,-29,-31,-32,-5,-43,-25,-17,-44,-41,-38,-33,-34,-35,-16,-18,]),'CloseCurlyBracket':([2,3,4,5,7,12,16,17,18,19,20,21,22,23,24,26,30,35,41,42,44,45,47,49,58,63,64,67,68,69,70,73,74,75,78,79,80,82,83,],[-1,-23,-26,-3,-4,-40,-2,-20,-24,-10,-11,-12,-13,-27,-28,-30,-7,-39,-36,-37,-29,-31,-32,-5,-43,-25,74,-17,-44,-41,78,-38,-33,79,-34,-35,-16,83,-18,]),'Comma':([3,8,9,17,18,19,20,21,22,33,41,42,53,54,63,66,73,76,],[-23,-21,32,43,-24,-10,-11,-12,-13,-23,62,-37,-22,43,-25,-23,-38,43,]),'Number':([3,6,8,13,14,19,20,21,22,27,28,29,33,36,37,40,43,50,60,61,66,],[20,20,-6,36,20,-10,-11,-12,-13,20,20,-8,20,20,20,20,20,-9,20,20,20,]),'String':([3,6,8,14,19,20,21,22,27,28,29,33,36,37,40,43,50,60,61,66,],[21,21,-6,21,-10,-11,-12,-13,21,21,-8,21,21,21,21,21,-9,21,21,21,]),'ArobasedInfo':([3,6,8,14,19,20,21,22,27,28,29,33,36,37,40,43,50,60,61,66,],[22,22,-6,22,-10,-11,-12,-13,22,22,-8,22,22,22,22,22,-9,22,22,22,]),'Else':([4,24,26,45,47,78,79,],[25,25,-30,-31,-32,-34,-35,]),'ElseIf':([4,24,26,45,47,78,79,],[27,27,-30,-31,-32,-34,-35,]),'Affectaction':([8,9,53,],[-21,31,-22,]),'OpenParenthesis':([8,10,51,52,55,],[-14,33,66,-14,-15,]),'Dot':([8,10,51,52,55,],[-14,34,34,-14,-15,]),'CloseParenthesis':([18,19,20,21,22,33,54,63,66,76,],[-24,-10,-11,-12,-13,-23,67,-25,-23,80,]),'OpenCurlyBracket':([19,20,21,22,25,38,48,67,71,72,],[-10,-11,-12,-13,46,59,65,77,-42,-45,]),'Comparison':([20,21,22,39,40,],[-11,-12,-13,60,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lines':([0,1,16,46,59,64,65,70,75,81,82,],[1,16,16,64,70,16,75,16,16,82,16,]),'line':([0,1,16,46,59,64,65,70,75,81,82,],[2,2,2,2,2,2,2,2,2,2,2,]),'ifBlock':([0,1,16,25,46,59,64,65,70,75,81,82,],[4,4,4,47,4,4,4,4,4,4,4,4,]),'noLine':([0,1,16,46,59,64,65,70,75,81,82,],[5,5,5,5,5,5,5,5,5,5,5,]),'asmInstr':([0,1,16,46,59,64,65,70,75,81,82,],[6,6,6,6,6,6,6,6,6,6,6,]),'returnedVars':([0,1,16,46,59,64,65,70,75,81,82,],[9,9,9,9,9,9,9,9,9,9,9,]),'dottedID':([0,1,16,31,46,59,64,65,70,75,81,82,],[10,10,10,51,10,10,10,10,10,10,10,10,]),'jump':([0,1,16,46,59,64,65,70,75,81,82,],[12,12,12,12,12,12,12,12,12,12,12,]),'arguments':([3,33,66,],[17,54,76,]),'info':([3,6,14,27,28,33,36,37,40,43,60,61,66,],[18,29,39,39,50,18,39,39,61,63,71,72,18,]),'elseBlock':([4,24,],[23,44,]),'elifs':([4,],[24,]),'elseIfBlock':([4,24,],[26,45,]),'asmValideInstructions':([6,],[28,]),'asmCondition':([14,27,36,37,],[38,48,56,57,]),'ToImports':([15,],[41,]),'funScope':([77,],[81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> lines","S'",1,None,None,None),
  ('lines -> line','lines',1,'p_lines_one','p_functionYacc.py',25),
  ('lines -> lines lines','lines',2,'p_lines_lines','p_functionYacc.py',30),
  ('line -> noLine','line',1,'p_lines_empty','p_functionYacc.py',35),
  ('noLine -> EndLine','noLine',1,'p_noLine','p_functionYacc.py',40),
  ('line -> asmInstr asmValideInstructions EndLine','line',3,'p_lineAsm','p_functionYacc.py',45),
  ('asmInstr -> ID','asmInstr',1,'p_asmInstr','p_functionYacc.py',50),
  ('line -> ID EndLine','line',2,'p_lineEnd','p_functionYacc.py',55),
  ('asmValideInstructions -> info','asmValideInstructions',1,'p_asmFollowInstructions_one','p_functionYacc.py',60),
  ('asmValideInstructions -> asmValideInstructions info','asmValideInstructions',2,'p_asmFollowInstructions_many','p_functionYacc.py',65),
  ('info -> ID','info',1,'p_info_id','p_functionYacc.py',70),
  ('info -> Number','info',1,'p_info','p_functionYacc.py',75),
  ('info -> String','info',1,'p_info','p_functionYacc.py',76),
  ('info -> ArobasedInfo','info',1,'p_info','p_functionYacc.py',77),
  ('dottedID -> ID','dottedID',1,'p_dottedID_one','p_functionYacc.py',83),
  ('dottedID -> dottedID Dot ID','dottedID',3,'p_dottedID_many','p_functionYacc.py',88),
  ('line -> returnedVars Affectaction dottedID OpenParenthesis arguments CloseParenthesis','line',6,'p_runFuncReturnArgs','p_functionYacc.py',98),
  ('line -> dottedID OpenParenthesis arguments CloseParenthesis','line',4,'p_runFunc','p_functionYacc.py',103),
  ('noLine -> dottedID OpenParenthesis arguments CloseParenthesis OpenCurlyBracket funScope lines CloseCurlyBracket','noLine',8,'p_defFun','p_functionYacc.py',108),
  ('funScope -> <empty>','funScope',0,'p_funScope','p_functionYacc.py',113),
  ('lines -> Return arguments','lines',2,'p_handleReturn','p_functionYacc.py',118),
  ('returnedVars -> ID','returnedVars',1,'p_returnedVars_one','p_functionYacc.py',123),
  ('returnedVars -> returnedVars Comma ID','returnedVars',3,'p_returnedVars_many','p_functionYacc.py',128),
  ('arguments -> <empty>','arguments',0,'p_args_empty','p_functionYacc.py',133),
  ('arguments -> info','arguments',1,'p_args_one','p_functionYacc.py',138),
  ('arguments -> arguments Comma info','arguments',3,'p_args_many','p_functionYacc.py',143),
  ('lines -> ifBlock','lines',1,'p_linesFromIf','p_functionYacc.py',148),
  ('lines -> ifBlock elseBlock','lines',2,'p_linesFromIfElse','p_functionYacc.py',153),
  ('lines -> ifBlock elifs','lines',2,'p_linesFromIfElseElseIf','p_functionYacc.py',158),
  ('lines -> ifBlock elifs elseBlock','lines',3,'p_linesFromIfElseElseIfElse','p_functionYacc.py',163),
  ('elifs -> elseIfBlock','elifs',1,'p_elifs_one','p_functionYacc.py',168),
  ('elifs -> elifs elseIfBlock','elifs',2,'p_elifs_many','p_functionYacc.py',173),
  ('elseIfBlock -> Else ifBlock','elseIfBlock',2,'p_elseIfBlock','p_functionYacc.py',178),
  ('elseBlock -> Else OpenCurlyBracket lines CloseCurlyBracket','elseBlock',4,'p_elseInstr','p_functionYacc.py',183),
  ('ifBlock -> If asmCondition OpenCurlyBracket lines CloseCurlyBracket','ifBlock',5,'p_ifBlock','p_functionYacc.py',188),
  ('elseIfBlock -> ElseIf asmCondition OpenCurlyBracket lines CloseCurlyBracket','elseIfBlock',5,'p_elifBlock','p_functionYacc.py',193),
  ('noLine -> Import ToImports','noLine',2,'p_importStd','p_functionYacc.py',198),
  ('ToImports -> ID','ToImports',1,'p_toImports_one','p_functionYacc.py',203),
  ('ToImports -> ToImports Comma ID','ToImports',3,'p_toImports_many','p_functionYacc.py',208),
  ('line -> RefJump EndLine','line',2,'p_ref','p_functionYacc.py',213),
  ('line -> jump','line',1,'p_lineJump','p_functionYacc.py',218),
  ('jump -> Jump ID asmCondition EndLine','jump',4,'p_jump_asmCondition','p_functionYacc.py',223),
  ('asmCondition -> info Comparison info','asmCondition',3,'p_comparison','p_functionYacc.py',228),
  ('jump -> Jump ID EndLine','jump',3,'p_jump_always','p_functionYacc.py',233),
  ('line -> Jump Number asmCondition EndLine','line',4,'p_jump_asmNoRef','p_functionYacc.py',238),
  ('asmCondition -> ID info info','asmCondition',3,'p_asmCondition','p_functionYacc.py',243),
]
